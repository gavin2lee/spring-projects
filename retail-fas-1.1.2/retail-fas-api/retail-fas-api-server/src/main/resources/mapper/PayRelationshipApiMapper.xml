<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wonhigh.retail.fas.api.dal.PayRelationshipApiMapper" >
  <resultMap id="BaseResultMap" type="cn.wonhigh.retail.fas.common.model.PayRelationship" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="business_bill_no" property="businessBillNo" jdbcType="CHAR" />
    <result column="business_bill_type" property="businessBillType" jdbcType="INTEGER" />
    <result column="business_biz_type" property="businessBizType" jdbcType="INTEGER" />
    <result column="item_no" property="itemNo" jdbcType="CHAR" />
    <result column="item_code" property="itemCode" jdbcType="CHAR" />
    <result column="item_name" property="itemName" jdbcType="VARCHAR" />
    <result column="buyer_no" property="buyerNo" jdbcType="CHAR" />
    <result column="buyer_name" property="buyerName" jdbcType="VARCHAR" />
    <result column="saler_no" property="salerNo" jdbcType="CHAR" />
    <result column="saler_name" property="salerName" jdbcType="VARCHAR" />
    <result column="supplier_no" property="supplierNo" jdbcType="CHAR" />
    <result column="supplier_name" property="supplierName" jdbcType="VARCHAR" />
    <result column="brand_no" property="brandNo" jdbcType="CHAR" />
    <result column="brand_name" property="brandName" jdbcType="VARCHAR" />
    <result column="category_no" property="categoryNo" jdbcType="CHAR" /> 
    <result column="category_name" property="categoryName" jdbcType="VARCHAR" />
    <result column="bill_date" property="billDate" jdbcType="DATE" />
    <result column="due_date" property="dueDate" jdbcType="DATE" />
    <result column="qty" property="qty" jdbcType="INTEGER" />
    <result column="send_qty" property="sendQty" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
    <result column="no_pay_amount" property="noPayAmount" jdbcType="DECIMAL" />
    <result column="prepay_amount" property="prepayAmount" jdbcType="DECIMAL" />
    <result column="pay_status" property="payStatus" jdbcType="TINYINT" />
    <result column="audit_status" property="auditStatus" jdbcType="TINYINT" />
    <result column="balance_no" property="balanceNo" jdbcType="CHAR" />
    <result column="settlement_number" property="settlementNumber" jdbcType="VARCHAR" />
    <result column="supplier_amount" property="supplierAmount" jdbcType="DECIMAL" />
    <result column="order_type" property="orderType" jdbcType="TINYINT" />
    <result column="tag_amount" property="tagAmount" jdbcType="DECIMAL" />
    <result column="supplier_contract_discount_no" property="supplierContractDiscountNo" jdbcType="CHAR" />
    <result column="company_contract_discount_no" property="companyContractDiscountNo" jdbcType="CHAR" />
    <result column="algorithm" property="algorithm" jdbcType="CHAR" />
    <result column="zone_algorithm" property="zoneAlgorithm" jdbcType="CHAR" />
    <result column="supplier_discount1" property="supplierDiscount1" jdbcType="DECIMAL" />
    <result column="supplier_discount2" property="supplierDiscount2" jdbcType="DECIMAL" />
    <result column="zone_price_basis" property="zonePriceBasis" jdbcType="TINYINT" />
    <result column="zone_original_discount1" property="zoneOriginalDiscount1" jdbcType="DECIMAL" />
    <result column="zone_original_discount2" property="zoneOriginalDiscount2" jdbcType="DECIMAL" />
    <result column="zone_add_price" property="zoneAddPrice" jdbcType="DECIMAL" />
    <result column="zone_discount" property="zoneDiscount" jdbcType="DECIMAL" />
    <result column="zone_amount" property="zoneAmount" jdbcType="DECIMAL" />
    <result column="order_no" property="orderNo" jdbcType="CHAR" />
    <result column="supplier_send_date" property="supplierSendDate" jdbcType="DATE" />
    <result column="store_no" property="storeNo" jdbcType="CHAR" />
    <result column="store_name" property="storeName" jdbcType="VARCHAR" />
    <result column="order_unit_no" property="orderUnitNo" jdbcType="CHAR" />
    <result column="order_unit_name" property="orderUnitName" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="item_code" property="itemCode" jdbcType="VARCHAR" />
    <result column="item_name" property="itemName" jdbcType="DECIMAL" />
    <result column="zone_cost" property="zoneCost" jdbcType="DECIMAL" />
    <result column="diff_amount" property="diffAmount" jdbcType="DECIMAL" />
    <result column="not_tax_diff_amount" property="notTaxDiffAmount" jdbcType="DECIMAL" />
    <result column="item_tag_amount" property="itemTagAmount" jdbcType="DECIMAL" />
    <result column="tag_price" property="tagPrice" jdbcType="DECIMAL" />
    <result column="cost" property="cost" jdbcType="DECIMAL" />
    <result column="one_level_category_name" property="oneLevelCategoryName" jdbcType="VARCHAR" />
    <result column="balance_discount1" property="balanceDiscount1" jdbcType="DECIMAL" />
    <result column="balance_discount2" property="balanceDiscount2" jdbcType="DECIMAL" />
    <result column="not_tax_amount" property="notTaxAmount" jdbcType="DECIMAL" />
    <result column="not_tax_supplier_amount" property="notTaxSupplierAmount" jdbcType="DECIMAL" />
    <result column="not_tax_algorithm" property="notTaxAlgorithm" jdbcType="CHAR" />
    <result column="balance_flag" property="balanceFlag" jdbcType="TINYINT" />
  </resultMap>
  <resultMap id="ContractDiscountMap" type="cn.wonhigh.retail.fas.common.model.ContractDiscount" >
    <result column="price_basis" property="priceBasis" jdbcType="TINYINT" />
    <result column="contract_discount_no" property="contractDiscountNo" jdbcType="CHAR" />
    <result column="discount1" property="discount1" jdbcType="DECIMAL" />
    <result column="discount2" property="discount2" jdbcType="DECIMAL" />
    <result column="add_price" property="addPrice" jdbcType="DECIMAL" />
    <result column="algorithm" property="algorithm" jdbcType="CHAR" />
    <result column="not_tax_algorithm" property="notTaxAlgorithm" jdbcType="CHAR" />
  </resultMap>
  <insert id="insertSelective" parameterType="cn.wonhigh.retail.fas.common.model.PayRelationship" >
    INSERT INTO pay_relationship
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="businessBillNo != null" >
        business_bill_no,
      </if>
      <if test="refAsnBillNo != null" >
        ref_asn_bill_no,
      </if>
      <if test="businessBillType != null" >
        business_bill_type,
      </if>
      <if test="businessBizType != null" >
        business_biz_type,
      </if>
      <if test="buyerNo != null" >
        buyer_no,
      </if>
      <if test="buyerName != null" >
        buyer_name,
      </if>
      <if test="salerNo != null" >
        saler_no,
      </if>
      <if test="salerName != null" >
        saler_name,
      </if>
      <if test="supplierNo != null" >
        supplier_no,
      </if>
      <if test="supplierName != null" >
        supplier_name,
      </if>
      <if test="brandNo != null" >
        brand_no,
      </if>
      <if test="brandName != null" >
        brand_name,
      </if>
      <if test="categoryNo != null" >
        category_no,
      </if>
      <if test="categoryName != null" >
        category_name,
      </if>
      <if test="billDate != null" >
        bill_date,
      </if>
      <if test="dueDate != null" >
        due_date,
      </if>
      <if test="qty != null" >
        qty,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="payAmount != null" >
        pay_amount,
      </if>
      <if test="noPayAmount != null" >
        no_pay_amount,
      </if>
      <if test="prepayAmount != null" >
        prepay_amount,
      </if>
      <if test="payStatus != null" >
        pay_status,
      </if>
      <if test="auditStatus != null" >
        audit_status,
      </if>
      <if test="balanceNo != null" >
        balance_no,
      </if>
      <if test="settlementNumber != null" >
        settlement_number,
      </if>
      <if test="supplierAmount != null" >
        supplier_amount,
      </if>
      <if test="orderType != null" >
        order_type,
      </if>
      <if test="tagAmount != null" >
        tag_amount,
      </if>
      <if test="supplierContractDiscountNo != null" >
        supplier_contract_discount_no,
      </if>
      <if test="companyContractDiscountNo != null" >
        company_contract_discount_no,
      </if>
      <if test="algorithm != null" >
        algorithm,
      </if>
      <if test="zoneAlgorithm != null" >
        zone_algorithm,
      </if>
      <if test="supplierDiscount1 != null" >
        supplier_discount1,
      </if>
      <if test="supplierDiscount2 != null" >
        supplier_discount2,
      </if>
      <if test="zonePriceBasis != null" >
        zone_price_basis,
      </if>
      <if test="zoneOriginalDiscount1 != null" >
        zone_original_discount1,
      </if>
      <if test="zoneOriginalDiscount2 != null" >
        zone_original_discount2,
      </if>
      <if test="zoneAddPrice != null" >
        zone_add_price,
      </if>
      <if test="zoneDiscount != null" >
        zone_discount,
      </if>
      <if test="zoneAmount != null" >
        zone_amount,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="supplierSendDate != null" >
        supplier_send_date,
      </if>
      <if test="storeNo != null" >
        store_no,
      </if>
      <if test="storeName != null" >
        store_name,
      </if>
      <if test="orderUnitNo != null" >
        order_unit_no,
      </if>
      <if test="orderUnitName != null" >
        order_unit_name,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="notTaxAmount != null" >
        not_tax_amount,
      </if>
      <if test="notTaxSupplierAmount != null" >
        not_tax_supplier_amount,
      </if>
      <if test="notTaxAlgorithm != null" >
        not_tax_algorithm,
      </if>
      <if test="balanceDiscount1 != null" >
        balance_discount1,
      </if>
      <if test="balanceDiscount2 != null" >
        balance_discount2,
      </if>
      <if test="balanceFlag != null" >
        balance_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="businessBillNo != null" >
        #{businessBillNo,jdbcType=CHAR},
      </if>
      <if test="refAsnBillNo != null" >
         #{refAsnBillNo,jdbcType=CHAR},
      </if>
      <if test="businessBillType != null" >
        #{businessBillType,jdbcType=INTEGER},
      </if>
      <if test="businessBizType != null" >
        #{businessBizType,jdbcType=INTEGER},
      </if>
      <if test="buyerNo != null" >
        #{buyerNo,jdbcType=CHAR},
      </if>
      <if test="buyerName != null" >
        #{buyerName,jdbcType=VARCHAR},
      </if>
      <if test="salerNo != null" >
        #{salerNo,jdbcType=CHAR},
      </if>
      <if test="salerName != null" >
        #{salerName,jdbcType=VARCHAR},
      </if>
      <if test="supplierNo != null" >
        #{supplierNo,jdbcType=CHAR},
      </if>
      <if test="supplierName != null" >
        #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="brandNo != null" >
        #{brandNo,jdbcType=CHAR},
      </if>
      <if test="brandName != null" >
        #{brandName,jdbcType=VARCHAR},
      </if>
      <if test="categoryNo != null" >
        #{categoryNo,jdbcType=CHAR},
      </if>
      <if test="categoryName != null" >
        #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="billDate != null" >
        #{billDate,jdbcType=DATE},
      </if>
      <if test="dueDate != null" >
        #{dueDate,jdbcType=DATE},
      </if>
      <if test="qty != null" >
        #{qty,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="payAmount != null" >
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="noPayAmount != null" >
        #{noPayAmount,jdbcType=DECIMAL},
      </if>
      <if test="prepayAmount != null" >
        #{prepayAmount,jdbcType=DECIMAL},
      </if>
      <if test="payStatus != null" >
        #{payStatus,jdbcType=TINYINT},
      </if>
      <if test="auditStatus != null" >
        #{auditStatus,jdbcType=TINYINT},
      </if>
      <if test="balanceNo != null" >
        #{balanceNo,jdbcType=CHAR},
      </if>
      <if test="settlementNumber != null" >
        #{settlementNumber,jdbcType=VARCHAR},
      </if>
      <if test="supplierAmount != null" >
        #{supplierAmount,jdbcType=DECIMAL},
      </if>
      <if test="orderType != null" >
        #{orderType,jdbcType=TINYINT},
      </if>
      <if test="tagAmount != null" >
        #{tagAmount,jdbcType=DECIMAL},
      </if>
      <if test="supplierContractDiscountNo != null" >
        #{supplierContractDiscountNo,jdbcType=CHAR},
      </if>
      <if test="companyContractDiscountNo != null" >
        #{companyContractDiscountNo,jdbcType=CHAR},
      </if>
      <if test="algorithm != null" >
        #{algorithm,jdbcType=CHAR},
      </if>
      <if test="zoneAlgorithm != null" >
        #{zoneAlgorithm,jdbcType=CHAR},
      </if>
      <if test="supplierDiscount1 != null" >
        #{supplierDiscount1,jdbcType=DECIMAL},
      </if>
      <if test="supplierDiscount2 != null" >
        #{supplierDiscount2,jdbcType=DECIMAL},
      </if>
      <if test="zonePriceBasis != null" >
        #{zonePriceBasis,jdbcType=TINYINT},
      </if>
      <if test="zoneOriginalDiscount1 != null" >
        #{zoneOriginalDiscount1,jdbcType=DECIMAL},
      </if>
      <if test="zoneOriginalDiscount2 != null" >
        #{zoneOriginalDiscount2,jdbcType=DECIMAL},
      </if>
      <if test="zoneAddPrice != null" >
        #{zoneAddPrice,jdbcType=DECIMAL},
      </if>
      <if test="zoneDiscount != null" >
        #{zoneDiscount,jdbcType=DECIMAL},
      </if>
      <if test="zoneAmount != null" >
        #{zoneAmount,jdbcType=DECIMAL},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=CHAR},
      </if>
      <if test="supplierSendDate != null" >
        #{supplierSendDate,jdbcType=DATE},
      </if>
      <if test="storeNo != null" >
        #{storeNo,jdbcType=CHAR},
      </if>
      <if test="storeName != null" >
        #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="orderUnitNo != null" >
        #{orderUnitNo,jdbcType=CHAR},
      </if>
      <if test="orderUnitName != null" >
        #{orderUnitName,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="notTaxAmount != null" >
        #{notTaxAmount,jdbcType=DECIMAL},
      </if>
      <if test="notTaxSupplierAmount != null" >
        #{notTaxSupplierAmount,jdbcType=DECIMAL},
      </if>
      <if test="notTaxAlgorithm != null" >
        #{notTaxAlgorithm,jdbcType=CHAR},
      </if>
      <if test="balanceDiscount1 != null" >
        #{balanceDiscount1,jdbcType=DECIMAL},
      </if>
      <if test="balanceDiscount2 != null" >
        #{balanceDiscount2,jdbcType=DECIMAL},
      </if>
      <if test="balanceFlag != null" >
        #{balanceFlag,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  
  <select id="selectSumBuyBalanceAmount" resultMap="BaseResultMap" parameterType="map" >
    SELECT SUM(tag_price*send_qty) tag_amount,SUM(send_qty) qty,SUM(cost*send_qty) amount FROM bill_buy_balance
	WHERE original_bill_no = #{params.businessBillNo}
	AND buyer_no = #{params.buyerNo}	
  </select>
  <select id="selectSumSaleBalanceAmount" resultMap="BaseResultMap" parameterType="java.lang.String" >
    SELECT SUM(tag_price*send_qty) tag_amount,SUM(send_qty) qty,SUM(cost*send_qty) amount FROM bill_sale_balance
	WHERE original_bill_no = #{businessBillNo}
  </select>
  <select id="selectByBiz" resultMap="BaseResultMap" parameterType="map" >
    SELECT * FROM pay_relationship WHERE 1 = 1
    <if test="null != params">
    	<if test="null != params.businessBillNo and ''!=params.businessBillNo">
    		AND business_bill_no = #{params.businessBillNo}
    	</if>
    </if>
  </select>
  <select id="selectAsnDueDateByBillNo" resultType="java.util.Date" parameterType="cn.wonhigh.retail.fas.common.model.PayRelationship" >
	SELECT 
	  CASE
	    term_type 
	    WHEN 1 
	    THEN 
	    (SELECT 
	      CONCAT(LEFT(bill_date, 8), fixed_day)) 
	    WHEN 2 
	    THEN 
	    (SELECT 
	      DATE_ADD(bill_date, INTERVAL days DAY)) 
	    WHEN 3 
	    THEN 
	    (SELECT 
	      DATE_ADD(
	        (SELECT 
	          bill_date 
	        FROM
	          bill_invoice 
	        WHERE FIND_IN_SET(balance_no, ref_bill_no)),
	        INTERVAL days DAY
	      )) 
	    WHEN 4 
	    THEN 
	    (SELECT 
	      DATE_ADD(
	        CONCAT(
	          LEFT(
	            DATE_ADD(bill_date, INTERVAL 1 MONTH),
	            8
	          ),
	          1
	        ),
	        INTERVAL days - 1 DAY
	      )) 
	    WHEN 5 
	    THEN 
	    (SELECT 
	      DATE_ADD(
	        supplier_send_date,
	        INTERVAL days DAY
	      )) 
	    ELSE NULL 
	  END due_date 
	FROM
	  (SELECT 
	    #{billDate} bill_date,
	    #{billDate} supplier_send_date,
	    NULL balance_no,
	    pts.`term_type`,
	    pts.`days`,
	    pts.`fixed_day` 
	  FROM
	     pay_term_supplier pts 
	     WHERE 1 = 1
	     AND pts.`supplier_no` = #{supplierNo}
	     AND pts.`company_no` = #{salerNo}
	     LIMIT 1
	     ) G 
  </select>
  <select id="selectLastContractDiscount" resultMap="ContractDiscountMap" parameterType="map" >
    	SELECT 
    		price_basis,
    		contract_discount_no,
    		discount1,
    		discount2,
    		add_price,
    		algorithm,
    		not_tax_algorithm
     		FROM contract_discount 
     	 WHERE 1=1 
		     AND saler_no = #{params.salerNo}
		     AND buyer_no = #{params.buyerNo}
		     AND brand_no = #{params.brandNo}
		     AND category_no = #{params.categoryNo}
		     AND order_type IN (#{params.orderType},'3')
		     AND contract_discount_type = #{params.contractDiscountType}
		     AND effective_date &lt;= #{params.sendDate}
		     ORDER BY effective_date DESC LIMIT 1
  </select>
  <delete id="deleteByBillNo" parameterType="java.lang.String" >
    DELETE FROM pay_relationship
    WHERE business_bill_no = #{businessBillNo,jdbcType=CHAR}
  </delete>
  
  <select id="selectBuyBalanceList" resultMap="BaseResultMap" parameterType="cn.wonhigh.retail.fas.common.model.PayRelationship" >
	SELECT 
	  b.id,
	  item.tag_price,
	  <if test="null != algorithm and 'A'.toString()==algorithm">
		IFNULL(ROUND(ROUND(ROUND(item.tag_price * ${balanceDiscount1},2) / 1.17,2) * ${balanceDiscount2} *1.17,2),0.00)
	  </if>
 	  <if test="null != algorithm and 'B'.toString()==algorithm">
		IFNULL(ROUND(ROUND(ROUND(item.tag_price * ${balanceDiscount1},0) / 1.17,2) * ${balanceDiscount2} *1.17,2),0.00)
	  </if>
	  <if test="null != algorithm and 'C'.toString()==algorithm">
		IFNULL(ROUND(item.tag_price * ${balanceDiscount1} * ${balanceDiscount2},2),0.00)
	  </if>
	  <if test="null == algorithm">
		IFNULL((SELECT purchase_price FROM `contract_discount` where contract_discount.item_no = b.item_no AND contract_discount.saler_no = b.saler_no AND contract_discount.buyer_no = b.buyer_no AND effective_date &lt;= #{billDate} ORDER BY effective_date DESC LIMIT 1),0.00)
	  </if>
	   cost,
	   <if test="null != notTaxAlgorithm and 'A'.toString()==notTaxAlgorithm">
		IFNULL(ROUND(ROUND(ROUND(ROUND(item.tag_price * ${balanceDiscount1},2) / 1.17,2) * ${balanceDiscount2} ,2) * send_qty,2),0.00)
	  </if>
 	  <if test="null != notTaxAlgorithm and 'B'.toString()==notTaxAlgorithm">
		IFNULL(ROUND(ROUND(ROUND(item.tag_price * ${balanceDiscount1},0) / 1.17,2) * ${balanceDiscount2} * send_qty,2),0.00)
	  </if>
	  <if test="null != notTaxAlgorithm and 'C'.toString()==notTaxAlgorithm">
		IFNULL(ROUND(item.tag_price * ${balanceDiscount1} * ${balanceDiscount2} / 1.17 * send_qty,2),0.00)
	  </if>
	  <if test="null == notTaxAlgorithm or ''.toString()==notTaxAlgorithm">
	   		0.00
	   </if>
	  not_tax_amount
	FROM
	  bill_buy_balance b 
	  INNER JOIN item 
	    ON item.item_no = b.item_no 
	WHERE 1 = 1 
	  AND original_bill_no = #{businessBillNo} 
	  AND buyer_no = #{salerNo} 
  </select>
  
  <select id="selectSaleBalanceList" resultMap="BaseResultMap" parameterType="cn.wonhigh.retail.fas.common.model.PayRelationship" >
    SELECT 
     b.id,
     item.tag_price,
     <if test="null != zonePriceBasis and '1'.toString()==zonePriceBasis">
     	 <if test="null != zoneAlgorithm and 'A'.toString()==zoneAlgorithm">
				IFNULL(ROUND(ROUND(ROUND(item.tag_price * ${zoneOriginalDiscount1},2) / 1.17,2) * ${zoneOriginalDiscount2} *1.17,2),0.00)
		 </if>
	  	 <if test="null != zoneAlgorithm and 'B'.toString()==zoneAlgorithm">
         		IFNULL(ROUND(ROUND(ROUND(item.tag_price * ${zoneOriginalDiscount1},0) / 1.17,2) * ${zoneOriginalDiscount2} *1.17,2),0.00)
		 </if>
		 <if test="null != zoneAlgorithm and 'C'.toString()==zoneAlgorithm">
         		IFNULL(ROUND(item.tag_price * ${zoneOriginalDiscount1} * ${zoneOriginalDiscount2},2),0.00)
		 </if>
		 <if test="null == zoneAlgorithm or '' == zoneAlgorithm">
			 <if test="null != zoneAddPrice">
			 	ROUND(IFNULL(item.tag_price,0.00) + ${zoneAddPrice},2)
			 </if>
			 <if test="null != zoneOriginalDiscount1">
			 	ROUND(IFNULL(item.tag_price,0.00) * ${zoneOriginalDiscount1},2)
			 </if>
		 </if>	 
	 </if>
	 <if test="null != zonePriceBasis and '3'.toString()==zonePriceBasis">
		<if test="null != zoneAddPrice">
		 	ROUND(IFNULL((select cost from bill_buy_balance  where bill_buy_balance.original_bill_no = b.original_bill_no AND bill_buy_balance.item_no = b.item_no AND bill_buy_balance.buyer_no = b.saler_no  LIMIT 1),0.00) + ${zoneAddPrice},2)
		 </if>
		 <if test="null != zoneOriginalDiscount1">
		 	ROUND(IFNULL((select cost from bill_buy_balance  where bill_buy_balance.original_bill_no = b.original_bill_no AND bill_buy_balance.item_no = b.item_no AND bill_buy_balance.buyer_no = b.saler_no LIMIT 1),0.00) * ${zoneOriginalDiscount1},2)
		 </if>
	 </if>
	 <if test="null == zonePriceBasis">
		0.00
	 </if>
	  cost
	
    FROM bill_sale_balance b
    INNER JOIN item 
	    ON item.item_no = b.item_no 
    WHERE 1 = 1
    AND original_bill_no = #{businessBillNo}
  </select>
  
  <select id="selectBuyReceiptList" resultMap="BaseResultMap" parameterType="java.lang.String" >
	SELECT 
	  b.id,
	  s.tag_price,
	  s.cost
	FROM
	  bill_buy_balance b 
	  INNER JOIN bill_sale_balance s
	    ON b.ref_bill_no = s.original_bill_no
	    AND b.item_no = s.item_no 
	WHERE 1 = 1 
	  AND s.original_bill_no = #{businessBillNo} 
	  AND b.bill_type = 1304
  </select>
  
  <select id="selectBuyZoneList" resultMap="BaseResultMap" parameterType="java.lang.String" >
	SELECT 
	  b.id,
	  s.tag_price,
	  s.cost
	FROM
	  bill_buy_balance b 
	  INNER JOIN bill_sale_balance s
	    ON b.original_bill_no = s.original_bill_no
	    AND b.saler_no = s.saler_no
	    AND b.buyer_no = s.buyer_no
	    AND b.item_no = s.item_no 
	WHERE 1 = 1 
	  AND s.original_bill_no = #{businessBillNo} 
  </select>
  
  <select id="selectRefShip" resultMap="BaseResultMap" parameterType="java.lang.String" >
	SELECT 
	  pr.* 
	FROM
	  pay_relationship pr 
	WHERE pr.business_bill_no IN 
	  (SELECT 
	    IF(
	      ref_bill_type = 1301,
	      ref_bill_no,
	      (SELECT 
	        ref_bill_no 
	      FROM
	        bill_buy_balance b1 
	      WHERE b1.original_bill_no = b0.ref_bill_no 
	      LIMIT 1)
	    ) ref_asn_bill_no 
	  FROM
	    (SELECT 
	      ref_bill_no,
	      ref_bill_type 
	    FROM
	      bill_buy_balance 
	    WHERE original_bill_no = #{businessBillNo} 
	    LIMIT 1) b0)
  </select>
  
  <select id="selectBuyAsnDiffList" resultMap="BaseResultMap" parameterType="cn.wonhigh.retail.fas.common.model.PayRelationship" >
	SELECT 
	  NULL id,
	  NULL tag_price,
	  NULL cost,
	  SUM(
		  <if test="null != notTaxAlgorithm and 'A'.toString()==notTaxAlgorithm">
			IFNULL(ROUND(ROUND(ROUND(ROUND(item.tag_price * ${balanceDiscount1},2) / 1.17,2) * ${balanceDiscount2} ,2) * send_qty,2),0.00)
		  </if>
	 	  <if test="null != notTaxAlgorithm and 'B'.toString()==notTaxAlgorithm">
			IFNULL(ROUND(ROUND(ROUND(item.tag_price * ${balanceDiscount1},0) / 1.17,2) * ${balanceDiscount2} * send_qty,2),0.00)
		  </if>
		  <if test="null != notTaxAlgorithm and 'C'.toString()==notTaxAlgorithm">
			IFNULL(ROUND(item.tag_price * ${balanceDiscount1} * ${balanceDiscount2} / 1.17 * send_qty,2),0.00)
		  </if>
		  <if test="null == notTaxAlgorithm or ''.toString()==notTaxAlgorithm">
		   		0.00
		   </if>
	   )
	  not_tax_amount
	  FROM  bill_buy_balance b INNER JOIN item 
	    ON item.item_no = b.item_no 
	WHERE 1 = 1 
	  AND b.original_bill_no = #{businessBillNo} 
	  AND b.saler_no = #{supplierNo} 
	  AND EXISTS 
	  (
		SELECT 1 FROM bill_buy_balance b0 WHERE b.item_no = b0.item_no	 
		AND b0. original_bill_no = #{refAsnBillNo} 
	  ) 
	  GROUP BY b.original_bill_no
	  UNION ALL
	SELECT 
	  b.id,
	  s.tag_price,
	  s.cost,
	  NULL not_tax_amount
	FROM
	  bill_buy_balance b 
	  INNER JOIN bill_buy_balance s
	    ON b.item_no = s.item_no 
	    AND ( (b.saler_no = s.saler_no AND b.buyer_no = s.buyer_no) OR (b.buyer_no = s.saler_no AND b.saler_no = s.buyer_no) )
	WHERE 1 = 1 
	  AND b.original_bill_no = #{businessBillNo} 
	  AND s.original_bill_no = #{refAsnBillNo} 
  </select>
  
  <select id="selectSaleAsnDiffList" resultMap="BaseResultMap" parameterType="cn.wonhigh.retail.fas.common.model.PayRelationship" >
	SELECT 
	  b.id,
	  s.tag_price,
	  s.cost
	FROM
	  bill_sale_balance b 
	  INNER JOIN bill_sale_balance s
	    ON b.item_no = s.item_no 
	    AND ( (b.saler_no = s.saler_no AND b.buyer_no = s.buyer_no) OR (b.buyer_no = s.saler_no AND b.saler_no = s.buyer_no) )
	WHERE 1 = 1 
	  AND b.original_bill_no = #{businessBillNo} 
	  AND s.original_bill_no = #{refAsnBillNo} 
  </select>
  
  <update id="updateBuyCostById" parameterType="map" >
  	UPDATE bill_buy_balance 
		SET cost = #{cost},
		tag_price = #{tagPrice}
	WHERE 1 = 1 
	AND id = #{id}	
  </update>
  
  <update id="updateSaleCostById" parameterType="map" >
  	UPDATE bill_sale_balance 
		SET cost = #{cost},
		tag_price = #{tagPrice}
	WHERE 1 = 1 
	AND id = #{id}	
  </update>
  
  <update id="updateBuyReturnCostByBillNo" parameterType="java.lang.String" >
  	UPDATE bill_buy_balance 
		SET cost = bill_cost,
		    other_deduct_cost = exclusive_cost,
		    exclusive_cost = 0,
		    return_no = order_no
	WHERE 1 = 1 
	AND original_bill_no = #{businessBillNo}	
  </update>
  
  <update id="updateSaleReturnCostByBillNo" parameterType="java.lang.String" >
  	UPDATE bill_sale_balance 
		SET cost = bill_cost,
			other_deduct_cost = exclusive_cost,
		    exclusive_cost = 0,
		    return_no = order_no
	WHERE 1 = 1 
	AND original_bill_no = #{businessBillNo}
  </update>
  
  <update id="swapBuySaleByBillNo" parameterType="java.lang.String" >
  	UPDATE 
  	bill_buy_balance buy 
  INNER JOIN 
    (SELECT 
      buyer_no,
      buyer_name,
      saler_no,
      saler_name,
      send_store_no,
      send_store_name,
      receive_store_no,
      receive_store_name,
      order_unit_no,
      order_unit_name,
      organ_no,
      organ_name,
      zone_no,
      zone_name,
      order_unit_no_from,
      order_unit_name_from,
      organ_no_from,
      organ_name_from,
      zone_no_from,
      zone_name_from 
    FROM
      bill_sale_balance 
    WHERE original_bill_no =  #{businessBillNo} 
    GROUP BY original_bill_no) sale 
    ON buy.saler_no = sale.saler_no 
SET buy.buyer_no = sale.saler_no,
  buy.buyer_name = sale.saler_name,
  buy.saler_no = sale.buyer_no,
  buy.saler_name = sale.buyer_name,
  buy.send_store_no = sale.receive_store_no,
  buy.send_store_name = sale.receive_store_name,
  buy.receive_store_no = sale.send_store_no,
  buy.receive_store_name = sale.send_store_name,
  buy.order_unit_no = sale.order_unit_no_from,
  buy.order_unit_name = sale.order_unit_name_from,
  buy.organ_no = sale.organ_no_from,
  buy.organ_name = sale.organ_name_from,
  buy.zone_no = sale.zone_no_from,
  buy.zone_name = sale.zone_name_from,
  buy.order_unit_no_from = sale.order_unit_no,
  buy.order_unit_name_from = sale.order_unit_name,
  buy.organ_no_from = sale.organ_no,
  buy.organ_name_from = sale.organ_name,
  buy.zone_no_from = sale.zone_no,
  buy.zone_name_from = sale.zone_name,
  buy.send_qty = - 1 * buy.send_qty,
  buy.receive_qty = - 1 * buy.receive_qty 
WHERE buy.original_bill_no =  #{businessBillNo} ;
UPDATE 
  bill_sale_balance sale 
  INNER JOIN 
    (SELECT 
      buyer_no,
      buyer_name,
      saler_no,
      saler_name,
      send_store_no,
      send_store_name,
      receive_store_no,
      receive_store_name,
      order_unit_no,
      order_unit_name,
      organ_no,
      organ_name,
      zone_no,
      zone_name,
      order_unit_no_from,
      order_unit_name_from,
      organ_no_from,
      organ_name_from,
      zone_no_from,
      zone_name_from 
    FROM
      bill_buy_balance 
    WHERE original_bill_no =  #{businessBillNo}
    GROUP BY original_bill_no,
      saler_no,
      buyer_no) buy 
    ON buy.saler_no = sale.buyer_no 
  SET sale.buyer_no = buy.buyer_no,
  sale.buyer_name = buy.buyer_name,
  sale.saler_no = buy.saler_no,
  sale.saler_name = buy.saler_name,
  sale.send_store_no = buy.send_store_no,
  sale.send_store_name = buy.send_store_name,
  sale.receive_store_no = buy.receive_store_no,
  sale.receive_store_name = buy.receive_store_name,
  sale.order_unit_no = buy.order_unit_no,
  sale.order_unit_name = buy.order_unit_name,
  sale.organ_no = buy.organ_no,
  sale.organ_name = buy.organ_name,
  sale.zone_no = buy.zone_no,
  sale.zone_name = buy.zone_name,
  sale.order_unit_no_from = buy.order_unit_no_from,
  sale.order_unit_name_from = buy.order_unit_name_from,
  sale.organ_no_from = buy.organ_no_from,
  sale.organ_name_from = buy.organ_name_from,
  sale.zone_no_from = buy.zone_no_from,
  sale.zone_name_from = buy.zone_name_from,
  sale.send_qty = - 1 * sale.send_qty,
  sale.receive_qty = - 1 * sale.receive_qty 
WHERE sale.original_bill_no =  #{businessBillNo}; 
  </update>
  <select id="selectBalanceCountByBillNo" resultType="java.lang.Integer" >
	SELECT 
	 COUNT(1)
	FROM
	  pay_relationship 
	WHERE 1 = 1 
	  AND business_bill_no = #{businessBillNo} 
	  AND balance_no IS NOT NULL
  </select>
</mapper>