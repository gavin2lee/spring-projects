<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wonhigh.retail.fas.dal.database.OrderMainMapper" >
  <resultMap id="BaseResultMap" type="cn.wonhigh.retail.fas.common.model.OrderMain" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="shop_no" property="shopNo" jdbcType="VARCHAR" />
    <result column="shop_name" property="shopName" jdbcType="VARCHAR" />
    <result column="out_date" property="outDate" jdbcType="DATE" />
    <result column="qty" property="qty" jdbcType="INTEGER" />
    <result column="tag_price_amount" property="tagPriceAmount" jdbcType="DECIMAL" />
    <result column="sale_price_amount" property="salePriceAmount" jdbcType="DECIMAL" />
    <result column="disc_price_amount" property="discPriceAmount" jdbcType="DECIMAL" />
    <result column="settle_amount" property="settleAmount" jdbcType="DECIMAL" />
    <result column="reduce_amount" property="reduceAmount" jdbcType="DECIMAL" />
    <result column="total_rebate_amount" property="totalRebateAmount" jdbcType="DECIMAL" />
    <result column="pref_amount" property="prefAmount" jdbcType="DECIMAL" />
    <result column="coupon_amount" property="couponAmount" jdbcType="DECIMAL" />
    <result column="remain_amount" property="remainAmount" jdbcType="DECIMAL" />
    <result column="all_amount" property="allAmount" jdbcType="DECIMAL" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="vip_no" property="vipNo" jdbcType="VARCHAR" />
    <result column="vip_name" property="vipName" jdbcType="VARCHAR" />
    <result column="wildcard_no" property="wildcardNo" jdbcType="VARCHAR" />
    <result column="wildcard_name" property="wildcardName" jdbcType="VARCHAR" />
    <result column="wildcard_discount" property="wildcardDiscount" jdbcType="DECIMAL" />
    <result column="base_score" property="baseScore" jdbcType="INTEGER" />
    <result column="pro_score" property="proScore" jdbcType="INTEGER" />
    <result column="cost_score" property="costScore" jdbcType="INTEGER" />
    <result column="order_type" property="orderType" jdbcType="INTEGER" />
    <result column="business_type" property="businessType" jdbcType="INTEGER" />
    <result column="order_source" property="orderSource" jdbcType="INTEGER" />
    <result column="daily_flag" property="dailyFlag" jdbcType="INTEGER" />
    <result column="daily_datetime" property="dailyDatetime" jdbcType="TIMESTAMP" />
    <result column="monthly_flag" property="monthlyFlag" jdbcType="INTEGER" />
    <result column="monthly_datetime" property="monthlyDatetime" jdbcType="TIMESTAMP" />
    <result column="balance_no" property="balanceNo" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="actual_postage" property="actualPostage" jdbcType="DECIMAL" />
    <result column="express_no" property="expressNo" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user_no" property="createUserNo" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_user_no" property="updateUserNo" jdbcType="VARCHAR" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" /> 
    <result column="assistant_name" property="assistantName" jdbcType="VARCHAR" />
    <result column="take_mode" property="takeMode" jdbcType="INTEGER" />
    <result column="assistant_id" property="assistantId" jdbcType="VARCHAR" />
    <result column="assistant_no" property="assistantNo" jdbcType="VARCHAR" />
    <result column="market_ticket_no" property="marketTicketNo" jdbcType="VARCHAR" />
    <result column="lock_flag" property="lockFlag" jdbcType="INTEGER" />
    <result column="shop_terminal_no" property="shopTerminalNo" jdbcType="VARCHAR" /> 
    <result column="invoice_apply_no" property="invoiceApplyNo" jdbcType="VARCHAR" />
    <result column="invoice_apply_date" property="invoiceApplyDate" jdbcType="TIMESTAMP" />
    <result column="invoice_no" property="invoiceNo" jdbcType="VARCHAR" />
    <result column="invoice_amount" property="invoiceAmount" jdbcType="DECIMAL" />
    <result column="invoice_date" property="invoiceDate" jdbcType="DATE" />
    <result column="express_company" property="expressCompany" jdbcType="VARCHAR" />
    <result column="message_code" property="messageCode" jdbcType="VARCHAR" />
    <result column="bill_transfer_no" property="billTransferNo" jdbcType="VARCHAR" />
    <result column="shop_no_from" property="shopNoFrom" jdbcType="VARCHAR" />
    <result column="shop_name_from" property="shopNameFrom" jdbcType="VARCHAR" />
    <result column="pickup_date" property="pickupDate" jdbcType="DATE" />
    <result column="check_user_no" property="checkUserNo" jdbcType="VARCHAR" />   
    <result column="check_user" property="checkUser" jdbcType="VARCHAR" />     
    <result column="serial_no" property="serialNo" jdbcType="VARCHAR" /> 
    <result column="adjust_flag" property="adjustFlag" jdbcType="INTEGER" />    
    <result column="adjust_user" property="adjustUser" jdbcType="VARCHAR" />    
    <result column="adjust_time" property="adjustTime" jdbcType="TIMESTAMP" />
    <result column="return_exchange_time" property="returnExchangeTime" jdbcType="INTEGER" />  
         
    <result column="order_bill_type" property="orderBillType" jdbcType="INTEGER" /> 
    <result column="old_order_no" property="oldOrderNo" jdbcType="VARCHAR" />
    <result column="order_bill_type_str" property="orderBillTypeStr" jdbcType="VARCHAR" /> 
    <result column="order_type_str" property="orderTypeStr" jdbcType="VARCHAR" />
    <result column="status_str" property="statusStr" jdbcType="VARCHAR" />
    <result column="business_type_str" property="businessTypeStr" jdbcType="VARCHAR" />
    <result column="take_mode_str" property="takeModeStr" jdbcType="VARCHAR" />  
    <result column="daily_flag_str" property="dailyFlagStr" jdbcType="VARCHAR" />   
    <result column="adjust_flag_str" property="adjustFlagStr" jdbcType="VARCHAR" />
    <result column="order_source_str" property="orderSourceStr" jdbcType="VARCHAR" />   
    
    <result column="total_account" property="totalAccount" jdbcType="INTEGER" />
    <result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />  
  </resultMap>
  
    <resultMap id="ocGroupOrderPayway" type="cn.wonhigh.retail.fas.common.model.POSOcGroupOrderPayway" >
      <result column="shop_no" property="shopNo" jdbcType="VARCHAR" />
     <result column="shop_name" property="shopName" jdbcType="VARCHAR" />
     <result column="all_amount" property="allAmount" jdbcType="DECIMAL" />
      <result column="group_amount" property="groupAmount" jdbcType="DECIMAL" />
     <result column="out_date" property="outDate" jdbcType="DATE" />
     <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
     <result column="pay_code" property="payCode" jdbcType="VARCHAR" />
     <result column="pay_name" property="payName" jdbcType="VARCHAR" />
      <result column="payway_num" property="paywayNum" jdbcType="VARCHAR" />
   </resultMap> 
 
 <resultMap id="OcOcGroupWildCard" type="cn.wonhigh.retail.fas.common.model.POSOcOcGroupWildCard" >
     <result column="shop_no" property="shopNo" jdbcType="VARCHAR" />
     <result column="out_date" property="outDate" jdbcType="DATE" />
     <result column="all_amount" property="saleAmount" jdbcType="DECIMAL" />
     <result column="disc_amount" property="discAmount" jdbcType="DECIMAL" />
     <result column="settle_amount" property="settleAmount" jdbcType="DECIMAL" />
     <result column="set_amount" property="setAmount" jdbcType="DECIMAL" />
     <result column="all_amount" property="allAmount" jdbcType="DECIMAL" />
     <result column="amount" property="amount" jdbcType="DECIMAL" />
 </resultMap> 
 
   <resultMap id="ocOcGroupPromation" type="cn.wonhigh.retail.fas.common.model.POSOcOcGroupPromation" >
     <result column="shop_no" property="shopNo" jdbcType="VARCHAR" />
     <result column="shop_name" property="shopName" jdbcType="VARCHAR" />
     <result column="pro_no" property="proNo" jdbcType="VARCHAR" />
      <result column="pro_name" property="proName" jdbcType="VARCHAR" />
     <result column="amount" property="amount" jdbcType="DECIMAL" />
     <result column="discount_name" property="discountName" jdbcType="VARCHAR" />
     <result column="discount" property="discount" jdbcType="DECIMAL" />
     <result column="discount_amount" property="discountAmount" jdbcType="DECIMAL" />
     <result column="discount_type" property="discountType" jdbcType="VARCHAR" />
     <result column="launch_type" property="launchType" jdbcType="VARCHAR" />
     <result column="start_date" property="startDate" jdbcType="DATE" />
     <result column="end_date" property="endDate" jdbcType="DATE" />
     <result column="rate_name" property="rateName" jdbcType="VARCHAR" /> 
     <result column="discount_code" property="discountCode" jdbcType="VARCHAR" /> 
      <result column="brand_no" property="brandNo" jdbcType="CHAR" />
     <result column="brand_name" property="brandName" jdbcType="VARCHAR" />
     <result column="billing_code" property="billingCode" jdbcType="VARCHAR" />
    </resultMap> 
  
   <resultMap id="billShopBalanceCodeSum" type="cn.wonhigh.retail.fas.common.model.BillShopBalanceCodeSum" >
    <result column="bill_no" property="billNo" jdbcType="CHAR" />
    <result column="balance_no" property="balanceNo" jdbcType="CHAR" />
    <result column="company_no" property="companyNo" jdbcType="CHAR" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="mall_no" property="mallNo" jdbcType="CHAR" />
    <result column="mall_name" property="mallName" jdbcType="VARCHAR" />
    <result column="shop_no" property="shopNo" jdbcType="CHAR" />
    <result column="short_name" property="shortName" jdbcType="VARCHAR" />
    <result column="full_name" property="fullName" jdbcType="VARCHAR" />
    <result column="month" property="month" jdbcType="CHAR" />
    <result column="balance_start_date" property="balanceStartDate" jdbcType="DATE" />
    <result column="balance_end_date" property="balanceEndDate" jdbcType="DATE" />
    <result column="billing_code" property="billingCode" jdbcType="VARCHAR" />
    <result column="sale_amount" property="saleAmount" jdbcType="DECIMAL" />
    <result column="discount" property="discount" jdbcType="DECIMAL" />
    <result column="discount_name" property="discountName" jdbcType="VARCHAR" />
    <result column="deduct_amount" property="deductAmount" jdbcType="DECIMAL" />
  </resultMap>
  
  <resultMap id="orderAndReturnExMainDtl" type="cn.wonhigh.retail.fas.common.model.POSOrderAndReturnExMainDtl" >
    <!--  <result column="mall_no" property="mallNo" jdbcType="VARCHAR" /> -->
     <result column="order_dtl_id" property="orderDtlId" jdbcType="VARCHAR" />
     <result column="shop_name" property="shopName" jdbcType="VARCHAR" />
     <result column="shop_no" property="shopNo" jdbcType="VARCHAR" />
    <!--  <result column="company_name" property="companyName" jdbcType="VARCHAR" /> -->
     <result column="out_date" property="outDate" jdbcType="DATE" />
     <result column="od_order_no" property="orderNo" jdbcType="VARCHAR" />
     <result column="od_item_code" property="itemCode" jdbcType="VARCHAR" />
     <result column="od_item_name" property="itemName" jdbcType="VARCHAR" />
    <!--  <result column="od_assistant" property="assistant" jdbcType="VARCHAR" /> -->
     <result column="qty" property="qty" jdbcType="INTEGER" />
     <result column="tag_price_amount" property="tagPriceAmount" jdbcType="DECIMAL" />
     <result column="od_tag_price" property="tagPrice" jdbcType="DECIMAL" />
     <result column="sale_price_amount" property="salePriceAmount" jdbcType="DECIMAL" />
     <result column="od_sale_price" property="salePrice" jdbcType="DECIMAL" />
     <result column="settle_amount" property="settleAmount" jdbcType="DECIMAL" />
     <result column="od_settle_price" property="settlePrice" jdbcType="DECIMAL" />
     <result column="reduce_amount" property="reduceAmount" jdbcType="DECIMAL" />
     <result column="rebate_amount" property="rebateAmount" jdbcType="DECIMAL" />
     <result column="od_reduce_price" property="reducePrice" jdbcType="DECIMAL" />
     <result column="coupon_amount" property="couponAmount" jdbcType="DECIMAL" />
     <result column="remain_amount" property="remainAmount" jdbcType="DECIMAL" />
     <result column="amount" property="amount" jdbcType="DECIMAL" />
     <result column="all_amount" property="allAmount" jdbcType="DECIMAL" />
     <result column="monthly_flag" property="monthlyFlag" jdbcType="INTEGER" /> 
     <result column="order_bill_type" property="orderBillType" jdbcType="INTEGER" /> 
	 <result column="invoice_no" property="invoiceNo" jdbcType="VARCHAR" /> 
	 <result column="invoice_amount" property="invoiceAmount" jdbcType="DECIMAL" /> 
	 <result column="invoice_date" property="invoiceDate" jdbcType="DATE" /> 
	 <result column="discount" property="discount" jdbcType="DECIMAL" /> 
    <result column="old_order_no" property="oldOrderNo" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="dtl_qty" property="dtlQty" jdbcType="INTEGER" />
    <result column="brand_name" property="brandName" jdbcType="VARCHAR" />
    <result column="sku_no" property="skuNo" jdbcType="VARCHAR" />
     <result column="business_type" property="businessType" jdbcType="INTEGER"/>
     <result column="disc_price" property="discPrice" jdbcType="DECIMAL" />   
     <result column="discount_remain" property="discountRemain" jdbcType="DECIMAL" />  
     <result column="pref_price" property="prefPrice" jdbcType="DECIMAL" />  
     <result column="pro_no" property="proNo" jdbcType="VARCHAR"/>      
     <result column="pro_name" property="proName" jdbcType="VARCHAR"/>   
     <result column="vip_discount" property="vipDiscount" jdbcType="DECIMAL"/> 
     <result column="base_score" property="baseScore" jdbcType="INTEGER"/> 
     <result column="pro_score" property="proScore" jdbcType="INTEGER"/> 
     <result column="item_discount" property="itemDiscount" jdbcType="DECIMAL"/> 
     <result column="dtl_amount" property="dtlAmount" jdbcType="DECIMAL"/> 
     <result column="size_no" property="sizeNo" jdbcType="VARCHAR"/> 
     <result column="create_time" property="createTime" jdbcType="DATE" />
     <result column="create_user" property="createUser" jdbcType="VARCHAR" />
     <result column="item_no" property="itemNo" jdbcType="VARCHAR" />
     <result column="category_no" property="categoryNo" jdbcType="VARCHAR" />
     <result column="brand_no" property="brandNo" jdbcType="VARCHAR" />
     
    <result column="region_cost" property="regionCost" jdbcType="DECIMAL"/>
	<result column="unit_cost" property="unitCost" jdbcType="DECIMAL"/>
    <result column="launch_type" property="launchType" jdbcType="VARCHAR" />
	<result column="rate_code" property="rateCode" jdbcType="VARCHAR" />
	<result column="activity_describe" property="activityDescribe" jdbcType="VARCHAR" />
	<result column="start_date" property="proStartDate" jdbcType="DATE" /> 
	<result column="end_date" property="proEndDate" jdbcType="DATE" /> 
    <result column="billing_code" property="billingCode" jdbcType="VARCHAR" />
    <result column="category_name" property="categoryName" jdbcType="VARCHAR" />
    <result column="discount_amount" property="discountAmount" jdbcType="DECIMAL" />
    <result column="sale_amount" property="saleAmount" jdbcType="DECIMAL" />
    <result column="discount_code" property="discountCode" jdbcType="VARCHAR" /> 
    <result column="assistant_no" property="assistantNo" jdbcType="VARCHAR" />
   <result column="assistant_name" property="assistantName" jdbcType="VARCHAR" />
    
   </resultMap> 
   
  <resultMap id="ocGroupRootCategory" type="cn.wonhigh.retail.fas.common.model.POSOcGroupRootCategory" >
     <result column="shop_no" property="shopNo" jdbcType="VARCHAR" />
     <result column="shop_name" property="shopName" jdbcType="VARCHAR" />
     <result column="brand_no" property="brandNo" jdbcType="VARCHAR" />
     <result column="brand_name" property="brandName" jdbcType="VARCHAR" />
     <result column="root_category_no" property="rootCategoryNo" jdbcType="VARCHAR" />
     <result column="root_category_name" property="rootCategoryName" jdbcType="DECIMAL" />
     <result column="group_qty" property="groupQty" jdbcType="INTEGER" />
     <result column="group_amount" property="groupAmount" jdbcType="DECIMAL" />
     <result column="deductAmount" property="deductAmount" jdbcType="DECIMAL" /> 
   </resultMap> 
   

   
  <sql id="Base_Column_List" >
    id, order_no, shop_no, shop_name, shop_no_from, shop_name_from, serial_no, out_date, 
    qty, tag_price_amount, sale_price_amount, disc_price_amount, settle_amount, reduce_amount, 
    total_rebate_amount, pref_amount, coupon_amount, all_amount, amount, remain_amount, 
    assistant_name, assistant_id, assistant_no, vip_no, vip_name, wildcard_no, wildcard_name, 
    wildcard_discount, base_score, pro_score, cost_score, order_type, business_type, 
    order_source, daily_flag, daily_datetime, monthly_flag, monthly_datetime, balance_no, 
    remark, status, actual_postage, message_code, express_company, bill_transfer_no, 
    express_no, take_mode, market_ticket_no, lock_flag, return_exchange_time, shop_terminal_no, 
    invoice_apply_no, invoice_apply_date, invoice_no, invoice_amount, invoice_date, pickup_date, 
    check_user_no, check_user, create_user_no, create_user, create_time, update_user_no, 
    update_user, update_time, adjust_flag, adjust_user, adjust_time
  </sql>
  
  <sql id="OrderDtl_Column_List" >
  	 od.id order_dtl_id,
	 om.shop_no, 
	 om.shop_name,
	 om.out_date,
	 od.order_no od_order_no,
	 od.item_code od_item_code,
	 od.item_name od_item_name,	
	   om.qty, od.qty dtl_qty,  om.tag_price_amount, od.tag_price od_tag_price, om.sale_price_amount,   od.sale_price od_sale_price,
	  om.settle_amount, od.settle_price od_settle_price, om.reduce_amount, om.total_rebate_amount, od.reduce_price od_reduce_price,
	  od.rebate_amount,
	  om.coupon_amount,
	  om.remain_amount,
	     om.amount,
	  om.all_amount, 
	 om.monthly_flag,
	 '0' AS order_bill_type,
	 om.invoice_no,
	 om.invoice_amount,
	 om.invoice_date,
	 od.discount,
	 '' AS old_order_no,
	  om.remark,
	    od.brand_name,
	  od.sku_no,
	  om.business_type,
	  od.disc_price,
	  od.tag_price - od.sale_price discount_remain,
	  od.pref_price,
	  od.pro_no,
	  od.pro_name,
	  od.vip_discount,
	  od.base_score,
	  od.pro_score,
	  od.item_discount,
	  od.amount dtl_amount,
	  od.size_no,
	  od.create_user,
	  od.create_time,
	  od.item_no,
	  od.category_no,
	  od.brand_no,
	  
	  CASE od.balance_base
			 WHEN 1 THEN od.tag_price * od.qty 
			 WHEN 0 THEN od.amount  
			 ELSE od.amount  
		   END  AS sale_amount,
		   
	 CASE
		      od.balance_base 
		      WHEN 1 
		      THEN od.tag_price * od.qty * od.discount / 100 
		      WHEN 0 
		      THEN od.amount * od.discount / 100 
		      ELSE od.amount * od.discount / 100 
		    END AS discount_amount,   
	  cty.`name` category_name,
	  od.region_cost  region_cost,od.unit_cost  unit_cost,
	  od.launch_type,od.discount_code rate_code,od.pro_start_time start_date,od.pro_end_time end_date,od.billing_code,od.discount_code     
   </sql>
   
    <!-- 单独给FAS接口-->
  <sql id="orderMain_forFAS_Condition" >
  -- AND @om.company_no
    <if test="null!=params" >
		<if test="null!=params.queryCondition and ''!=params.queryCondition" >
			${params.queryCondition}
		</if>
       <if test="null!=params.companyNos and ''!=params.companyNos" >
        AND om.company_no = #{params.companyNos}
      </if>
      <if test="null!=params.companyNo and ''!=params.companyNo" >
        AND om.company_no = #{params.companyNo}
      </if>
       <if test="params.shopNo != null and params.shopNo!=''">  
     		and om.shop_no = #{params.shopNo}
      </if>
      <if test="null!=params.shopNoLists and ''!=params.shopNoLists" >
          and om.shop_no in ${params.shopNoLists} 
      </if>
      <if test="params.statusList!=null and params.statusList!=''">
        	<foreach collection="params.statusList" item="status" open="AND om.status in(" separator="," close=")">
            	'${status}'
       		</foreach>
      </if>
       <if test="params.startOutDate != null and params.startOutDate!=''">  
     		and  om.out_date  &gt;= #{params.startOutDate, jdbcType=DATE}
     	</if>
     	<if test="params.endOutDate != null and params.endOutDate!=''">  
     		and  om.out_date  &lt;= #{params.endOutDate, jdbcType=DATE}
     	</if>
 		 <if test="params.shopNoList!=null and params.shopNoList!=''" >
		   <foreach collection="params.shopNoList" item="shopNo" open="AND om.shop_no in(" separator="," close=")">
		      '${shopNo}'
		   </foreach>
	  	</if>
	  	 <if test="null!=params.businessTypeList and ''!=params.businessTypeList" >
		   <foreach collection="params.businessTypeList" item="businessType" open="AND om.business_type in(" separator="," close=")">
		      '${businessType}'
		    </foreach>
	  	</if>
	    <if test="params.paycode!=null and params.paycode!=''">
			AND op.pay_code = #{params.paycode}
		</if>
		<if test="params.orderBillTypes!=null and params.orderBillTypes!=''">
			AND om.order_type = #{params.orderBillTypes}
		</if>
		<if test="params.invoiceNoFlag_4 == 0 ">
 			AND  (om.invoice_no is  null  or om.invoice_no ='')
		</if>
		<if test="params.invoiceNoFlag_3 == 0">
			AND  (om.invoice_apply_no is null   or om.invoice_apply_no ='')
		</if>
		 <if test="params.orderNo != null and params.orderNo!=''">  
     		and om.order_no = #{params.orderNo}
        </if>
        <if test="params.invoiceNo != null and params.invoiceNo!=''">  
     		AND om.invoice_no = #{params.invoiceNo}
       </if>
        <if test="null!=params.orderNoList and ''!=params.orderNoList" >
		   <foreach collection="params.orderNoList" item="orderNo" open="AND om.order_no in(" separator="," close=")">
		      '${orderNo}'
		    </foreach>
	  	</if>
	  	<if test="null!=params.orderNoListForFAS and ''!=params.orderNoListForFAS" >
		   <foreach collection="params.orderNoListForFAS" item="orderNo" open="AND od.order_no in(" separator="," close=")">
		      '${orderNo}'
		    </foreach>
	  	</if>
	  	<if test="null != params.brandNoListForFAS and ''!=params.brandNoListForFAS" >
	  		<foreach collection="params.brandNoListForFAS" item="brandNo" open="AND od.brand_no in(" separator="," close=")">
	  		  '${brandNo}'
	  		</foreach>
	  	</if>
	    <if test="params.invoiceApplyNo != null and params.invoiceApplyNo!=''">  
     		AND  om.invoice_apply_no  = #{params.invoiceApplyNo}
        </if>
         <!-- modify By wang.m 06/11-->
        <if test="params.multiBrandNo != null and params.multiBrandNo!=''">  
     		AND od.brand_no in ${params.multiBrandNo}
        </if>
         <if test="null!=params.balanceNo and ''!=params.balanceNo" >  
            AND om.balance_no = #{params.balanceNo}
         </if>
         <if test="params.categoryNo != null and params.categoryNo!=''">  
     		AND LEFT(od.category_no,2) in ${params.categoryNo}
        </if>
     </if>
  </sql>
  
  
<sql id="ReturnExchangeMainDtl_Column_List" >
   	red.id order_dtl_id,
	 rem.shop_no, 
	 rem.shop_name,
	 rem.out_date,
	red.business_no od_order_no,
	red.item_code od_item_code,
	red.item_name od_item_name,
	   rem.qty, red.qty dtl_qty,  rem.tag_price_amount,red.tag_price od_tag_price, rem.sale_price_amount,  red.sale_price od_sale_price,
	  rem.settle_amount,red.settle_price od_settle_price, rem.reduce_amount, rem.total_rebate_amount, red.reduce_price od_reduce_price,
	  red.rebate_amount,
	  rem.coupon_amount,
	  rem.remain_amount,
	     rem.amount,
	  rem.all_amount, 
	 rem.monthly_flag,
	 rem.business_mode AS order_bill_type,
	 rem.invoice_no,
	 rem.invoice_amount,
	 rem.invoice_date,
	red.discount,
	  rem.old_order_no AS old_order_no,
	  rem.remark,
	    red.brand_name,
	  red.sku_no,
	  rem.business_type,
	  red.disc_price,
	  red.tag_price - red.sale_price discount_remain,
	  red.pref_price,
	  red.pro_no,
	  red.pro_name,
	  red.vip_discount,
	  red.base_score,
	  red.pro_score,
	  red.item_discount,
	  red.amount dtl_amount,
	  red.size_no,
	  red.create_user,
	  red.create_time,
	  red.item_no,
	  red.category_no,
	  red.brand_no,
	  CASE red.balance_base
			 WHEN 1 THEN red.tag_price * red.qty 
			 WHEN 0 THEN red.amount  
			 ELSE red.amount  
		   END  AS  sale_amount,
	 CASE
		      red.balance_base 
		      WHEN 1 
		      THEN red.tag_price * red.qty * red.discount / 100 
		      WHEN 0 
		      THEN red.amount * red.discount / 100 
		      ELSE red.amount * red.discount / 100 
		    END AS discount_amount,
	  cty.`name` category_name,
	  red.region_cost region_cost,red.unit_cost  unit_cost,
	  red.launch_type,red.discount_code rate_code,red.pro_start_time start_date,red.pro_end_time end_date,red.billing_code,red.discount_code   
 </sql>
 
 <sql id="ReturnExchangeMain_Manager_Condition" >
 	-- AND @rem.company_no
    <if test="null!=params" >
    	<if test="null!=params.queryCondition and ''!=params.queryCondition" >
			${params.queryCondition}
		</if>
	      <if test="null!=params.companyNos and ''!=params.companyNos" >
	        AND rem.company_no  = #{params.companyNos} 
	      </if>
	      <if test="null!=params.companyNo and ''!=params.companyNo" >
	        AND rem.company_no = #{params.companyNo}
	      </if>
    	 <if test="params.shopNo != null and params.shopNo!=''">  
     		and rem.shop_no = #{params.shopNo}
    	</if>
    	 <if test="null!=params.shopNoLists and ''!=params.shopNoLists" >
          and rem.shop_no in ${params.shopNoLists} 
          </if>
    	 <if test="params.orderNo != null and params.orderNo!=''">  
     		and rem.business_no = #{params.orderNo}
    	</if>
     	<if test="params.startOutDate != null and params.startOutDate!=''">  
     		and rem.out_date  &gt;= #{params.startOutDate, jdbcType=DATE}
     	</if>
     	<if test="params.endOutDate != null and params.endOutDate!=''">  
     		and rem.out_date  &lt;= #{params.endOutDate, jdbcType=DATE}
     	</if>
     	<if test="params.businessType!=null and params.businessType!=''">
			AND rem.business_type = #{params.businessType}
		</if>
		<if test="params.orderBillTypes!=null and params.orderBillTypes!=''">
			AND rem.business_mode = #{params.orderBillTypes}
		</if>
		<if test="params.greaterEqualStatus!=null and params.greaterEqualStatus!=''">
            AND rem.status &gt;= #{params.greaterEqualStatus}
        </if>
        <if test="params.lessThanStatus!=null and params.lessThanStatus!=''">
            AND rem.status &lt; #{params.lessThanStatus}
        </if>
		<if test="params.shopNoList!=null and params.shopNoList!=''" >
		   <foreach collection="params.shopNoList" item="shopNo" open="AND rem.shop_no in(" separator="," close=")">
		      '${shopNo}'
		    </foreach>
	  	</if>
		<if test="null!=params.businessTypeList and ''!=params.businessTypeList" >
		   <foreach collection="params.businessTypeList" item="businessType" open="AND rem.business_type in(" separator="," close=")">
		      '${businessType}'
		    </foreach>
	  	</if>
	   	<if test="params.statusList!=null and params.statusList!=''">
          <foreach collection="params.statusList" item="status" open="AND rem.status in(" separator="," close=")">
              '${status}'
          </foreach>
       	</if>
      	<if test="null!=params.orderNoListForFAS and ''!=params.orderNoListForFAS" >
		   <foreach collection="params.orderNoListForFAS" item="orderNo" open="AND red.business_no in(" separator="," close=")">
		      '${orderNo}'
		    </foreach>
	  	</if>
	  	<if test="null!=params.brandNoListForFAS and ''!=params.brandNoListForFAS" >
		   <foreach collection="params.brandNoListForFAS" item="brandNo" open="AND red.brand_no in(" separator="," close=")">
		      '${brandNo}'
		    </foreach>
	  	</if>
 		<if test="params.invoiceNoFlag_4 == 0">
			AND rem.invoice_no is null
		</if>
	 	<if test="params.invoiceNo != null and params.invoiceNo!=''">  
     		AND rem.invoice_no = #{params.invoiceNo}
     	</if>
     	<if test="params.assistantNo != null and params.assistantNo!=''">  
     		AND rem.assistant_no = #{params.assistantNo}
     	</if>
 	  	<if test="null!=params.isVip and ''!=params.isVip and 'yes'==params.isVip" >
		   AND rem.vip_no is not null 
		   AND rem.vip_no != ''
	  	</if>
	  	<if test="null!=params.vipNo and ''!=params.vipNo" >
		    AND rem.vip_no = #{params.vipNo}
	  	</if>
	  	<if test="null!=params.multiBrandNo and ''!=params.multiBrandNo" >
          and red.brand_no in ${params.multiBrandNo} 
          </if>
           <if test="null!=params.balanceNo and ''!=params.balanceNo" >  
            AND rem.balance_no = #{params.balanceNo}
         </if>
         <if test="params.categoryNo != null and params.categoryNo!=''">  
     		AND LEFT(red.category_no,2) in ${params.categoryNo}
        </if>
    </if>
  </sql>
  
  <!-- 根据查询条件去更新order_main-->
  <update id="updateByInvoiceNoAndDate" parameterType="java.util.Map" >
     update order_main om 
        <set>
         om.invoice_no = #{params.paramInvoiceNo,jdbcType=VARCHAR},
         om.invoice_date = #{params.paramInvoiceDate,jdbcType=DATE}
        </set>
      where 1=1
      <include refid="orderMain_forFAS_Condition"/>
  </update>
  
  <!-- 根据查询条件去更新order_main-->
  <update id="updateByInvoiceApplyNoAndDate" parameterType="java.util.Map" >
     update order_main om 
        <set>
         om.invoice_apply_no = #{params.paramInvoiceApplyNo,jdbcType=VARCHAR},
         om.invoice_apply_date = #{params.paramInvoiceApplyDate,jdbcType=DATE}
        </set>
      where 1=1
      <include refid="orderMain_forFAS_Condition"/>
  </update>
  
   <!-- 根据参数CompanyNo查询销售订单和退换货单数量 -->
  <select id="findOrderBillCountForCompanyNo" resultType="java.lang.Integer" >
    select count(1) as s from (
        select 
	    <include refid="OrderDtl_Column_List" />
 	    from order_main om
	    LEFT JOIN order_dtl od ON om.order_no = od.order_no
	    LEFT JOIN category cty ON left(od.category_no,2) = cty.category_no
	    LEFT JOIN rate_pro op 
		   ON INSTR(op.pro_no,SUBSTRING_INDEX(od.pro_no,'|',-1))>0   AND   (od.pro_no &lt;&gt;'' AND od.pro_no IS NOT NULL)  
		    AND op.rate_code =od.discount_code  AND  op.shop_no=om.shop_no 
	    where 1=1
	    <include refid="orderMain_forFAS_Condition" />
	    union all 
	    select 
	    <include refid="ReturnExchangeMainDtl_Column_List" />
 	    from return_exchange_main rem
	    LEFT JOIN return_exchange_dtl red ON rem.business_no = red.business_no
	    LEFT JOIN category cty ON LEFT(red.category_no, 2)= cty.category_no
	    LEFT JOIN rate_pro op 
		   ON INSTR(op.pro_no,SUBSTRING_INDEX(red.pro_no,'|',-1))>0   AND   (red.pro_no &lt;&gt;'' AND red.pro_no IS NOT NULL)  
		    AND op.rate_code =red.discount_code  AND  op.shop_no=rem.shop_no 
	    where 1=1
	    <include refid="ReturnExchangeMain_Manager_Condition" />
    ) as a  
     <if test="null!=params.companyNo and ''!=params.companyNo" >
        WHERE a.shop_no IN(SELECT sp.shop_no FROM shop sp,company cp WHERE sp.shop_no = a.shop_no
        AND cp.company_no = sp.company_no
        AND cp.company_no= #{params.companyNo})
      </if>
   </select>
  
  <!-- 根据参数CompanyNo分页查询销售订单和退换货单 -->
  <select id="findOrderBillByPageForCompanyNo" resultMap="orderAndReturnExMainDtl" parameterType="java.util.Map" >
   select * from  ((
	    select 
	    <include refid="OrderDtl_Column_List" />
	     from order_main om 
       	LEFT JOIN order_dtl od ON om.order_no = od.order_no
       	LEFT JOIN category cty ON left(od.category_no,2) = cty.category_no
       	LEFT JOIN rate_pro op 
		   ON INSTR(op.pro_no,SUBSTRING_INDEX(od.pro_no,'|',-1))>0   AND   (od.pro_no &lt;&gt;'' AND od.pro_no IS NOT NULL)  
		    AND op.rate_code =od.discount_code  AND  op.shop_no=om.shop_no 
	    where 1=1
	    <include refid="orderMain_forFAS_Condition" />
    )
    union all 
    (
	    select 
	    <include refid="ReturnExchangeMainDtl_Column_List" />
	       from return_exchange_main rem
	    LEFT JOIN return_exchange_dtl red ON rem.business_no = red.business_no	 
	    LEFT JOIN category cty ON left(red.category_no,2) = cty.category_no  
	    LEFT JOIN rate_pro op 
		   ON INSTR(op.pro_no,SUBSTRING_INDEX(red.pro_no,'|',-1))>0   AND   (red.pro_no &lt;&gt;'' AND red.pro_no IS NOT NULL)  
		    AND op.rate_code =red.discount_code  AND  op.shop_no=rem.shop_no  
	    where 1=1
	    <include refid="ReturnExchangeMain_Manager_Condition" />
    )) as a 
   <if test="null!=params.companyNo and ''!=params.companyNo" >
        WHERE a.shop_no IN(SELECT sp.shop_no FROM shop sp,company cp WHERE sp.shop_no = a.shop_no
        AND cp.company_no = sp.company_no
        AND cp.company_no= #{params.companyNo})
  </if>
    <if test="orderByField != null and ''!=orderByField" >
      order by ${orderByField}
      <if test="orderByField" >
        ${orderBy}
      </if>
    </if>
     limit #{page.startRowNum} ,#{page.pageSize} 
  </select>
  
    <!--根据参数销售订单按支付方式的销售汇总接口 -->
  <select id="findOrderPayWayListForShop" resultMap="ocGroupOrderPayway" parameterType="java.util.Map" >
	SELECT   a.shop_no,
  		a.shop_name,
  		sum(a.all_amount) as all_amount,SUM(a.amount)as group_amount,a.out_date,a.pay_code, a.pay_name, a.payway_num FROM (
		SELECT  om.order_no,om.shop_no,om.shop_name,orp.out_date, om.all_amount,orp.pay_code,orp.pay_name,
	    orp.payway_num,orp.amount FROM order_main om LEFT JOIN order_payway orp 
	    ON om.order_no = orp.order_no 
	      where 1=1
	    <include refid="orderMain_forFAS_Condition" />
		UNION
		ALL 
		SELECT   rem.business_no,rem.shop_no,rem.shop_name,orp.out_date,rem.all_amount,orp.pay_code,orp.pay_name,orp.payway_num, orp.amount FROM
	  return_exchange_main rem 
	  LEFT JOIN order_payway orp 
	    ON rem.business_no = orp.order_no 
	WHERE 1 = 1 
	 <include refid="ReturnExchangeMain_Manager_Condition" />
	 ) a    GROUP BY  pay_code ,shop_no  
	 <if test="orderByField != null and ''!=orderByField" >
	       order by a.${orderByField}
	      <if test="orderByField" >
	        ${orderBy}
	      </if>
      </if>
    </select>
  
  <!-- 根据参数分页查询销售订单和退换货单 -->
  <select id="selectSumOcOrderByParameter" resultMap="orderAndReturnExMainDtl" parameterType="java.util.Map" >
     SELECT sum(a.qty) as qty ,
     sum(a.settle_price) as settle_amount ,
     sum(a.amount) as all_amount,
     sum(a.amount) as sale_amount,
     sum(a.discount_amount) as discount_amount,
     sum(a.region_cost) region_cost,
     sum(a.unit_cost) unit_cost
     FROM 
     (SELECT od.qty,od.settle_price,
      CASE od.balance_base
			 WHEN 1 THEN od.tag_price * od.qty 
			 WHEN 0 THEN od.amount  
			 ELSE od.amount  
		   END  AS amount,
		    CASE
		      od.balance_base 
		      WHEN 1 
		      THEN od.tag_price * od.qty * od.discount / 100 
		      WHEN 0 
		      THEN od.amount * od.discount / 100 
		      ELSE od.amount * od.discount / 100 
		    END AS discount_amount,
		    od.region_cost * od.qty region_cost,
		    od.unit_cost * od.qty unit_cost
      FROM order_dtl od 
      LEFT JOIN order_main om ON od.order_no = om.order_no 
      WHERE  1=1
       <include refid="orderMain_forFAS_Condition" />
      UNION ALL 
      SELECT red.qty,red.settle_price,
      CASE red.balance_base
			 WHEN 1 THEN red.tag_price * red.qty 
			 WHEN 0 THEN red.amount  
			 ELSE red.amount  
		   END  AS  amount,
		   CASE
		      red.balance_base 
		      WHEN 1 
		      THEN red.tag_price * red.qty * red.discount / 100 
		      WHEN 0 
		      THEN red.amount * red.discount / 100 
		      ELSE red.amount * red.discount / 100 
		    END AS discount_amount,
		    red.region_cost * red.qty region_cost,
		    red.unit_cost * red.qty unit_cost
      FROM return_exchange_dtl red 
      LEFT JOIN return_exchange_main rem ON rem.business_no = red.business_no
      WHERE 1=1
       <include refid="ReturnExchangeMain_Manager_Condition" />
      )AS a 
  </select>
  
   	<!-- 根据参数分页查询销售订单和退换货单 -->
  	<select id="findOrderBillByPage" resultMap="orderAndReturnExMainDtl" parameterType="java.util.Map" >
	 	select 
	    <include refid="OrderDtl_Column_List" />  
	    FROM order_dtl od 
	    LEFT JOIN order_main om ON od.order_no = om.order_no
	    LEFT JOIN category cty ON left(od.category_no,2) = cty.category_no    		
             
	    WHERE 1=1
	    	<include refid="orderMain_forFAS_Condition" />
	    union all 
		select 
	    	<include refid="ReturnExchangeMainDtl_Column_List" />
	    FROM return_exchange_dtl red 
	    LEFT JOIN return_exchange_main rem ON rem.business_no = red.business_no 
	    LEFT JOIN category cty ON left(red.category_no,2) = cty.category_no
        
	    WHERE 1=1
		    <include refid="ReturnExchangeMain_Manager_Condition" />
	    <if test="orderByField != null and ''!=orderByField" >
	      order by ${orderByField}
	      <if test="orderByField" >
	        ${orderBy}
	      </if>
	    </if>
	     limit #{page.startRowNum} ,#{page.pageSize} 
	</select>
  
  <!-- 根据参数查询销售订单和退换货单数量 -->
  <select id="findOrderBillCount" resultType="java.lang.Integer" >
    select count(1) as s from (
        select od.id order_dtl_id
	    FROM order_dtl od 
	    LEFT JOIN order_main om ON od.order_no = om.order_no
	    WHERE 1=1
	    <include refid="orderMain_forFAS_Condition" />
	    union all 
	    select red.id order_dtl_id
	    FROM return_exchange_dtl red 
	    LEFT JOIN return_exchange_main rem ON rem.business_no = red.business_no 
	    WHERE 1=1
	    <include refid="ReturnExchangeMain_Manager_Condition" />
    ) as order_bill
  </select>
  
  <!-- 销售订单结算期内按大类汇总接口 -->
  <select id="findOcOrderGroupRootCategory" resultMap="ocGroupRootCategory" parameterType="java.util.Map" >
		SELECT  a.shop_no, a.shop_name,a.brand_unit_no as brand_no,a.brand_unit_name as brand_name,a.root_category_no,a.root_category_name,SUM(qty) as group_qty,SUM(a.amount)
		 as group_amount,SUM(a.deductAmount) as deductAmount FROM ((SELECT  om.order_no,	
		 om.shop_no,om.shop_name,od.brand_unit_no,od.brand_unit_name,od.qty,
		 CASE od.balance_base
			 WHEN 1 THEN od.tag_price * od.qty 
			 WHEN 0 THEN od.amount  
			 ELSE od.amount  
		   END  AS amount,
		   CASE od.balance_base
			 WHEN 1 THEN od.tag_price * od.qty * IFNULL(od.discount,'0.00') / 100 
			 WHEN 0 THEN od.amount  * IFNULL(od.discount,'0.00') / 100 
			 ELSE od.amount   * IFNULL(od.discount,'0.00') / 100 
		   END  AS deductAmount,
		 SUBSTRING(od.category_no, 1, 2) AS root_category_no ,
		 (SELECT NAME FROM category ca1 WHERE SUBSTRING(od.category_no, 1, 2)=ca1.category_no ) AS root_category_name
		FROM order_main om  LEFT JOIN order_dtl od ON om.order_no = od.order_no LEFT JOIN category ca ON ca.category_no=od.category_no 
		WHERE 1 = 1 	
	 <include refid="orderMain_forFAS_Condition" />
	     )
		UNION
		ALL 
		(SELECT  rem.business_no,	rem.shop_no,rem.shop_name,red.brand_unit_no,red.brand_unit_name,red.qty,
		 CASE red.balance_base
			 WHEN 1 THEN red.tag_price * red.qty 
			 WHEN 0 THEN red.amount  
			 ELSE red.amount  
		   END  AS  amount,
		    CASE red.balance_base
			 WHEN 1 THEN red.tag_price * red.qty * IFNULL(red.discount,'0.00') / 100 
			 WHEN 0 THEN red.amount  * IFNULL(red.discount,'0.00') / 100 
			 ELSE red.amount   * IFNULL(red.discount,'0.00') / 100 
		   END  AS deductAmount,
		   SUBSTRING(red.category_no, 1, 2) AS root_category_no ,
		 (SELECT NAME FROM category ca1 WHERE SUBSTRING(red.category_no, 1, 2)=ca1.category_no ) AS root_category_name
		FROM return_exchange_main rem LEFT JOIN return_exchange_dtl red 
	     ON rem.business_no = red.business_no  LEFT JOIN category ca ON ca.category_no=red.category_no
		WHERE 1 = 1 
		  <include refid="ReturnExchangeMain_Manager_Condition" />
		 )) a GROUP BY root_category_no,brand_unit_no 
  </select>
  
  
  <sql id="Promation_Group_Condition" >
    <if test="null!=params" >
    	<choose>
    		<when test="params.discountCode != null and params.discountCode!=''">a.discount_code</when>
    		<when test="null!=params.proNo and ''!=params.proNo">a.pro_no</when>
    		<when test="params.billingCode != null and params.billingCode!=''"> a.billing_code</when>
    		<when test="params.proDate != null and params.proDate!=''">a.start_date,a.end_date</when>
    		<otherwise>a.discount_code</otherwise>
    	</choose>
   </if>
  </sql>
  
   <sql id="PromationSumMethod_Group_Condition" >
    <if test="null!=params" >
    	<choose>
    		<when test="params.discountCode != null and params.discountCode!=''">a.discount_code</when>
    		<when test="null!=params.proNo and ''!=params.proNo">a.pro_no</when>
    		<when test="params.billingCode != null and params.billingCode!=''"> a.billing_code</when>
    		<when test="params.proDate != null and params.proDate!=''">a.start_date,a.end_date</when>
    		<otherwise>a.discount_code</otherwise>
    	</choose>
   </if>
  </sql>
  
    <!-- 销售订单结算期内按活动方式汇总接口 -->
   <!-- update by Ning.ly 2015/3/30 根据结算类型balance_base 0按销售金额进行汇总，1按牌价进行汇总 -->
  <select id="findOcOrderGroupPromation" resultMap="ocOcGroupPromation" parameterType="java.util.Map" >
		SELECT 
		  a.shop_no,
		  a.shop_name,
		  a.brand_unit_no as  brand_no,a.brand_unit_name as brand_name,a.billing_code,
		  GROUP_CONCAT(
		    DISTINCT TRIM(IFNULL(a.pro_no, '')) ORDER BY a.pro_no DESC SEPARATOR " "
		  ) AS pro_no,
		  a.pro_name,
		  SUM(a.amount) AS amount,
		  a.discount,
		   GROUP_CONCAT(
		    DISTINCT TRIM(IFNULL(a.discount_code, '')) ORDER BY a.discount_code DESC SEPARATOR " "
		  ) AS discount_code,
		  a.discount_name,
		  SUM(a.discount_amount) AS discount_amount,
		  a.launch_type,
		  a.start_date,
		  a.end_date,
		  a.rate_name,
		  a.discount_type,
		  (
		    CASE
		      a.launch_type 
		      WHEN 2 
		      THEN CONCAT(
		        CAST(a.launch_type AS CHAR),
		        <include refid="Promation_Group_Condition" />
		      ) 
		      ELSE CAST(a.discount AS CHAR) 
		    END
		  ) A 
		FROM
		  (SELECT 
		    om.shop_no,
		    om.shop_name,od.brand_unit_no,od.brand_unit_name,od.billing_code,
		    TRIM(IFNULL(od.pro_no, '')) pro_no,
		    od.pro_name,
		    CASE od.balance_base
				 WHEN 1 THEN od.tag_price * od.qty 
				 WHEN 0 THEN od.amount  
				 ELSE od.amount  
		     END  AS  amount,
		    TRIM(IFNULL(od.discount, 0)) discount,
		    od.discount_code,
		    od.discount_name,
		    od.discount_type,
		    CASE
		      od.balance_base 
		      WHEN 1 
		      THEN od.tag_price * od.qty * od.discount / 100 
		      WHEN 0 
		      THEN od.amount * od.discount / 100 
		      ELSE od.amount * od.discount / 100 
		    END AS discount_amount,
		    od.launch_type,od.pro_start_time start_date,od.pro_end_time end_date,
		    od.discount_name rate_name  
		  FROM
		    order_main om 
		    LEFT JOIN order_dtl od 
		      ON om.order_no = od.order_no 
		   WHERE 1 = 1 
		  <include refid="orderMain_forFAS_Condition" />
			UNION
			ALL 
		 SELECT 
		    rem.shop_no,
		    rem.shop_name,red.brand_unit_no,red.brand_unit_name,red.billing_code,
		    TRIM(IFNULL(red.pro_no, '')) pro_no,
		    red.pro_name,
		   CASE red.balance_base
			 WHEN 1 THEN red.tag_price * red.qty 
			 WHEN 0 THEN red.amount  
			 ELSE red.amount  
		   END  AS  amount,
		    TRIM(IFNULL(red.discount, 0)) discount,
		    red.discount_code,
		    red.discount_name,
		    red.discount_type,
		    CASE
		      red.balance_base 
		      WHEN 1 
		      THEN red.tag_price * red.qty * red.discount / 100 
		      WHEN 0 
		      THEN red.amount * red.discount / 100 
		      ELSE red.amount * red.discount / 100 
		    END AS discount_amount,
		    red.launch_type,red.pro_start_time start_date,red.pro_end_time end_date,
		    red.discount_name rate_name  
		  FROM
		    return_exchange_main rem 
		    LEFT JOIN return_exchange_dtl red 
		      ON rem.business_no = red.business_no 
		 WHERE 1 = 1 
		  <include refid="ReturnExchangeMain_Manager_Condition" />)  a
		  GROUP BY (
		      CASE
		        a.launch_type 
		        WHEN 2 
		        THEN CONCAT(CAST(a.launch_type AS CHAR),<include refid="Promation_Group_Condition" />) 
		        ELSE CAST(a.discount AS CHAR) 
		      END
		    ),
		    a.discount,a.brand_unit_no 
   </select>
  
  <select id="findOcOrderGroupPromationH" resultMap="ocOcGroupPromation" parameterType="java.util.Map" >
		SELECT 
		  a.shop_no,
		  a.shop_name,
		  a.brand_unit_no as  brand_no,a.brand_unit_name as brand_name,a.billing_code,
		  GROUP_CONCAT(
		    DISTINCT TRIM(IFNULL(a.pro_no, '')) ORDER BY a.pro_no DESC SEPARATOR " "
		  ) AS pro_no,
		  a.pro_name,
		  SUM(a.amount) AS amount,
		  a.discount,
		   GROUP_CONCAT(
		    DISTINCT TRIM(IFNULL(a.discount_code, '')) ORDER BY a.discount_code DESC SEPARATOR " "
		  ) AS discount_code,
		  a.discount_name,
		  SUM(a.discount_amount) AS discount_amount,
		  a.launch_type,
		  a.start_date,
		  a.end_date,
		  a.rate_name,
		  a.discount_type
		FROM
		  (SELECT 
		    om.shop_no,
		    om.shop_name,od.brand_unit_no,od.brand_unit_name,od.billing_code,
		    TRIM(IFNULL(od.pro_no, '')) pro_no,
		    od.pro_name,
		    CASE od.balance_base
				 WHEN 1 THEN od.tag_price * od.qty 
				 WHEN 0 THEN od.amount  
				 ELSE od.amount  
		     END  AS  amount,
		    TRIM(IFNULL(od.discount, 0)) discount,
		    od.discount_code,
		    od.discount_name,
		    od.discount_type,
		    CASE
		      od.balance_base 
		      WHEN 1 
		      THEN od.tag_price * od.qty * od.discount / 100 
		      WHEN 0 
		      THEN od.amount * od.discount / 100 
		      ELSE od.amount * od.discount / 100 
		    END AS discount_amount,
		    od.launch_type,od.pro_start_time start_date,od.pro_end_time end_date,
		    od.discount_name rate_name  
		  FROM
		    order_main om 
		    LEFT JOIN order_dtl od 
		      ON om.order_no = od.order_no 
		   WHERE 1 = 1 
		  <include refid="orderMain_forFAS_Condition" />
			UNION
			ALL 
		 SELECT 
		    rem.shop_no,
		    rem.shop_name,red.brand_unit_no,red.brand_unit_name,red.billing_code,
		    TRIM(IFNULL(red.pro_no, '')) pro_no,
		    red.pro_name,
		   CASE red.balance_base
			 WHEN 1 THEN red.tag_price * red.qty 
			 WHEN 0 THEN red.amount  
			 ELSE red.amount  
		   END  AS  amount,
		    TRIM(IFNULL(red.discount, 0)) discount,
		    red.discount_code,
		    red.discount_name,
		    red.discount_type,
		    CASE
		      red.balance_base 
		      WHEN 1 
		      THEN red.tag_price * red.qty * red.discount / 100 
		      WHEN 0 
		      THEN red.amount * red.discount / 100 
		      ELSE red.amount * red.discount / 100 
		    END AS discount_amount,
		    red.launch_type,red.pro_start_time start_date,red.pro_end_time end_date,
		    red.discount_name rate_name  
		  FROM
		    return_exchange_main rem 
		    LEFT JOIN return_exchange_dtl red 
		      ON rem.business_no = red.business_no 
		 WHERE 1 = 1 
		  <include refid="ReturnExchangeMain_Manager_Condition" />)  a
		  GROUP BY 
		     <include refid="PromationSumMethod_Group_Condition" />,a.discount,a.brand_unit_no 
   </select>
  
  <select id="findListOrderGroupCodeSum" resultMap="billShopBalanceCodeSum" parameterType="java.util.Map" >
		 SELECT a.shop_no,a.shop_name,SUM(a.amount) as saleAmount,a.discount,a.discount_name,a.billing_code,SUM(a.discount_amount) AS deduct_amount 
		 FROM  (SELECT 
		   om.shop_no,om.shop_name ,
		   od.amount,TRIM(IFNULL(od.discount,0)) discount, od.discount_name,od.billing_code,
		   CASE od.balance_base
			 WHEN 1 THEN od.tag_price * od.qty * od.discount/100
			 WHEN 0 THEN od.amount * od.discount/100
			 ELSE od.amount * od.discount/100
		   END  AS discount_amount
		   FROM order_main om LEFT JOIN order_dtl od 
		    ON om.order_no = od.order_no  WHERE 1 = 1 
		  <include refid="orderMain_forFAS_Condition" />
			UNION
			ALL 
		 SELECT rem.shop_no,rem.shop_name , 
		       red.amount, TRIM(IFNULL(red.discount,0)) discount, red.discount_name,red.billing_code,
		      CASE red.balance_base
				 WHEN 1 THEN red.tag_price * red.qty * red.discount/100
				 WHEN 0 THEN red.amount * red.discount/100
				 ELSE red.amount * red.discount/100
			  END  AS discount_amount
		  FROM return_exchange_main rem 
		  LEFT JOIN return_exchange_dtl red 
		    ON rem.business_no = red.business_no 
		WHERE 1 = 1 
		   <include refid="ReturnExchangeMain_Manager_Condition" />)  a
		 GROUP BY a.billing_code ,a.discount
   </select>
   
  <!--销售订单按外卡每日销售汇总接口-->
  <select id="selectListOcOrderGroupWildCard" resultMap="OcOcGroupWildCard" parameterType="java.util.Map" >
	    SELECT a.shop_no,a.out_date,SUM(a.total_rebate_amount) disc_amount, SUM(a.settle_amount) settle_amount, SUM(a.set_amount) set_amount ,
    SUM(a.all_amount) all_amount,  SUM(a.amount)  amount  FROM (SELECT om.shop_no,om.out_date, om.total_rebate_amount,om.order_no,
	     (SELECT SUM(amount) FROM order_payway orpay WHERE om.order_no=orpay.order_no AND orpay.pay_code='05') AS settle_amount,
    om.settle_amount AS set_amount, om.all_amount,om.amount  FROM
	    order_main om WHERE (
	      om.wildcard_no IS NOT NULL 
	      AND om.wildcard_no != '') AND 1 = 1    <include refid="orderMain_forFAS_Condition" />
	      UNION
	       ALL 
	     SELECT  rem.shop_no,rem.out_date,rem.total_rebate_amount,rem.business_no,
	   (SELECT SUM(amount) FROM order_payway orpay WHERE rem.business_no=orpay.order_no AND orpay.pay_code='05') AS settle_amount,
        rem.settle_amount AS set_amount,rem.all_amount,rem.amount
	  FROM return_exchange_main rem WHERE ( rem.wildcard_no IS NOT NULL AND rem.wildcard_no != ''
	    )  AND 1 = 1  <include refid="ReturnExchangeMain_Manager_Condition" />
	    ) AS a GROUP BY a.out_date ,a.shop_no ORDER BY a.out_date 
    </select>
    
    
    <!--根据参数销售订单每日按支付方式的销售汇总接口 -->
  <select id="findOcGroupOrderPayway" resultMap="ocGroupOrderPayway" parameterType="java.util.Map" >
	SELECT   a.shop_no,
  		a.shop_name,
  		sum(a.all_amount) as all_amount,SUM(a.amount)as group_amount,a.out_date,a.pay_code, a.pay_name, a.payway_num FROM (
		SELECT  om.order_no,om.shop_no,om.shop_name,om.out_date, om.all_amount,orp.pay_code,orp.pay_name,
	    orp.payway_num,orp.amount FROM order_main om LEFT JOIN order_payway orp 
	    ON om.order_no = orp.order_no 
	      where 1=1
	    <include refid="orderMain_forFAS_Condition" />
		UNION
		ALL 
		SELECT   rem.business_no,rem.shop_no,rem.shop_name,rem.out_date,rem.all_amount,orp.pay_code,orp.pay_name,orp.payway_num, orp.amount FROM
	  return_exchange_main rem 
	  LEFT JOIN order_payway orp 
	    ON rem.business_no = orp.order_no 
	 WHERE 1 = 1 
	 <include refid="ReturnExchangeMain_Manager_Condition" />
	 ) a  WHERE a.out_date IS NOT NULL 
	 <if test="params.startOutDate != null and params.startOutDate!=''">  
     		and a.out_date  &gt;= #{params.startOutDate}
     	</if>
     	<if test="params.endOutDate != null and params.endOutDate!=''">  
     		and a.out_date  &lt;= #{params.endOutDate}
     	</if>    
     GROUP BY a.pay_code ,a.shop_no ,a.out_date
	 <if test="orderByField != null and ''!=orderByField" >
	       order by a.${orderByField}
	      <if test="orderByField" >
	        ${orderBy}
	      </if>
      </if>
      <if test="orderByField == null or  ''==orderByField " >
      ORDER BY shop_no ,out_date DESC
    </if>
       limit #{page.startRowNum} ,#{page.pageSize} 
   </select>
   
   
   <!--根据参数销售订单每日按支付方式的销售汇总接口总量 -->
  <select id="findOrderPayWayCount" resultType="java.lang.Integer" >
	SELECT
		count(1) AS s
	FROM
		(
			SELECT
				*
			FROM
				(
					SELECT
						om.order_no,
						om.shop_no,
						om.shop_name,
						om.out_date,
						om.all_amount,
						orp.pay_code,
						orp.pay_name,
						orp.payway_num,
						orp.amount
					FROM
						order_main om
					LEFT JOIN order_payway orp ON om.order_no = orp.order_no
					WHERE
						1 = 1 
					<include refid = "orderMain_forFAS_Condition" />
					UNION ALL
					SELECT
						rem.business_no,
						rem.shop_no,
						rem.shop_name,
						rem.out_date,
						rem.all_amount,
						orp.pay_code,
						orp.pay_name,
						orp.payway_num,
						orp.amount
					FROM
						return_exchange_main rem
					LEFT JOIN order_payway orp ON rem.business_no = orp.order_no
					WHERE
						1 = 1 
					<include refid = "ReturnExchangeMain_Manager_Condition" />
				) a
			WHERE 1=1
			AND	a.out_date IS NOT NULL
			GROUP BY a.out_date, a.pay_code, a.shop_no
		) b  
	 
   </select>
   
   <select id="getSaleAmount" resultType="java.math.BigDecimal" parameterType="java.util.Map">
   	SELECT IFNULL(SUM(P.amount),0) amount FROM (
		SELECT
			op.order_no,op.amount
		FROM
			order_payway op
		LEFT JOIN order_main om ON op.order_no = om.order_no
		WHERE
			1 = 1
		AND op.pay_code = '01'
		AND om.shop_no = #{params.shopNo}
		AND om. STATUS IN ('30', '41')
		AND op.out_date &gt;= #{params.startOutDate}
		AND op.out_date &lt;= #{params.endOutDate}
		UNION ALL
		SELECT
			op.order_no,op.amount
		FROM
			order_payway op
		LEFT JOIN return_exchange_main rem ON op.order_no = rem.business_no
		WHERE
			1 = 1
		AND op.pay_code = '01'
		AND rem.shop_no = #{params.shopNo}
		AND rem. STATUS IN ('30', '41')
		AND op.out_date &gt;= #{params.startOutDate}
		AND op.out_date &lt;= #{params.endOutDate}
	) P
   </select>
   
  <!--生成开票申请：单据开票申请  wangyj -->
   <resultMap id="InvoiceApplyGeneratorModel" type="cn.wonhigh.retail.fas.common.model.BalanceInvoiceApplyGenerator" >
     <result column="dtl_id" property="dtlId" jdbcType="VARCHAR" />
     <result column="order_no" property="billNo" jdbcType="VARCHAR" />
     <result column="balance_type_name" property="balanceTypeName" jdbcType="VARCHAR" />
     <result column="send_date" property="balanceDate" jdbcType="DATE" />
     <result column="saler_no" property="salerNo" jdbcType="VARCHAR" />
     <result column="saler_name" property="salerName" jdbcType="VARCHAR" />
     <result column="buyer_no" property="buyerNo" jdbcType="VARCHAR" />
     <result column="buyer_name" property="buyerName" jdbcType="VARCHAR" />
     <result column="shop_no" property="shopNo" jdbcType="VARCHAR" />
     <result column="shop_name" property="shopName" jdbcType="VARCHAR" />
     <result column="organ_no" property="organNo" jdbcType="VARCHAR" />
     <result column="organ_name" property="organName" jdbcType="VARCHAR" />
     <result column="item_no" property="itemNo" jdbcType="VARCHAR" />
     <result column="item_code" property="itemCode" jdbcType="VARCHAR" />
     <result column="item_name" property="itemName" jdbcType="VARCHAR" />
     <result column="brand_no" property="brandNo" jdbcType="VARCHAR" />
     <result column="brand_name" property="brandName" jdbcType="VARCHAR" />
     <result column="category_no" property="categoryNo" jdbcType="VARCHAR" />
     <result column="cost" property="cost" jdbcType="DECIMAL" />
     <result column="qty" property="qty" jdbcType="INTEGER" />
     <result column="amount" property="amount" jdbcType="DECIMAL" />
     <result column="headquarter_cost" property="headquareCost" jdbcType="DECIMAL" />
     <result column="region_cost" property="areaCost" jdbcType="DECIMAL" />
     <result column="unit_cost" property="primeCost" jdbcType="DECIMAL" />
     <result column="category_name" property="categoryName" jdbcType="VARCHAR" />
     <result column="tag_price" property="tagPrice" jdbcType="DECIMAL" />
     <result column="sale_price" property="salePrice" jdbcType="DECIMAL" />
     <result column="pro_name" property="proName" jdbcType="VARCHAR" />
     <result column="discount" property="discount" jdbcType="DECIMAL" />
    </resultMap> 
   <!-- 生成开票申请：单据开票申请，查询gms 及pos 的内购销售单据进行开票  wangyj -->
  <select id="findApplyGeneratorDetail" parameterType="Map" resultMap="InvoiceApplyGeneratorModel">
  	 <!-- 查询GMS 单据 bill_sale_balance -->
  	 <if test="null!=params.queryType and ''!=params.queryType and 1 == params.queryType" >
		SELECT
			bsb.id dtl_id,
			bsb.bill_no order_no,
			CASE WHEN (bsb.bill_type = 1355 AND bsb.biz_type IN (8,10)) THEN '索赔单' WHEN (bsb.bill_type = 1342) THEN '报废单' 
			WHEN (bsb.bill_type = 1335 AND bsb.biz_type = 2) or (bsb.bill_type = 1355 AND bsb.biz_type = 26) THEN '客残销售单' WHEN (bsb.bill_type = 1335 AND bsb.biz_type = 23) THEN '团购出库单'
			WHEN (bsb.bill_type = 1335 AND bsb.biz_type = 24) THEN '团购退货单' WHEN (bsb.bill_type = 1335 AND bsb.biz_type = 13) THEN '领用出库-材料' END balance_type_name,
			bsb.send_date,
			bsb.saler_no,
			bsb.saler_name,
			bsb.buyer_no,
			bsb.buyer_name,
			'' shop_no,
			'' shop_name,
			bsb.organ_no_from organ_no,
 			bsb.organ_name_from organ_name,
 			bsb.item_no,
			bsb.item_code,
			bsb.item_name,
			bsb.brand_no,
			bsb.brand_name,
			left(bsb.category_no,2) category_no,
			bsb.cost,
			bsb.send_qty qty,
			bsb.cost* bsb.send_qty amount,
			bsb.headquarter_cost,
			bsb.region_cost,
			bsb.unit_cost,
			bsb.tag_price,
			bsb.cost sale_price,
			'' pro_name,
			0 discount,
			cty.name category_name
		FROM
			bill_sale_balance bsb left join invoice_apply_confirm_dtl cd on bsb.id = cd.order_dtl_id
			LEFT JOIN category cty on left(bsb.category_no,2) = cty.category_no
		<include refid="invoiceGmsCondition" />
		order by bsb.send_date DESC, balance_type_name ,bsb.bill_no DESC
		LIMIT #{page.startRowNum} ,#{page.pageSize} 
	  </if>
	  
	  <!-- 查询POS 单据 order_main -->
  	  <if test="null!=params.queryType and ''!=params.queryType and 2 == params.queryType" >
  	  	select *,cty.name category_name,pet.organ_no,pet.name organ_name from (
	  	  	select od.id dtl_id,
	  	  		od.order_no,
	  	  		'POS内购' balance_type_name,
				om.out_date send_date,
				om.company_no saler_no,
				om.company_name saler_name, 
				'' buyer_no,
				'' buyer_name,
				om.shop_no,
				om.shop_name,
				og.parent_no,
				od.item_no,
				od.item_code,
				od.item_name,
				od.brand_no,
				od.brand_name,
				LEFT(od.category_no,2) category_no,
				od.settle_price cost,
				od.qty,
				od.amount,
				od.headquarter_cost,
				od.region_cost,
				od.unit_cost,
				od.tag_price,
				od.sale_price,
				od.pro_name,
				IFNULL(od.discount,0)
			from order_main om LEFT JOIN order_dtl od on om.order_no = od.order_no
			LEFT JOIN shop sp on om.shop_no = sp.shop_no
			LEFT JOIN invoice_apply_confirm_dtl cd on od.id = cd.order_dtl_id
			LEFT JOIN organ og ON sp.biz_city_no = og.organ_no
			<include refid="invoiceOrderMainCodition" />
			UNION ALL
			
			select red.id dtl_id,
				red.business_no order_no,
				'POS内购' balance_type_name,
				rem.out_date send_date,
				rem.company_no saler_no,
				rem.company_name saler_name, 
				'' buyer_no,
				'' buyer_name,
				rem.shop_no,
				rem.shop_name,
				og.parent_no,
				red.item_no,
				red.item_code,
				red.item_name,
				red.brand_no,
				red.brand_name,
				LEFT(red.category_no,2) category_no,
				red.settle_price cost,
				red.qty,
				red.amount,
				red.headquarter_cost,
				red.region_cost,
				red.unit_cost,
				red.tag_price,
				red.sale_price,
				red.pro_name,
				IFNULL(red.discount,0)
			from return_exchange_dtl red LEFT JOIN return_exchange_main rem on red.business_no = rem.business_no
			LEFT JOIN shop sp on sp.shop_no = rem.shop_no 
			LEFT JOIN invoice_apply_confirm_dtl cd on red.id = cd.order_dtl_id
			LEFT JOIN organ og ON sp.biz_city_no = og.organ_no
			<include refid="invoiceReturnCodition" />
		) tb LEFT JOIN category cty on tb.category_no = cty.category_no
		LEFT JOIN organ pet ON tb.parent_no = pet.organ_no
		order by tb.send_date DESC, tb.balance_type_name ,tb.order_no DESC
		LIMIT #{page.startRowNum} ,#{page.pageSize} 
  	  </if>
  	  
  	  <!--  bill_sale_balance & order_main 连表查询 -->
  	  <if test="null!=params.queryType and ''!=params.queryType and 3 == params.queryType" >
	  	select tb.*,cty.name category_name from (
			SELECT
				bsb.id dtl_id,
				bsb.bill_no order_no,
				CASE WHEN (bsb.bill_type = 1355 AND bsb.biz_type IN (8,10)) THEN '索赔单' WHEN (bsb.bill_type = 1342) THEN '报废单' 
				WHEN (bsb.bill_type = 1335 AND bsb.biz_type = 2) or (bsb.bill_type = 1355 AND bsb.biz_type = 26) THEN '客残销售单' WHEN (bsb.bill_type = 1335 AND bsb.biz_type = 23) THEN '团购出库单'
				WHEN (bsb.bill_type = 1335 AND bsb.biz_type = 24) THEN '团购退货单' WHEN (bsb.bill_type = 1335 AND bsb.biz_type = 13) THEN '领用出库-材料' END balance_type_name,
				bsb.send_date,
				bsb.saler_no,
				bsb.saler_name,
				bsb.buyer_no,
				bsb.buyer_name,
				'' shop_no,
				'' shop_name,
				bsb.organ_no_from organ_no,
 				bsb.organ_name_from organ_name,
 				bsb.item_no,
				bsb.item_code,
				bsb.item_name,
				bsb.brand_no,
				bsb.brand_name,
				left(bsb.category_no,2) category_no,
				bsb.cost,
				bsb.send_qty qty,
				bsb.cost* bsb.send_qty amount,
				bsb.headquarter_cost,
				bsb.region_cost,
				bsb.unit_cost,
				bsb.tag_price,
				bsb.cost sale_price,
				'' pro_name,
				0 discount
			FROM
				bill_sale_balance bsb left join invoice_apply_confirm_dtl cd on bsb.id = cd.order_dtl_id
			<include refid="invoiceGmsCondition" />
			UNION ALL
			
			select od.id dtl_id,
				od.order_no,
				'POS内购' balance_type_name,
				om.out_date send_date,
				om.company_no saler_no,
				om.company_name saler_name, 
				'' buyer_no,
				'' buyer_name,
				om.shop_no,
				om.shop_name,
				pet.organ_no,
				pet.name organ_name,
				od.item_no,
				od.item_code,
				od.item_name,
				od.brand_no,
				od.brand_name,
				LEFT(od.category_no,2) category_no,
				od.settle_price cost,
				od.qty,
				od.amount,
				od.headquarter_cost,
				od.region_cost,
				od.unit_cost,
				od.tag_price,
				od.sale_price,
				od.pro_name,
				IFNULL(od.discount,0)
			from order_dtl od LEFT JOIN order_main om on od.order_no = om.order_no
			LEFT JOIN shop sp on om.shop_no = sp.shop_no
			LEFT JOIN invoice_apply_confirm_dtl cd on od.id = cd.order_dtl_id
			LEFT JOIN organ og ON sp.biz_city_no = og.organ_no
			LEFT JOIN organ pet ON og.parent_no = pet.organ_no
			<include refid="invoiceOrderMainCodition" />
			
			UNION ALL
			
			select red.id dtl_id,
				red.business_no order_no,
				'POS内购' balance_type_name,
				rem.out_date send_date,
				rem.company_no saler_no,
				rem.company_name saler_name, 
				'' buyer_no,
				'' buyer_name,
				rem.shop_no,
				rem.shop_name,
				pet.organ_no,
				pet.name organ_name,
				red.item_no,
				red.item_code,
				red.item_name,
				red.brand_no,
				red.brand_name,
				LEFT(red.category_no,2) category_no,
				red.settle_price cost,
				red.qty,
				red.amount,
				red.headquarter_cost,
				red.region_cost,
				red.unit_cost,
				red.tag_price,
				red.sale_price,
				red.pro_name,
				IFNULL(red.discount,0)
			from return_exchange_dtl red LEFT JOIN return_exchange_main rem on red.business_no = rem.business_no
			LEFT JOIN shop sp on sp.shop_no = rem.shop_no 
			LEFT JOIN invoice_apply_confirm_dtl cd on red.id = cd.order_dtl_id
			LEFT JOIN organ og ON sp.biz_city_no = og.organ_no
			LEFT JOIN organ pet ON og.parent_no = pet.organ_no
			<include refid="invoiceReturnCodition" />
		) tb LEFT JOIN category cty on tb.category_no = cty.category_no
		order by tb.send_date DESC, tb.balance_type_name ,tb.order_no DESC
		LIMIT #{page.startRowNum} ,#{page.pageSize} 
	  </if>
  </select>
  <!-- 获取记录数 -->
  <select id="findApplyGeneratorDetailCount" parameterType="Map" resultType="java.lang.Integer">
  	<if test="null!=params.queryType and ''!=params.queryType and 1 == params.queryType" >
  		SELECT count(*) FROM (
			select bsb.bill_no 
			FROM bill_sale_balance bsb 
			left join invoice_apply_confirm_dtl cd on bsb.id = cd.order_dtl_id
			LEFT JOIN organ og ON bsb.organ_no_from = og.organ_no
			<include refid="invoiceGmsCondition" />
		) tb
  	</if>
  	<if test="null!=params.queryType and ''!=params.queryType and 2 == params.queryType" >
  		select count(*) from(
  			select od.order_no
			from order_main om LEFT JOIN order_dtl od on om.order_no = od.order_no
			LEFT JOIN shop sp on om.shop_no = sp.shop_no
			LEFT JOIN invoice_apply_confirm_dtl cd on od.id = cd.order_dtl_id
			LEFT JOIN organ og ON sp.biz_city_no = og.organ_no
			<include refid="invoiceOrderMainCodition" />
			UNION ALL
			
			select red.business_no order_no
			from return_exchange_dtl red LEFT JOIN return_exchange_main rem on red.business_no = rem.business_no
			LEFT JOIN shop sp on sp.shop_no = rem.shop_no 
			LEFT JOIN invoice_apply_confirm_dtl cd on red.id = cd.order_dtl_id
			LEFT JOIN organ og ON sp.biz_city_no = og.organ_no
			<include refid="invoiceReturnCodition" />
  		) tb
  	</if>
  	<if test="null!=params.queryType and ''!=params.queryType and 3 == params.queryType" >
	  	select count(*) from (
			SELECT
				bsb.bill_no order_no,
				<!-- CASE WHEN (bsb.bill_type = 1355 AND bsb.biz_type IN (8,10)) THEN '索赔单'  WHEN (bsb.bill_type = 1342) THEN '报废单' 
				WHEN (bsb.bill_type = 1335 AND bsb.biz_type = 2) THEN '客残销售单'  END balance_type_name,
				bsb.send_date,
				bsb.saler_no,
				bsb.saler_name,
				bsb.buyer_no,
				bsb.buyer_name,
				bsb.item_code,
				bsb.item_name,
				bsb.brand_no,
				bsb.brand_name,
				left(bsb.category_no,2) category_no,
				bsb.send_qty qty,
				bsb.headquarter_cost,
				bsb.region_cost, -->
				bsb.unit_cost
			FROM bill_sale_balance bsb 
			left join invoice_apply_confirm_dtl cd on bsb.id = cd.order_dtl_id
			LEFT JOIN organ og ON bsb.organ_no_from = og.organ_no
			<include refid="invoiceGmsCondition" />
			
			UNION ALL
			
			select od.order_no,
				<!-- 'POS内购' balance_type_name,
				om.out_date send_date,
				om.shop_no saler_no,
				om.shop_name saler_name,
				'' buyer_no,
				'' buyer_name,
				od.item_code,
				od.item_name,
				od.brand_no,
				od.brand_name,
				LEFT(od.category_no,2) category_no,
				od.qty,
				od.headquarter_cost,
				od.region_cost, -->
				od.unit_cost
			from order_main om LEFT JOIN order_dtl od on om.order_no = od.order_no
			LEFT JOIN shop sp on om.shop_no = sp.shop_no
			LEFT JOIN invoice_apply_confirm_dtl cd on od.id = cd.order_dtl_id
			LEFT JOIN organ og ON sp.biz_city_no = og.organ_no
			<include refid="invoiceOrderMainCodition" />
			UNION ALL
			
			select red.business_no order_no,
				<!--' POS内购' balance_type_name,
				rem.out_date send_date,
				rem.shop_no saler_no,
				rem.shop_name saler_name,
				'' buyer_no,
				'' buyer_name,
				red.item_code,
				red.item_name,
				red.brand_no,
				red.brand_name,
				LEFT(red.category_no,2) category_no,
				red.qty,
				red.headquarter_cost,
				red.region_cost, -->
				red.unit_cost
			from return_exchange_dtl red LEFT JOIN return_exchange_main rem on red.business_no = rem.business_no
			LEFT JOIN shop sp on sp.shop_no = rem.shop_no 
			LEFT JOIN invoice_apply_confirm_dtl cd on red.id = cd.order_dtl_id
			LEFT JOIN organ og ON sp.biz_city_no = og.organ_no
			<include refid="invoiceReturnCodition" />
		) tb
	</if>
  </select>
  <!-- 查询GMS单据的条件 -->
  <sql id="invoiceGmsCondition">
  	WHERE cd.status = 1 
  	<if test="null!=params.invoiceApplyNo and ''!=params.invoiceApplyNo">
  		and cd.invoice_apply_no = #{params.invoiceApplyNo}
  	</if>
  	<if test="null == params.invoiceApplyNo or '' == params.invoiceApplyNo">
  		and (cd.invoice_apply_no is null or cd.invoice_apply_no = '')
	</if>
  	<if test="null!=params.searchCompanyNo and ''!=params.searchCompanyNo">
		and  bsb.saler_no = #{params.searchCompanyNo}
	</if>
	<if test="null!=params.startDate and ''!=params.startDate">
		and  bsb.send_date &gt;= '${params.startDate} 00:00:00' and bsb.send_date &lt;= '${params.endDate} 23:59:59'
	</if>
	<if test="null != params.queryCondition and '' != params.queryCondition">
		and (${params.queryCondition})
	</if>
	<if test="null == params.queryCondition">
		and (( bsb.bill_type = 1355 AND bsb.biz_type IN (8,10,26)) OR (bsb.bill_type = 1342) OR (bsb.bill_type = 1335 AND bsb.biz_type in(2,23,24,13)))
	</if>
	<if test="params.organNoList!=null and params.organNoList!=''" >
	   <foreach collection="params.organNoList" item="organNo" open="AND bsb.organ_no_from in(" separator="," close=")">
	      '${organNo}'
	   </foreach>
  	</if>
  </sql>
  <!-- 查询pos 正常订单的条件 -->
  <sql id="invoiceOrderMainCodition">
  	WHERE cd.status = 1 and om.business_type = 3 and om.`status` in (30,41)
  	<if test="null!=params.invoiceApplyNo and ''!=params.invoiceApplyNo">
  		and cd.invoice_apply_no = #{params.invoiceApplyNo}
  	</if>
  	<if test="null == params.invoiceApplyNo or '' == params.invoiceApplyNo">
  		and (cd.invoice_apply_no is null or cd.invoice_apply_no = '')
	</if>
  	<if test="null!=params.searchCompanyNo and ''!=params.searchCompanyNo">
		and  om.company_no = #{params.searchCompanyNo}
	</if>
	<if test="null!=params.startDate and ''!=params.startDate">
		and  om.out_date &gt;= '${params.startDate} 00:00:00' and om.out_date &lt;= '${params.endDate} 23:59:59'
	</if>
	<if test="params.organNoList!=null and params.organNoList!=''" >
	   <foreach collection="params.organNoList" item="organNo" open="AND og.parent_no in(" separator="," close=")">
	      '${organNo}'
	   </foreach>
  	</if>
  </sql>
  <!-- 查询pos 退换货订单的条件 -->
  <sql id="invoiceReturnCodition">
  	WHERE cd.status = 1 and rem.business_type = 3 and rem.`status` in (30,41)
	<if test="null!=params.invoiceApplyNo and ''!=params.invoiceApplyNo">
  		and cd.invoice_apply_no = #{params.invoiceApplyNo}
  	</if>
  	<if test="null == params.invoiceApplyNo or '' == params.invoiceApplyNo">
  		and (cd.invoice_apply_no is null or cd.invoice_apply_no = '')
	</if>
  	<if test="null!=params.searchCompanyNo and ''!=params.searchCompanyNo">
		and  rem.company_no = #{params.searchCompanyNo}
	</if>
	<if test="null!=params.startDate and ''!=params.startDate">
		and  rem.out_date &gt;= '${params.startDate} 00:00:00' and rem.out_date &lt;= '${params.endDate} 23:59:59'
	</if>
	<if test="params.organNoList!=null and params.organNoList!=''" >
	   <foreach collection="params.organNoList" item="organNo" open="AND og.parent_no in(" separator="," close=")">
	      '${organNo}'
	   </foreach>
  	</if>
  </sql>
  
  <!--内购明细：POS销售明细  wangyj -->
  <resultMap id="innerBuyDetailPosModel" type="cn.wonhigh.retail.fas.common.dto.OrderDtlDto" >
  	 <result column="dtl_id" property="orderDtlId" jdbcType="VARCHAR" />
  	 <result column="company_no" property="companyNo" jdbcType="VARCHAR" />
     <result column="company_name" property="companyName" jdbcType="VARCHAR" />
  	 <result column="organ_name" property="organName" jdbcType="VARCHAR" />
     <result column="shop_name" property="shopName" jdbcType="VARCHAR" />
     <result column="shop_no" property="shopNo" jdbcType="VARCHAR" />
     <result column="status" property="financeConfirmFlag" jdbcType="INTEGER" />
     <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
     <result column="item_no" property="itemNo" jdbcType="VARCHAR" />
     <result column="item_code" property="itemCode" jdbcType="VARCHAR" />
     <result column="item_name" property="itemName" jdbcType="VARCHAR" />
     <result column="category_no" property="categoryNo" jdbcType="VARCHAR" />
     <result column="brand_no" property="brandNo" jdbcType="VARCHAR" />
     <result column="brand_name" property="brandName" jdbcType="VARCHAR" />
     <result column="brand_unit_name" property="brandUnitName" jdbcType="VARCHAR" />
     <result column="qty" property="qty" jdbcType="INTEGER" />
     <result column="tag_price" property="tagPrice" jdbcType="DECIMAL" />
     <result column="sale_price" property="salePrice" jdbcType="DECIMAL" />
     <result column="settle_price" property="settlePrice" jdbcType="DECIMAL" />
     <result column="amount" property="amount" jdbcType="DECIMAL" />
     <result column="unit_cost" property="unitCost" jdbcType="DECIMAL" />
     <result column="region_cost" property="regionCost" jdbcType="DECIMAL" />
     <result column="headquarter_cost" property="headquarterCost" jdbcType="DECIMAL" />
     <result column="invoice_no" property="invoiceNo" jdbcType="VARCHAR" /> 
	 <result column="invoice_date" property="invoiceDate" jdbcType="DATE" /> 
     <result column="disc_amount" property="discAmount" jdbcType="INTEGER"/>
     <result column="disc_price" property="discPrice" jdbcType="DECIMAL" />   
     <result column="ticket_amount" property="ticketAmount" jdbcType="DECIMAL" />  
     <result column="ticket_price" property="ticketPrice" jdbcType="DECIMAL" />  
     <result column="diff_amount" property="diffAmount" jdbcType="VARCHAR"/>      
     <result column="sell_amount" property="sellAmount" jdbcType="VARCHAR"/> 
     <result column="receiving_name" property="receivingName" jdbcType="DECIMAL"/> 
     <result column="receiving_tel" property="receivingTel" jdbcType="INTEGER"/> 
     <result column="receiving_address" property="receivingAddress" jdbcType="INTEGER"/>
     <result column="create_time" property="createTime" jdbcType="DATE" />
     <result column="create_user" property="createUser" jdbcType="VARCHAR" />
     <result column="update_time" property="updateTime" jdbcType="DATE" />
     <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
     <result column="category_name" property="categoryName" jdbcType="VARCHAR" />
     <result column="organ_name" property="organName" jdbcType="VARCHAR" />
     <result column="biz_type_code" property="bizTypeCode" jdbcType="VARCHAR" />
     <result column="biz_type_name" property="bizTypeName" jdbcType="VARCHAR" />
     <result column="total" property="total" jdbcType="INTEGER" />
     <result column="remark" property="remark" jdbcType="VARCHAR"/>
     <result column="disc_apply_no" property="discApplyNo" jdbcType="VARCHAR"/>
     <result column="ticket_apply_no" property="ticketApplyNo" jdbcType="VARCHAR"/>
     <result column="assistant_no" property="assistantNo" jdbcType="VARCHAR"/>
     <result column="assistant_name" property="assistantName" jdbcType="VARCHAR"/>
     <result column="out_date" property="outDate" jdbcType="DATE" />
     <result column="client_no" property="clienttNo" jdbcType="VARCHAR"/>
     <result column="client_name" property="clientName" jdbcType="VARCHAR"/>
  </resultMap>
  
   <!-- 根据查询条件，查询pos 内购销售明细信息 wangyj -->
  <select id="findPosInnerBuyDetailList" parameterType="map" resultMap="innerBuyDetailPosModel">
  	select pet.`name` organ_name,
		sp.short_name shop_name,
		tb.* ,
		IFNULL(acd.`status`,0) status,
		cty.`name` category_name,
		acd.invoice_apply_no invoice_no, 
		acd.invoice_apply_date invoice_date,
		ocd.receiving_name,
		ocd.receiving_tel,
		ocd.receiving_address,
		acd.update_time,
		acd.update_user
	from (SELECT od.id dtl_id,
			om.company_no,
			om.company_name,
			om.shop_no,
			od.order_no,
			om.out_date,
			om.biz_type_name,
			od.item_no,
			od.item_code,
			od.item_name,
			od.brand_name,
			od.brand_unit_name,
			od.category_no,
			od.qty,
			od.tag_price * od.qty tag_price,
			od.settle_price * od.qty settle_price,
			IFNULL(od.real_buy_amount,0) disc_amount,
			IFNULL(od.surplus_amount,0) disc_price ,
			od.invoice_no disc_apply_no,
			od.amount,
			od.unit_cost * od.qty unit_cost,
			od.region_cost * od.qty region_cost,
			od.headquarter_cost * od.qty headquarter_cost,
			0 ticket_amount ,
			0 ticket_price,
			'' ticket_apply_no,
			0 diff_amount,
			IFNULL(od.surplus_amount,0) + (od.settle_price * od.qty) sell_amount,
			od.create_time,
			od.create_user,
			om.remark,
			om.client_no,
			om.client_name,
			GROUP_CONCAT(oa.assistant_no SEPARATOR ",") assistant_no,
			GROUP_CONCAT(oa.assistant_name SEPARATOR ",") assistant_name
		from order_dtl od LEFT JOIN order_main om on od.order_no = om.order_no
		LEFT JOIN order_assistant oa on od.id = oa.order_dtl_id
		where 1 = 1 <include refid="orderMainCodition" />
		GROUP BY od.id
		UNION ALL
		
		SELECT red.id dtl_id,
			rem.company_no,
			rem.company_name,
			rem.shop_no,
			red.business_no order_no,
			rem.out_date,
			'退换货' biz_type_name,
			red.item_no,
			red.item_code,
			red.item_name,
			red.brand_name,
			red.brand_unit_name,
			red.category_no,
			red.qty,
			red.tag_price * red.qty tag_price,
			red.settle_price * red.qty settle_price,
			IFNULL(red.real_buy_amount,0) disc_amount,
			IFNULL(red.surplus_amount,0) disc_price ,
			red.invoice_no disc_apply_no,
			red.amount,
			red.unit_cost * red.qty unit_cost,
			red.region_cost * red.qty region_cost,
			red.headquarter_cost * red.qty headquarter_cost,
			0 ticket_amount ,
			0 ticket_price,
			'' ticket_apply_no,
			0 diff_amount,
			IFNULL(red.surplus_amount,0) + (red.settle_price * red.qty) sell_amount,
			red.create_time,
			red.create_user,
			rem.remark,
			rem.client_no,
			rem.client_name,
			GROUP_CONCAT(oa.assistant_no SEPARATOR ",") assistant_no,
			GROUP_CONCAT(oa.assistant_name SEPARATOR ",") assistant_name
		 from return_exchange_dtl red LEFT JOIN return_exchange_main rem on red.business_no = rem.business_no
		 LEFT JOIN order_assistant oa on red.id = oa.order_dtl_id
	 	where 1=1 <include refid="exchangeMainCondition" />
	 	GROUP BY red.id
	) tb LEFT JOIN invoice_apply_confirm_dtl acd on tb.dtl_id = acd.order_dtl_id and tb.order_no = acd.order_no and tb.item_no = acd.item_no
	INNER JOIN shop sp on tb.shop_no = sp.shop_no 
	<!-- LEFT JOIN company cp on sp.company_no = cp.company_no  -->
	LEFT JOIN organ og ON sp.biz_city_no = og.organ_no
	LEFT JOIN organ pet ON og.parent_no = pet.organ_no
	LEFT JOIN category cty on left(tb.category_no,2) = cty.category_no 
	LEFT JOIN order_customer_address ocd on ocd.order_no = tb.order_no
  	where 1=1 <include refid="innerBuyCommonCondition" />
  	ORDER BY pet.`name`,tb.brand_name,tb.create_time desc
  	LIMIT #{page.startRowNum} ,#{page.pageSize}
  </select>
  
  <!-- 根据查询条件，查询pos 内购销售明细记录数 wangyj -->
  <select id="findPosInnerBuyDetailCount" parameterType="map" resultMap="innerBuyDetailPosModel">
  	select count(*) total,
	  	sum(tb.qty) qty,
	  	sum(tb.tag_price) tag_price,
		sum(tb.settle_price) settle_price,
	  	sum(tb.disc_amount) disc_amount,
		sum(tb.disc_price) disc_price,
	  	sum(tb.amount) amount,
	  	sum(tb.unit_cost) unit_cost,
	  	sum(tb.region_cost) region_cost,
	  	sum(tb.headquarter_cost) headquarter_cost,
	  	sum(tb.sell_amount) sell_amount
	from (SELECT od.id dtl_id,
			om.shop_no,
			om.shop_name,
			om.biz_type_name,
			od.order_no,
			od.item_no,
			od.item_code,
			od.item_name,
			od.brand_name,
			od.category_no,
			od.qty,
			od.tag_price * od.qty tag_price,
			od.settle_price * od.qty settle_price,
			IFNULL(od.real_buy_amount,0) disc_amount,
			IFNULL(od.surplus_amount,0) disc_price ,
			od.amount,
			od.unit_cost * od.qty unit_cost,
			od.region_cost * od.qty region_cost,
			od.headquarter_cost * od.qty headquarter_cost,
			IFNULL(od.surplus_amount,0) + (od.settle_price * od.qty) sell_amount
		from order_dtl od LEFT JOIN order_main om on od.order_no = om.order_no
		LEFT JOIN order_assistant oa on od.id = oa.order_dtl_id
		where  1 = 1 <include refid="orderMainCodition" />
		GROUP BY od.id
		UNION ALL
		
		SELECT red.id dtl_id,
			rem.shop_no,
			rem.shop_name,
			red.business_no order_no,
			'退换货' biz_type_name,
			red.item_no,
			red.item_code,
			red.item_name,
			red.brand_name,
			red.category_no,
			red.qty,
			red.tag_price * red.qty tag_price,
			red.settle_price * red.qty settle_price,
			IFNULL(red.real_buy_amount,0) disc_amount,
			IFNULL(red.surplus_amount,0) disc_price ,
			red.amount,
			red.unit_cost * red.qty unit_cost,
			red.region_cost * red.qty region_cost,
			red.headquarter_cost * red.qty headquarter_cost,
			IFNULL(red.surplus_amount,0) + (red.settle_price * red.qty) sell_amount
		 from return_exchange_dtl red LEFT JOIN return_exchange_main rem on red.business_no = rem.business_no
		 LEFT JOIN order_assistant oa on red.id = oa.order_dtl_id
	 	 where 1=1 <include refid="exchangeMainCondition" />
	 	 GROUP BY red.id
	) tb LEFT JOIN invoice_apply_confirm_dtl acd on tb.dtl_id = acd.order_dtl_id and tb.order_no = acd.order_no and tb.item_no = acd.item_no
	LEFT JOIN shop sp on tb.shop_no = sp.shop_no 
	<!-- LEFT JOIN company cp on sp.company_no = cp.company_no  -->
	LEFT JOIN organ og ON sp.biz_city_no = og.organ_no
	LEFT JOIN organ pet ON og.parent_no = pet.organ_no
	LEFT JOIN category cty on left(tb.category_no,2) = cty.category_no 
	LEFT JOIN order_customer_address ocd on ocd.order_no = tb.order_no
	where 1=1 <include refid="innerBuyCommonCondition" />
  </select>
  
  <sql id="orderMainCodition">
   	AND om.business_type in (3) AND om.status in(30,41)
	<if test="null!=params" >
		<if test="null!=params.companyNo and '' != params.companyNo">
  	  		AND om.company_no= #{params.companyNo} 
  		</if>
		<if test="null!=params.startDate and ''!=params.startDate">
			and om.out_date &gt;= '${params.startDate} 00:00:00' and om.out_date &lt;= '${params.endDate} 23:59:59'
		</if>
		<if test="params.brandNoList!=null and params.brandNoList!=''" >
		   <foreach collection="params.brandNoList" item="brandNo" open="AND od.brand_no in(" separator="," close=")">
		      '${brandNo}'
		   </foreach>
	  	</if>
		
		<if test="null!=params.orderNo and '' != params.orderNo">
			and od.order_no = #{params.orderNo}
		</if>
	</if>
  </sql>
  
  <sql id="exchangeMainCondition">
   	AND rem.business_type in (3) AND rem.status in(30,41)
   	<if test="null!=params" >
   		<if test="null!=params.companyNo and '' != params.companyNo">
  	  		AND rem.company_no= #{params.companyNo} 
  		</if>
		<if test="null!=params.startDate and ''!=params.startDate">
			and  rem.out_date &gt;= '${params.startDate} 00:00:00' and rem.out_date &lt;= '${params.endDate} 23:59:59'
		</if>
		<if test="params.brandNoList!=null and params.brandNoList!=''" >
		   <foreach collection="params.brandNoList" item="brandNo" open="AND red.brand_no in(" separator="," close=")">
		      '${brandNo}'
		   </foreach>
	  	</if>
	  	<if test="null!=params.orderNo and '' != params.orderNo">
			and red.business_no = #{params.orderNo}
		</if>
	</if>
  </sql>
  
  <sql id="innerBuyCommonCondition">
  	<if test="params.organNoList!=null and params.organNoList!=''" >
	   <foreach collection="params.organNoList" item="organNo" open="AND og.parent_no in(" separator="," close=")">
	      '${organNo}'
	   </foreach>
  	</if>
  	<if test="params.categoryNoList!=null and params.categoryNoList!=''" >
	   <foreach collection="params.categoryNoList" item="categoryNo" open="AND cty.category_no in(" separator="," close=")">
	      '${categoryNo}'
	   </foreach>
  	</if>
	
	<!-- 确认状态 -->
	<if test="null!=params.confirmStatus and '' != params.confirmStatus and 1 == params.confirmStatus">
		and acd.status = #{params.confirmStatus}
	</if>
	<!-- 未确认 -->
	<if test="null!=params.confirmStatus and '' != params.confirmStatus and 0 == params.confirmStatus">
		and (acd.status = 0 or acd.status is null)
	</if>
  </sql>
  
  <resultMap id="saleOrderPayway" type="cn.wonhigh.retail.fas.common.model.SaleOrderPayway" >
      <result column="shop_name" property="shopName" jdbcType="VARCHAR" />
      <result column="shop_no" property="shopNo" jdbcType="VARCHAR" />
      <result column="company_no" property="companyNo" jdbcType="VARCHAR" />
      <result column="company_name" property="companyName" jdbcType="VARCHAR" />
      <result column="brand_no" property="brandNo" jdbcType="VARCHAR" />
      <result column="brand_name" property="brandName" jdbcType="VARCHAR" />
      <result column="brand_unit_name" property="brandUnitName" jdbcType="VARCHAR" />
      <result column="out_date" property="outDate" jdbcType="DATE" />
      <result column="PAY_AMOUNT" property="payAmount" jdbcType="DECIMAL" />
      <result column="NET_AMOUNT" property="netAmount" jdbcType="DECIMAL" />
      <result column="RETURN_AMOUNT" property="returnAmount" jdbcType="DECIMAL" />
      <result column="ORDER_AMOUNT" property="orderAmount" jdbcType="DECIMAL" />
      <result column="YEAR" property="year" jdbcType="VARCHAR" />
      <result column="MONTH" property="month" jdbcType="VARCHAR" />     
        <result column="P01现金" property="p01" jdbcType="DECIMAL" />
		<result column="P03现金券" property="p03" jdbcType="DECIMAL" />
		<result column="P04银行卡" property="p04" jdbcType="DECIMAL" />
		<result column="P05商场卡" property="p05" jdbcType="DECIMAL" />
		<result column="P06其它" property="p06" jdbcType="DECIMAL" />
		<result column="P08商场券" property="p08" jdbcType="DECIMAL" />
		<result column="P09预收款" property="p09" jdbcType="DECIMAL" />
		<result column="P10支票" property="p10" jdbcType="DECIMAL" />
		<result column="P11减现额接劵额" property="p11" jdbcType="DECIMAL" />
		<result column="P12国外银行卡" property="p12" jdbcType="DECIMAL" />
		<result column="P13IC卡" property="p13" jdbcType="DECIMAL" />
		<result column="P14公司折扣券" property="p14" jdbcType="DECIMAL" />
		<result column="P15商场折扣券" property="p15" jdbcType="DECIMAL" />
		<result column="P16美元" property="p16" jdbcType="DECIMAL" />
		<result column="P17港币" property="p17" jdbcType="DECIMAL" />
		<result column="P18联华卡" property="p18" jdbcType="DECIMAL" />
		<result column="P19市民卡" property="p19" jdbcType="DECIMAL" />
		<result column="P20商盟卡" property="p20" jdbcType="DECIMAL" />
		<result column="P20151010支付宝商场收银" property="p20151010" jdbcType="DECIMAL" />
		<result column="P21支付宝当面付" property="p21" jdbcType="DECIMAL" />
		<result column="P22微信当面付" property="p22" jdbcType="DECIMAL" />
		<result column="P23储值卡" property="p23" jdbcType="DECIMAL" />
		<result column="P24其它外卡" property="p24" jdbcType="DECIMAL" />
		<result column="P25商场现金劵" property="p25" jdbcType="DECIMAL" />
		<result column="P26心赏卡" property="p26" jdbcType="DECIMAL" />
		<result column="P27商场会员卡" property="p27" jdbcType="DECIMAL" />
		<result column="P28提货券" property="p28" jdbcType="DECIMAL" />
		<result column="P29外币卡" property="p29" jdbcType="DECIMAL" />
		<result column="P30刷卡退款" property="p30" jdbcType="DECIMAL" />
		<result column="P31商场储值卡" property="p31" jdbcType="DECIMAL" />
		<result column="P32百丽储值卡" property="p32" jdbcType="DECIMAL" />
		<result column="P33支付宝" property="p33" jdbcType="DECIMAL" />
		<result column="P35储值购物卡" property="p35" jdbcType="DECIMAL" />
		<result column="P36微信商场收银" property="p36" jdbcType="DECIMAL" />
		<result column="P37支付宝第三方" property="p37" jdbcType="DECIMAL" />
		<result column="P38微信第三方" property="p38" jdbcType="DECIMAL" />
		<result column="P999支付宝当面付" property="p999" jdbcType="DECIMAL" />
		<result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
		<result column="S01现金" property="s01" jdbcType="DECIMAL" />
		<result column="S03现金券" property="s03" jdbcType="DECIMAL" />
		<result column="S04银行卡" property="s04" jdbcType="DECIMAL" />
		<result column="S05商场卡" property="s05" jdbcType="DECIMAL" />
		<result column="S06其它" property="s06" jdbcType="DECIMAL" />
		<result column="S08商场券" property="s08" jdbcType="DECIMAL" />
		<result column="S09预收款" property="s09" jdbcType="DECIMAL" />
		<result column="S10支票" property="s10" jdbcType="DECIMAL" />
		<result column="S11减现额接劵额" property="s11" jdbcType="DECIMAL" />
		<result column="S12国外银行卡" property="s12" jdbcType="DECIMAL" />
		<result column="S13IC卡" property="s13" jdbcType="DECIMAL" />
		<result column="S14公司折扣券" property="s14" jdbcType="DECIMAL" />
		<result column="S15商场折扣券" property="s15" jdbcType="DECIMAL" />
		<result column="S16美元" property="s16" jdbcType="DECIMAL" />
		<result column="S17港币" property="s17" jdbcType="DECIMAL" />
		<result column="S18联华卡" property="s18" jdbcType="DECIMAL" />
		<result column="S19市民卡" property="s19" jdbcType="DECIMAL" />
		<result column="S20商盟卡" property="s20" jdbcType="DECIMAL" />
		<result column="S20151010支付宝商场收银" property="s20151010" jdbcType="DECIMAL" />
		<result column="S21支付宝当面付" property="s21" jdbcType="DECIMAL" />
		<result column="S22微信当面付" property="s22" jdbcType="DECIMAL" />
		<result column="S23储值卡" property="s23" jdbcType="DECIMAL" />
		<result column="S24其它外卡" property="s24" jdbcType="DECIMAL" />
		<result column="S25商场现金劵" property="s25" jdbcType="DECIMAL" />
		<result column="S26心赏卡" property="s26" jdbcType="DECIMAL" />
		<result column="S27商场会员卡" property="s27" jdbcType="DECIMAL" />
		<result column="S28提货券" property="s28" jdbcType="DECIMAL" />
		<result column="S29外币卡" property="s29" jdbcType="DECIMAL" />
		<result column="S30刷卡退款" property="s30" jdbcType="DECIMAL" />
		<result column="S31商场储值卡" property="s31" jdbcType="DECIMAL" />
		<result column="S32百丽储值卡" property="s32" jdbcType="DECIMAL" />
		<result column="S33支付宝" property="s33" jdbcType="DECIMAL" />
		<result column="S35储值购物卡" property="s35" jdbcType="DECIMAL" />
		<result column="S36微信商场收银" property="s36" jdbcType="DECIMAL" />
		<result column="S37支付宝第三方" property="s37" jdbcType="DECIMAL" />
		<result column="S38微信第三方" property="s38" jdbcType="DECIMAL" />
		<result column="S999支付宝当面付" property="s999" jdbcType="DECIMAL" />
		<result column="amount" property="amount" jdbcType="DECIMAL" />
		<result column="D01现金" property="d01" jdbcType="DECIMAL" />
		<result column="D03现金券" property="d03" jdbcType="DECIMAL" />
		<result column="D04银行卡" property="d04" jdbcType="DECIMAL" />
		<result column="D05商场卡" property="d05" jdbcType="DECIMAL" />
		<result column="D06其它" property="d06" jdbcType="DECIMAL" />
		<result column="D08商场券" property="d08" jdbcType="DECIMAL" />
		<result column="D09预收款" property="d09" jdbcType="DECIMAL" />
		<result column="D10支票" property="d10" jdbcType="DECIMAL" />
		<result column="D11减现额接券额" property="d11" jdbcType="DECIMAL" />
		<result column="D12国外银行卡" property="d12" jdbcType="DECIMAL" />
		<result column="D13IC卡" property="d13" jdbcType="DECIMAL" />
		<result column="D14公司折扣券" property="d14" jdbcType="DECIMAL" />
		<result column="D15商场折扣券" property="d15" jdbcType="DECIMAL" />
		<result column="D16美元" property="d16" jdbcType="DECIMAL" />
		<result column="D17港币" property="d17" jdbcType="DECIMAL" />
		<result column="D18联华卡" property="d18" jdbcType="DECIMAL" />
		<result column="D19市民卡" property="d19" jdbcType="DECIMAL" />
		<result column="D20商盟卡" property="d20" jdbcType="DECIMAL" />
		<result column="D20151010支付宝商场收银" property="d20151010" jdbcType="DECIMAL" />
		<result column="D21支付宝当面付" property="d21" jdbcType="DECIMAL" />
		<result column="D22微信当面付" property="d22" jdbcType="DECIMAL" />
		<result column="D23储值卡" property="d23" jdbcType="DECIMAL" />
		<result column="D24其它外卡" property="d24" jdbcType="DECIMAL" />
		<result column="D25商场现金券" property="d25" jdbcType="DECIMAL" />
		<result column="D26心赏卡" property="d26" jdbcType="DECIMAL" />
		<result column="D27商场会员卡" property="d27" jdbcType="DECIMAL" />
		<result column="D28提货券" property="d28" jdbcType="DECIMAL" />
		<result column="D29外币卡" property="d29" jdbcType="DECIMAL" />
		<result column="D30刷卡退款" property="d30" jdbcType="DECIMAL" />
		<result column="D31商场储值卡" property="d31" jdbcType="DECIMAL" />
		<result column="D32百丽储值卡" property="d32" jdbcType="DECIMAL" />
		<result column="D33支付宝" property="d33" jdbcType="DECIMAL" />
		<result column="D35储值购物卡" property="d35" jdbcType="DECIMAL" />
		<result column="D36微信商场收银" property="d36" jdbcType="DECIMAL" />
		<result column="D37支付宝第三方" property="d37" jdbcType="DECIMAL" />
		<result column="D38微信第三方" property="d38" jdbcType="DECIMAL" />
		<result column="D999支付宝当面付" property="d999" jdbcType="DECIMAL" />
		<result column="return_amount" property="returnAmount" jdbcType="DECIMAL" />
		<result column="actual_return_amount" property="actualReturnAmount" jdbcType="DECIMAL" />
		<result column="diff_amount" property="diffAmount" jdbcType="DECIMAL" />
		<result column="poundage" property="poundage" jdbcType="DECIMAL" />
		<result column="sum" property="sum" jdbcType="DECIMAL" />
		<result column="total" property="total" jdbcType="INTEGER"/>
   </resultMap>

     <select id="getSumSaleOrderPayway" resultMap="saleOrderPayway" parameterType="java.util.Map" >
     SELECT SUM(ab.PAY_AMOUNT)  PAY_AMOUNT,SUM(ab.NET_AMOUNT) NET_AMOUNT, SUM(ab.ORDER_AMOUNT) ORDER_AMOUNT,SUM(ab.RETURN_AMOUNT) RETURN_AMOUNT,
     SUM(ab.P01现金) p01现金, SUM(ab.P03现金券) p03现金券,SUM(ab.P04银行卡) p04银行卡,
		SUM(ab.P05商场卡) P05商场卡,
		SUM(ab.P06其它) P06其它,
		SUM(ab.P08商场券) P08商场券,
		SUM(ab.P09预收款) P09预收款,
		SUM(ab.P10支票) P10支票,
		SUM(ab.P11减现额接劵额) P11减现额接劵额,
		SUM(ab.P12国外银行卡) P12国外银行卡,
		SUM(ab.P13IC卡) P13IC卡,
		SUM(ab.P14公司折扣券) P14公司折扣券,
		SUM(ab.P15商场折扣券) P15商场折扣券,
		SUM(ab.P16美元) P16美元,
		SUM(ab.P17港币) P17港币,
		SUM(ab.P18联华卡) P18联华卡,
		SUM(ab.P19市民卡) P19市民卡,
		SUM(ab.P20商盟卡) P20商盟卡,
		SUM(ab.P21支付宝) P21支付宝,
		SUM(ab.P22微信支付) P22微信支付,
		SUM(ab.P23储值卡) P23储值卡,
		SUM(ab.P24其它外卡) P24其它外卡,
		SUM(ab.P25商场现金劵) P25商场现金劵,
		SUM(ab.P26心赏卡) P26心赏卡,
		SUM(ab.P27商场会员卡) P27商场会员卡,
		SUM(ab.P28提货券) P28提货券,
		SUM(ab.P29外币卡) P29外币卡,
		SUM(ab.P30刷卡退款) P30刷卡退款,
		SUM(ab.P31商场储值卡) P31商场储值卡,
		SUM(ab.P32百丽储值卡) P32百丽储值卡,
		SUM(ab.P35储值购物卡) P35储值购物卡,
		SUM(ab.P999支付宝当面付) P999支付宝当面付    
     FROM (
		 SELECT 
	 	 <include refid="SaleOrderPayway_Column_List" />
		 FROM (
		SELECT 
		<include refid="SaleOrderMainPayway_Column_List" />
		FROM
		  order_payway op INNER JOIN order_main om ON op.`order_no`=om.`order_no`
		  WHERE 1=1 <include refid="orderMain_Payway_Condition"/>
		GROUP BY om.shop_no,op.`out_date`,om.order_no  
		UNION ALL
		SELECT 
		<include refid="SaleOrderReturnPayway_Column_List" />
		FROM
		  order_payway op INNER JOIN return_exchange_main rem ON op.`order_no`=rem.`business_no` 
		  WHERE 1=1  <include refid="orderReturn_Payway_Condition"/> 
		GROUP BY rem.shop_no,op.`out_date`,rem.business_no  ) PT
		GROUP BY PT.shop_no,PT.out_date  )  ab
   </select>
   
   	<!-- 查询销售明细商场门店收款日报表支付方式 -->
  	<select id="findSaleOrderPaywayByPage" resultMap="saleOrderPayway" parameterType="java.util.Map" >
	 	SELECT 
	 	 <include refid="SaleOrderPayway_Column_List" />
		 FROM (
		SELECT 
		<include refid="SaleOrderMainPayway_Column_List" />
		FROM
		  order_payway op INNER JOIN order_main om ON op.`order_no`=om.`order_no`
		  WHERE 1=1 <include refid="orderMain_Payway_Condition"/>
		GROUP BY om.shop_no,op.`out_date`,om.order_no  
		UNION ALL
		SELECT 
		<include refid="SaleOrderReturnPayway_Column_List" />
		FROM
		  order_payway op INNER JOIN return_exchange_main rem ON op.`order_no`=rem.`business_no` 
		  WHERE 1=1  <include refid="orderReturn_Payway_Condition"/> 
		GROUP BY rem.shop_no,op.`out_date`,rem.business_no  ) PT
		GROUP BY PT.shop_no,PT.out_date
	    <if test="orderByField != null and ''!=orderByField" >
	      order by ${orderByField}
	      <if test="orderByField" >
	        ${orderBy}
	      </if>
	    </if>
	    <if test="orderByField == null or  ''==orderByField " >
	      ORDER BY PT.shop_no,PT.out_date DESC
	    </if>
	     limit #{page.startRowNum} ,#{page.pageSize} 
	</select>
  
  <!--查询销售明细商场门店收款日报表支付方式 -->
  <select id="findSaleOrderPaywayCount" resultType="java.lang.Integer" >
    SELECT COUNT(1) AS s FROM ( 
	SELECT  <include refid="SaleOrderPayway_Column_List" />
	 FROM (
	SELECT 
	<include refid="SaleOrderMainPayway_Column_List" />
	FROM
	  order_payway op INNER JOIN order_main om ON op.`order_no`=om.`order_no`
	  WHERE  1=1   <include refid="orderMain_Payway_Condition"/>
	GROUP BY om.shop_no,op.`out_date`,om.order_no  
	UNION ALL
	SELECT 
	<include refid="SaleOrderReturnPayway_Column_List" />
	FROM
	  order_payway op INNER JOIN return_exchange_main rem ON op.`order_no`=rem.`business_no` 
	  WHERE  1=1  <include refid="orderReturn_Payway_Condition"/>  
	GROUP BY rem.shop_no,op.`out_date`,rem.business_no  ) PT
	GROUP BY PT.shop_no,PT.out_date) b
  </select>
  
    <sql id="independShopDayreport_Column_List" >
		PT.shop_no,
		PT.shop_name,
		PT.company_no,
		PT.name,
		PT.out_date,
		SUM(P1) P01现金,
		SUM(P3) P03现金券,
		SUM(P4) P04银行卡,
		SUM(P5) P05商场卡,
		SUM(P6) P06其它,
		SUM(P8) P08商场券,
		SUM(P9) P09预收款,
		SUM(P10) P10支票,
		SUM(P11) P11减现额接劵额,
		SUM(P12) P12国外银行卡,
		SUM(P13) P13IC卡,
		SUM(P14) P14公司折扣券,
		SUM(P15) P15商场折扣券,
		SUM(P16) P16美元,
		SUM(P17) P17港币,
		SUM(P18) P18联华卡,
		SUM(P19) P19市民卡,
		SUM(P20) P20商盟卡,
		SUM(P21) P21支付宝,
		SUM(P22) P22微信支付,
		SUM(P23) P23储值卡,
		SUM(P24) P24其它外卡,
		SUM(P25) P25商场现金劵,
		SUM(P26) P26心赏卡,
		SUM(P27) P27商场会员卡,
		SUM(P28) P28提货券,
		SUM(P29) P29外币卡,
		SUM(P30) P30刷卡退款,
		SUM(P31) P31商场储值卡,
		SUM(P32) P32百丽储值卡,
		SUM(P35) P35储值购物卡,
		SUM(P999) P999支付宝当面付,
		SUM(PT.TOTAL_AMOUNT) 销售总额
   </sql>
  
  <sql id="SaleOrderPayway_Column_List" >
  	    PT.SHOP_NO,
		PT.SHOP_NAME,
		PT.out_date,
		SUM(PT.TOTAL_AMOUNT) PAY_AMOUNT,
		SUM(PT.ORDER_AMOUNT)+SUM(PT.RETURN_AMOUNT) NET_AMOUNT,
		SUM(PT.ORDER_AMOUNT) ORDER_AMOUNT,
		SUM(PT.RETURN_AMOUNT) RETURN_AMOUNT,
		SUM(P1) P01现金,
		SUM(P3) P03现金券,
		SUM(P4) P04银行卡,
		SUM(P5) P05商场卡,
		SUM(P6) P06其它,
		SUM(P8) P08商场券,
		SUM(P9) P09预收款,
		SUM(P10) P10支票,
		SUM(P11) P11减现额接劵额,
		SUM(P12) P12国外银行卡,
		SUM(P13) P13IC卡,
		SUM(P14) P14公司折扣券,
		SUM(P15) P15商场折扣券,
		SUM(P16) P16美元,
		SUM(P17) P17港币,
		SUM(P18) P18联华卡,
		SUM(P19) P19市民卡,
		SUM(P20) P20商盟卡,
		SUM(P21) P21支付宝,
		SUM(P22) P22微信支付,
		SUM(P23) P23储值卡,
		SUM(P24) P24其它外卡,
		SUM(P25) P25商场现金劵,
		SUM(P26) P26心赏卡,
		SUM(P27) P27商场会员卡,
		SUM(P28) P28提货券,
		SUM(P29) P29外币卡,
		SUM(P30) P30刷卡退款,
		SUM(P31) P31商场储值卡,
		SUM(P32) P32百丽储值卡,
		SUM(P35) P35储值购物卡,
		SUM(P999) P999支付宝当面付
   </sql>
  
    <sql id="SaleOrderMainPayway_Column_List" >
    om.`shop_no`,
	om.`shop_name`,
	om.`out_date`,
	SUM(op.amount) total_amount,
	SUM(DISTINCT IFNULL(om.amount,0)) order_amount,
	0 return_amount,
	SUM(IF(TRIM(op.pay_code)='01',op.amount,0)) P1,
	SUM(IF(TRIM(op.pay_code)='03',op.amount,0)) P3,
	SUM(IF(TRIM(op.pay_code)='04',op.amount,0)) P4,
	SUM(IF(TRIM(op.pay_code)='05',op.amount,0)) P5,
	SUM(IF(TRIM(op.pay_code) NOT IN ('01','03','04','05','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','35','25','26','27','28','29','30','31','32','999'),op.amount,0)) P6,
	SUM(IF(TRIM(op.pay_code)='08',op.amount,0)) P8,
	SUM(IF(TRIM(op.pay_code)='09',op.amount,0)) P9,
	SUM(IF(TRIM(op.pay_code)='10',op.amount,0)) P10,
	SUM(IF(TRIM(op.pay_code)='11',op.amount,0)) P11,
	SUM(IF(TRIM(op.pay_code)='12',op.amount,0)) P12,
	SUM(IF(TRIM(op.pay_code)='13',op.amount,0)) P13,
	SUM(IF(TRIM(op.pay_code)='14',op.amount,0)) P14,
	SUM(IF(TRIM(op.pay_code)='15',op.amount,0)) P15,
	SUM(IF(TRIM(op.pay_code)='16',op.amount,0)) P16,
	SUM(IF(TRIM(op.pay_code)='17',op.amount,0)) P17,
	SUM(IF(TRIM(op.pay_code)='18',op.amount,0)) P18,
	SUM(IF(TRIM(op.pay_code)='19',op.amount,0)) P19,
	SUM(IF(TRIM(op.pay_code)='20',op.amount,0)) P20,
	SUM(IF(TRIM(op.pay_code)='21',op.amount,0)) P21,
	SUM(IF(TRIM(op.pay_code)='22',op.amount,0)) P22,
	SUM(IF(TRIM(op.pay_code)='23',op.amount,0)) P23,
	SUM(IF(TRIM(op.pay_code)='24',op.amount,0)) P24,
	SUM(IF(TRIM(op.pay_code)='25',op.amount,0)) P25,
	SUM(IF(TRIM(op.pay_code)='26',op.amount,0)) P26,
	SUM(IF(TRIM(op.pay_code)='27',op.amount,0)) P27,
	SUM(IF(TRIM(op.pay_code)='28',op.amount,0)) P28,
	SUM(IF(TRIM(op.pay_code)='29',op.amount,0)) P29,
	SUM(IF(TRIM(op.pay_code)='30',op.amount,0)) P30,
	SUM(IF(TRIM(op.pay_code)='31',op.amount,0)) P31,
	SUM(IF(TRIM(op.pay_code)='32',op.amount,0)) P32,
	SUM(IF(TRIM(op.pay_code)='35',op.amount,0)) P35,
	SUM(IF(TRIM(op.pay_code)='999',op.amount,0)) P999
    </sql>
    <sql id="SaleOrderReturnPayway_Column_List" >
    rem.`shop_no`,
	rem.`shop_name`,
	rem.`out_date`,
	SUM(op.amount) total_amount,
	0 order_amount,
	SUM(DISTINCT IFNULL(rem.amount,0)) return_amount,
	SUM(IF(TRIM(op.pay_code)='01',op.amount,0)) P1,
	SUM(IF(TRIM(op.pay_code)='03',op.amount,0)) P3,
	SUM(IF(TRIM(op.pay_code)='04',op.amount,0)) P4,
	SUM(IF(TRIM(op.pay_code)='05',op.amount,0)) P5,
	SUM(IF(TRIM(op.pay_code) NOT IN ('01','03','04','05','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','35','25','26','27','28','29','30','31','32','999'),op.amount,0)) P6,
	SUM(IF(TRIM(op.pay_code)='08',op.amount,0)) P8,
	SUM(IF(TRIM(op.pay_code)='09',op.amount,0)) P9,
	SUM(IF(TRIM(op.pay_code)='10',op.amount,0)) P10,
	SUM(IF(TRIM(op.pay_code)='11',op.amount,0)) P11,
	SUM(IF(TRIM(op.pay_code)='12',op.amount,0)) P12,
	SUM(IF(TRIM(op.pay_code)='13',op.amount,0)) P13,
	SUM(IF(TRIM(op.pay_code)='14',op.amount,0)) P14,
	SUM(IF(TRIM(op.pay_code)='15',op.amount,0)) P15,
	SUM(IF(TRIM(op.pay_code)='16',op.amount,0)) P16,
	SUM(IF(TRIM(op.pay_code)='17',op.amount,0)) P17,
	SUM(IF(TRIM(op.pay_code)='18',op.amount,0)) P18,
	SUM(IF(TRIM(op.pay_code)='19',op.amount,0)) P19,
	SUM(IF(TRIM(op.pay_code)='20',op.amount,0)) P20,
	SUM(IF(TRIM(op.pay_code)='21',op.amount,0)) P21,
	SUM(IF(TRIM(op.pay_code)='22',op.amount,0)) P22,
	SUM(IF(TRIM(op.pay_code)='23',op.amount,0)) P23,
	SUM(IF(TRIM(op.pay_code)='24',op.amount,0)) P24,
	SUM(IF(TRIM(op.pay_code)='25',op.amount,0)) P25,
	SUM(IF(TRIM(op.pay_code)='26',op.amount,0)) P26,
	SUM(IF(TRIM(op.pay_code)='27',op.amount,0)) P27,
	SUM(IF(TRIM(op.pay_code)='28',op.amount,0)) P28,
	SUM(IF(TRIM(op.pay_code)='29',op.amount,0)) P29,
	SUM(IF(TRIM(op.pay_code)='30',op.amount,0)) P30,
	SUM(IF(TRIM(op.pay_code)='31',op.amount,0)) P31,
	SUM(IF(TRIM(op.pay_code)='32',op.amount,0)) P32,
	SUM(IF(TRIM(op.pay_code)='35',op.amount,0)) P35,
	SUM(IF(TRIM(op.pay_code)='999',op.amount,0)) P999
    </sql>
   
     <!-- 单独给FAS接口-->
  <sql id="orderMain_Payway_Condition" >
   	<if test="null!=params" >
   	<if test="params.shopNo != null and params.shopNo!=''">  
		and om.shop_no = #{params.shopNo}
   	</if>
   	<if test="params.companyNo != null and params.companyNo!=''">  
		and om.company_no = #{params.companyNo}
   	</if>
   	<if test="null!=params.shopNoLists and ''!=params.shopNoLists" >
       and om.shop_no in ${params.shopNoLists} 
   	</if>
	<if test="params.shopNoList!=null and params.shopNoList!=''" >
	  <foreach collection="params.shopNoList" item="shopNo" open="AND om.shop_no in(" separator="," close=")">
	     '${shopNo}'
	  </foreach>
	</if>
   	<if test="params.statusList!=null and params.statusList!=''">
     	<foreach collection="params.statusList" item="status" open="AND om.status in(" separator="," close=")">
         	'${status}'
    		</foreach>
  	 </if>
	<if test="params.retailType != null and params.retailType!=''">  
		and s.retail_type = #{params.retailType}
	</if>      
    <if test="params.startOutDate != null and params.startOutDate!=''">  
    	and  om.out_date  &gt;= #{params.startOutDate, jdbcType=DATE}
    </if> 	 
    <if test="params.endOutDate != null and params.endOutDate!=''">  
    	and  om.out_date  &lt;= #{params.endOutDate, jdbcType=DATE}
    </if>		
    <if test="null!=params.businessTypeList and ''!=params.businessTypeList" >
	<foreach collection="params.businessTypeList" item="businessType" open="AND om.business_type in(" separator="," close=")">
	   '${businessType}'
	 </foreach>
 	</if>
   </if>
  </sql>
     	
     	  <!-- 单独给FAS接口-->
  <sql id="orderReturn_Payway_Condition" >
    <if test="null!=params" >
      <if test="params.shopNo != null and params.shopNo!=''">  
     	and rem.shop_no = #{params.shopNo}
      </if>
      <if test="params.companyNo != null and params.companyNo!=''">  
     	and rem.company_no = #{params.companyNo}
      </if>
      <if test="null!=params.shopNoLists and ''!=params.shopNoLists" >
         and rem.shop_no in ${params.shopNoLists} 
      </if>
      <if test="params.shopNoList!=null and params.shopNoList!=''" >
	    <foreach collection="params.shopNoList" item="shopNo" open="AND rem.shop_no in(" separator="," close=")">
	      '${shopNo}'
	    </foreach>
  	  </if>
      <if test="params.statusList!=null and params.statusList!=''">
        	<foreach collection="params.statusList" item="status" open="AND rem.status in(" separator="," close=")">
            	'${status}'
       		</foreach>
      </if>
       <if test="params.startOutDate != null and params.startOutDate!=''">  
     		and  rem.out_date  &gt;= #{params.startOutDate, jdbcType=DATE}
     	</if>
     	<if test="params.endOutDate != null and params.endOutDate!=''">  
     		and  rem.out_date  &lt;= #{params.endOutDate, jdbcType=DATE}
     	</if>	  	
	  	<if test="null!=params.businessTypeList and ''!=params.businessTypeList" >
		   <foreach collection="params.businessTypeList" item="businessType" open="AND rem.business_type in(" separator="," close=")">
		      '${businessType}'
		    </foreach>
	  	</if>
     	</if>
    </sql>

    <!--查询店铺销售月报表 -->
    <select id="getSumSaleMonthReport" resultMap="saleOrderPayway" parameterType="java.util.Map" >
     SELECT SUM(ab.PAY_AMOUNT)  PAY_AMOUNT,SUM(ab.NET_AMOUNT) NET_AMOUNT, SUM(ab.ORDER_AMOUNT) ORDER_AMOUNT,SUM(ab.RETURN_AMOUNT) RETURN_AMOUNT,
     SUM(ab.P01现金) p01现金, SUM(ab.P03现金券) p03现金券,SUM(ab.P04银行卡) p04银行卡,
		SUM(ab.P05商场卡) P05商场卡,
		SUM(ab.P06其它) P06其它,
		SUM(ab.P08商场券) P08商场券,
		SUM(ab.P09预收款) P09预收款,
		SUM(ab.P10支票) P10支票,
		SUM(ab.P11减现额接劵额) P11减现额接劵额,
		SUM(ab.P12国外银行卡) P12国外银行卡,
		SUM(ab.P13IC卡) P13IC卡,
		SUM(ab.P14公司折扣券) P14公司折扣券,
		SUM(ab.P15商场折扣券) P15商场折扣券,
		SUM(ab.P16美元) P16美元,
		SUM(ab.P17港币) P17港币,
		SUM(ab.P18联华卡) P18联华卡,
		SUM(ab.P19市民卡) P19市民卡,
		SUM(ab.P20商盟卡) P20商盟卡,
		SUM(ab.P21支付宝) P21支付宝,
		SUM(ab.P22微信支付) P22微信支付,
		SUM(ab.P23储值卡) P23储值卡,
		SUM(ab.P24其它外卡) P24其它外卡,
		SUM(ab.P25商场现金劵) P25商场现金劵,
		SUM(ab.P26心赏卡) P26心赏卡,
		SUM(ab.P27商场会员卡) P27商场会员卡,
		SUM(ab.P28提货券) P28提货券,
		SUM(ab.P29外币卡) P29外币卡,
		SUM(ab.P30刷卡退款) P30刷卡退款,
		SUM(ab.P31商场储值卡) P31商场储值卡,
		SUM(ab.P32百丽储值卡) P32百丽储值卡,
		SUM(ab.P35储值购物卡) P35储值购物卡,
		SUM(ab.P999支付宝当面付) P999支付宝当面付    
     FROM (
		 SELECT 
		 YEAR(PT.out_date) YEAR,
         MONTH(PT.out_date) MONTH,
	 	 <include refid="SaleOrderPayway_Column_List" />
		 FROM (
		SELECT 
		<include refid="SaleOrderMainPayway_Column_List" />
		FROM
		  order_payway op INNER JOIN order_main om ON op.`order_no`=om.`order_no`
		  WHERE 1=1 <include refid="orderMain_Payway_Condition"/>
		GROUP BY om.shop_no,op.`out_date`,om.order_no  
		UNION ALL
		SELECT 
		<include refid="SaleOrderReturnPayway_Column_List" />
		FROM
		  order_payway op INNER JOIN return_exchange_main rem ON op.`order_no`=rem.`business_no` 
		  WHERE 1=1  <include refid="orderReturn_Payway_Condition"/> 
		GROUP BY rem.shop_no,op.`out_date`,rem.business_no  ) PT
		GROUP BY PT.shop_no,YEAR(PT.out_date),MONTH(PT.out_date) )  ab
   </select>
   
   	  <!--查询店铺销售月报表 -->
  	<select id="findSaleMonthReportByPage" resultMap="saleOrderPayway" parameterType="java.util.Map" >
	 	SELECT 
	 	YEAR(PT.out_date) YEAR,
        MONTH(PT.out_date) MONTH,
	 	 <include refid="SaleOrderPayway_Column_List" />
		 FROM (
		SELECT 
		<include refid="SaleOrderMainPayway_Column_List" />
		FROM
		  order_payway op INNER JOIN order_main om ON op.`order_no`=om.`order_no`
		  WHERE 1=1 <include refid="orderMain_Payway_Condition"/>
		GROUP BY om.shop_no,op.`out_date`,om.order_no  
		UNION ALL
		SELECT 
		<include refid="SaleOrderReturnPayway_Column_List" />
		FROM
		  order_payway op INNER JOIN return_exchange_main rem ON op.`order_no`=rem.`business_no` 
		  WHERE 1=1  <include refid="orderReturn_Payway_Condition"/> 
		GROUP BY rem.shop_no,op.`out_date`,rem.business_no  ) PT
		GROUP BY PT.shop_no,YEAR(PT.out_date),MONTH(PT.out_date)
	    <if test="orderByField != null and ''!=orderByField" >
	      order by ${orderByField}
	      <if test="orderByField" >
	        ${orderBy}
	      </if>
	    </if>
	     <if test="orderByField == null or  ''==orderByField " >
	      ORDER BY PT.shop_no,YEAR(PT.out_date),MONTH(PT.out_date) DESC
	    </if>
	     limit #{page.startRowNum} ,#{page.pageSize} 
	</select>
  
  <!--查询店铺销售月报表 -->
  <select id="findSaleMonthReportCount" resultType="java.lang.Integer" >
    SELECT COUNT(1) AS s FROM ( 
	SELECT  <include refid="SaleOrderPayway_Column_List" />
	 FROM (
	SELECT 
	<include refid="SaleOrderMainPayway_Column_List" />
	FROM
	  order_payway op INNER JOIN order_main om ON op.`order_no`=om.`order_no`
	  WHERE  1=1   <include refid="orderMain_Payway_Condition"/>
	GROUP BY om.shop_no,op.`out_date`,om.order_no  
	UNION ALL
	SELECT 
	<include refid="SaleOrderReturnPayway_Column_List" />
	FROM
	  order_payway op INNER JOIN return_exchange_main rem ON op.`order_no`=rem.`business_no` 
	  WHERE  1=1  <include refid="orderReturn_Payway_Condition"/>  
	GROUP BY rem.shop_no,op.`out_date`,rem.business_no  ) PT
	GROUP BY PT.shop_no,YEAR(PT.out_date),MONTH(PT.out_date)) b
  </select>

	<sql id="orderMain_Condition">
		-- AND @om.company_no
		<if test="null!=params" >
		   	<if test="params.shopNo != null and params.shopNo!=''">  
				and om.shop_no = #{params.shopNo}
		   	</if>
		   	<if test="params.companyNo != null and params.companyNo!=''">
				AND om.id IN (SELECT id FROM order_main WHERE company_no = #{params.companyNo})
		   	</if>
		   	<if test="null!=params.shopNoLists and ''!=params.shopNoLists" >
		       and om.shop_no in ${params.shopNoLists} 
		   	</if>
			<if test="params.shopNoList!=null and params.shopNoList!=''" >
			  <foreach collection="params.shopNoList" item="shopNo" open="AND om.shop_no in(" separator="," close=")">
			     '${shopNo}'
			  </foreach>
			</if>
		   	<if test="params.statusList!=null and params.statusList!=''">
		     	<foreach collection="params.statusList" item="status" open="AND om.status in(" separator="," close=")">
		         	'${status}'
		    		</foreach>
		  	 </if>     
		    <if test="params.startOutDate != null and params.startOutDate!=''">  
		    	and  om.out_date  &gt;= #{params.startOutDate, jdbcType=DATE}
		    </if> 	 
		    <if test="params.endOutDate != null and params.endOutDate!=''">  
		    	and  om.out_date  &lt;= #{params.endOutDate, jdbcType=DATE}
		    </if>		
		    <if test="null!=params.businessTypeList and ''!=params.businessTypeList" >
			<foreach collection="params.businessTypeList" item="businessType" open="AND om.business_type in(" separator="," close=")">
			   '${businessType}'
			 </foreach>
		 	</if>
		 </if>
	</sql>
	
	<sql id="orderReturn_Condition" >
	-- AND @rem.company_no
    <if test="null!=params" >
      <if test="params.shopNo != null and params.shopNo!=''">  
     	and rem.shop_no = #{params.shopNo}
      </if>
      <if test="params.companyNo != null and params.companyNo!=''">
     	and rem.id IN (SELECT id FROM return_exchange_main WHERE company_no = #{params.companyNo})
      </if>
      <if test="null!=params.shopNoLists and ''!=params.shopNoLists" >
         and rem.shop_no in ${params.shopNoLists} 
      </if>
      <if test="params.shopNoList!=null and params.shopNoList!=''" >
	    <foreach collection="params.shopNoList" item="shopNo" open="AND rem.shop_no in(" separator="," close=")">
	      '${shopNo}'
	    </foreach>
  	  </if>
      <if test="params.statusList!=null and params.statusList!=''">
        	<foreach collection="params.statusList" item="status" open="AND rem.status in(" separator="," close=")">
            	'${status}'
       		</foreach>
      </if>
       <if test="params.startOutDate != null and params.startOutDate!=''">  
     		and  rem.out_date  &gt;= #{params.startOutDate, jdbcType=DATE}
     	</if>
     	<if test="params.endOutDate != null and params.endOutDate!=''">  
     		and  rem.out_date  &lt;= #{params.endOutDate, jdbcType=DATE}
     	</if>	  	
	  	<if test="null!=params.businessTypeList and ''!=params.businessTypeList" >
		   <foreach collection="params.businessTypeList" item="businessType" open="AND rem.business_type in(" separator="," close=")">
		      '${businessType}'
		    </foreach>
	  	</if>
     	</if>
    </sql>

	<sql id="shopDayReportCount_Column_List">
		count(1) total,
		IFNULL(SUM(A.P01现金),0) P01现金,
		IFNULL(SUM(A.P03现金券),0) P03现金券,
		IFNULL(SUM(A.P04银行卡),0) P04银行卡,
		IFNULL(SUM(A.P05商场卡),0) P05商场卡,
		IFNULL(SUM(A.P06其它),0) P06其它,
		IFNULL(SUM(A.P08商场券),0) P08商场券,
		IFNULL(SUM(A.P09预收款),0) P09预收款,
		IFNULL(SUM(A.P10支票),0) P10支票,
		IFNULL(SUM(A.P11减现额接劵额),0) P11减现额接劵额,
		IFNULL(SUM(A.P12国外银行卡),0) P12国外银行卡,
		IFNULL(SUM(A.P13IC卡),0) P13IC卡,
		IFNULL(SUM(A.P14公司折扣券),0) P14公司折扣券,
		IFNULL(SUM(A.P15商场折扣券),0) P15商场折扣券,
		IFNULL(SUM(A.P16美元),0) P16美元,
		IFNULL(SUM(A.P17港币),0) P17港币,
		IFNULL(SUM(A.P18联华卡),0) P18联华卡,
		IFNULL(SUM(A.P19市民卡),0) P19市民卡,
		IFNULL(SUM(A.P20商盟卡),0) P20商盟卡,
		IFNULL(SUM(A.P20151010支付宝商场收银),0) P20151010支付宝商场收银,
		IFNULL(SUM(A.P21支付宝当面付),0) P21支付宝当面付,
		IFNULL(SUM(A.P22微信当面付),0) P22微信当面付,
		IFNULL(SUM(A.P23储值卡),0) P23储值卡,
		IFNULL(SUM(A.P24其它外卡),0) P24其它外卡,
		IFNULL(SUM(A.P25商场现金劵),0) P25商场现金劵,
		IFNULL(SUM(A.P26心赏卡),0) P26心赏卡,
		IFNULL(SUM(A.P27商场会员卡),0) P27商场会员卡,
		IFNULL(SUM(A.P28提货券),0) P28提货券,
		IFNULL(SUM(A.P29外币卡),0) P29外币卡,
		IFNULL(SUM(A.P30刷卡退款),0) P30刷卡退款,
		IFNULL(SUM(A.P31商场储值卡),0) P31商场储值卡,
		IFNULL(SUM(A.P32百丽储值卡),0) P32百丽储值卡,
		IFNULL(SUM(A.P33支付宝),0) P33支付宝,
		IFNULL(SUM(A.P35储值购物卡),0) P35储值购物卡,
		IFNULL(SUM(A.P36微信商场收银),0) P36微信商场收银,
		IFNULL(SUM(A.P37支付宝第三方),0) P37支付宝第三方,
		IFNULL(SUM(A.P38微信第三方),0) P38微信第三方,
		IFNULL(SUM(A.P999支付宝当面付),0) P999支付宝当面付,
		IFNULL(SUM(A.totalAmount),0) totalAmount,
		IFNULL(SUM(A.S03现金券),0) S03现金券,
		IFNULL(SUM(A.S04银行卡),0) S04银行卡,
		IFNULL(SUM(A.S05商场卡),0) S05商场卡,
		IFNULL(SUM(A.S06其它),0) S06其它,
		IFNULL(SUM(A.S08商场券),0) S08商场券,
		IFNULL(SUM(A.S09预收款),0) S09预收款,
		IFNULL(SUM(A.S10支票),0) S10支票,
		IFNULL(SUM(A.S11减现额接劵额),0) S11减现额接劵额,
		IFNULL(SUM(A.S12国外银行卡),0) S12国外银行卡,
		IFNULL(SUM(A.S13IC卡),0) S13IC卡,
		IFNULL(SUM(A.S14公司折扣券),0) S14公司折扣券,
		IFNULL(SUM(A.S15商场折扣券),0) S15商场折扣券,
		IFNULL(SUM(A.S16美元),0) S16美元,
		IFNULL(SUM(A.S17港币),0) S17港币,
		IFNULL(SUM(A.S18联华卡),0) S18联华卡,
		IFNULL(SUM(A.S19市民卡),0) S19市民卡,
		IFNULL(SUM(A.S20商盟卡),0) S20商盟卡,
		IFNULL(SUM(A.S20151010支付宝商场收银),0) S20151010支付宝商场收银,
		IFNULL(SUM(A.S21支付宝当面付),0) S21支付宝当面付,
		IFNULL(SUM(A.S22微信当面付),0) S22微信当面付,
		IFNULL(SUM(A.S23储值卡),0) S23储值卡,
		IFNULL(SUM(A.S24其它外卡),0) S24其它外卡,
		IFNULL(SUM(A.S25商场现金劵),0) S25商场现金劵,
		IFNULL(SUM(A.S26心赏卡),0) S26心赏卡,
		IFNULL(SUM(A.S27商场会员卡),0) S27商场会员卡,
		IFNULL(SUM(A.S28提货券),0) S28提货券,
		IFNULL(SUM(A.S29外币卡),0) S29外币卡,
		IFNULL(SUM(A.S30刷卡退款),0) S30刷卡退款,
		IFNULL(SUM(A.S31商场储值卡),0) S31商场储值卡,
		IFNULL(SUM(A.S32百丽储值卡),0) S32百丽储值卡,
		IFNULL(SUM(A.S33支付宝),0) S33支付宝,
		IFNULL(SUM(A.S35储值购物卡),0) S35储值购物卡,
		IFNULL(SUM(A.S36微信商场收银),0) S36微信商场收银,
		IFNULL(SUM(A.S37支付宝第三方),0) S37支付宝第三方,
		IFNULL(SUM(A.S38微信第三方),0) S38微信第三方,
		IFNULL(SUM(A.S999支付宝当面付),0) S999支付宝当面付,
		IFNULL(SUM(A.amount),0) amount,
		IFNULL(SUM(A.D03现金券),0) D03现金券,
		IFNULL(SUM(A.D04银行卡),0) D04银行卡,
		IFNULL(SUM(A.D05商场卡),0) D05商场卡,
		IFNULL(SUM(A.D06其它),0) D06其它,
		IFNULL(SUM(A.D08商场券),0) D08商场券,
		IFNULL(SUM(A.D09预收款),0) D09预收款,
		IFNULL(SUM(A.D10支票),0) D10支票,
		IFNULL(SUM(A.D11减现额接券额),0) D11减现额接券额,
		IFNULL(SUM(A.D12国外银行卡),0) D12国外银行卡,
		IFNULL(SUM(A.D13IC卡),0) D13IC卡,
		IFNULL(SUM(A.D14公司折扣券),0) D14公司折扣券,
		IFNULL(SUM(A.D15商场折扣券),0) D15商场折扣券,
		IFNULL(SUM(A.D16美元),0) D16美元,
		IFNULL(SUM(A.D17港币),0) D17港币,
		IFNULL(SUM(A.D18联华卡),0) D18联华卡,
		IFNULL(SUM(A.D19市民卡),0) D19市民卡,
		IFNULL(SUM(A.D20商盟卡),0) D20商盟卡,
		IFNULL(SUM(A.D20151010支付宝商场收银),0) D20151010支付宝商场收银,
		IFNULL(SUM(A.D21支付宝当面付),0) D21支付宝当面付,
		IFNULL(SUM(A.D22微信当面付),0) D22微信当面付,
		IFNULL(SUM(A.D23储值卡),0) D23储值卡,
		IFNULL(SUM(A.D24其它外卡),0) D24其它外卡,
		IFNULL(SUM(A.D25商场现金券),0) D25商场现金券,
		IFNULL(SUM(A.D26心赏卡),0) D26心赏卡,
		IFNULL(SUM(A.D27商场会员卡),0) D27商场会员卡,
		IFNULL(SUM(A.D28提货券),0) D28提货券,
		IFNULL(SUM(A.D29外币卡),0) D29外币卡,
		IFNULL(SUM(A.D30刷卡退款),0) D30刷卡退款,
		IFNULL(SUM(A.D31商场储值卡),0) D31商场储值卡,
		IFNULL(SUM(A.D32百丽储值卡),0) D32百丽储值卡,
		IFNULL(SUM(A.D33支付宝),0) D33支付宝,
		IFNULL(SUM(A.D35储值购物卡),0) D35储值购物卡,
		IFNULL(SUM(A.D36微信商场收银),0) D36微信商场收银,
		IFNULL(SUM(A.D37支付宝第三方),0) D37支付宝第三方,
		IFNULL(SUM(A.D38微信第三方),0) D38微信第三方,
		IFNULL(SUM(A.D999支付宝当面付),0) D999支付宝当面付,
		IFNULL(SUM(A.return_amount),0) return_amount,
		IFNULL(SUM(A.actual_return_amount),0) actual_return_amount,
		IFNULL(SUM(A.diff_amount),0) diff_amount,
		IFNULL(SUM(A.poundage),0) poundage,
		IFNULL(SUM(A.sum),0) sum
	</sql>

	<!--查询店铺销售日报表总计 -->
	<select id="findShopDailyReportShowCount" resultMap="saleOrderPayway" parameterType="java.util.Map">
		SELECT
			<include refid="shopDayReportCount_Column_List"></include>
		FROM (
			SELECT
				<include refid="shopDayReport_Column_List"></include>
			FROM
				(
					SELECT
						<include refid="shopDayReportPP_Column_List"></include>
					FROM
						(
							SELECT DISTINCT
								<include refid="shopDayReportPP01_Column_List"></include>
							FROM
								order_main om
							LEFT JOIN order_payway op ON om.`order_no` = op.`order_no`
							LEFT JOIN order_dtl dtl ON om.order_no = dtl.order_no
							WHERE 1 = 1 <include refid="orderMain_Condition"/>
							GROUP BY om.order_no,op.pay_code
							UNION ALL
							SELECT DISTINCT
								<include refid="shopDayReportPP02_Column_List"></include>
							FROM
								return_exchange_main rem
							LEFT JOIN order_payway op ON rem.`business_no` = op.`order_no`
							LEFT JOIN return_exchange_dtl dtl ON rem.`business_no` = dtl.`business_no`
							WHERE 1 = 1 <include refid="orderReturn_Condition"/>
							GROUP BY rem.`business_no`,op.pay_code
						) PT
					GROUP BY PT.shop_no,PT.company_no,PT.out_date
			) PP LEFT JOIN (
				SELECT
					<include refid="shopDayReportSS_Column_List"></include>
				FROM
					(
						SELECT DISTINCT
							<include refid="shopDayReportSS01_Column_List"></include>
						FROM
							order_main om
						LEFT JOIN order_payway op ON om.order_no = op.order_no
						LEFT JOIN self_shop_terminal_account ssta ON om.shop_no = ssta.shop_no
						LEFT JOIN bill_status bs ON op.order_no = bs.bill_no AND op.pay_name = bs.pay_name
						WHERE 1 = 1 <include refid="orderMain_Condition"/>
						GROUP BY om.order_no,op.pay_code
						UNION ALL
						SELECT DISTINCT
							<include refid="shopDayReportSS02_Column_List"></include>
						FROM
							return_exchange_main rem
						LEFT JOIN order_payway op ON rem.`business_no` = op.`order_no`
						LEFT JOIN self_shop_terminal_account ssta ON rem.shop_no = ssta.shop_no
						LEFT JOIN bill_status bs ON op.order_no = bs.bill_no AND op.pay_name = bs.pay_name
						WHERE 1 = 1 <include refid="orderReturn_Condition"/>
						GROUP BY rem.`business_no`,op.pay_code
					) ST
				GROUP BY ST.shop_no, ST.out_date
			) SS ON PP.shop_no = SS.shop_no AND PP.out_date = SS.out_date
			WHERE 1=1
			<if test="null!=params" >
			   	<if test="params.retailType != null and params.retailType!=''">  
				   AND PP.shop_no in (SELECT shop_no FROM shop WHERE retail_type = #{params.retailType})
				</if>
			</if>
			GROUP BY PP.shop_no,PP.company_no,PP.out_date
		) A
	</select>
	<!--查询店铺销售日报表 -->
   <select id="findSaleDayReportByPage" resultMap="saleOrderPayway" parameterType="java.util.Map" >
	SELECT
		<include refid="shopDayReport_Column_List"></include>
	FROM
		(
			SELECT
				<include refid="shopDayReportPP_Column_List"></include>
			FROM
				(
					SELECT DISTINCT
						<include refid="shopDayReportPP01_Column_List"></include>
					FROM
						order_main om
					LEFT JOIN order_payway op ON om.`order_no` = op.`order_no`
					LEFT JOIN order_dtl dtl ON om.order_no = dtl.order_no
					WHERE 1 = 1 <include refid="orderMain_Condition"/>
					GROUP BY om.order_no,op.pay_code
					UNION ALL
					SELECT DISTINCT
						<include refid="shopDayReportPP02_Column_List"></include>
					FROM
						return_exchange_main rem
					LEFT JOIN order_payway op ON rem.`business_no` = op.`order_no`
					LEFT JOIN return_exchange_dtl dtl ON rem.`business_no` = dtl.`business_no`
					WHERE 1 = 1 <include refid="orderReturn_Condition"/>
					GROUP BY rem.`business_no`,op.pay_code
				) PT
			GROUP BY PT.shop_no,PT.company_no,PT.out_date
	) PP LEFT JOIN (
		SELECT
			<include refid="shopDayReportSS_Column_List"></include>
		FROM
			(
				SELECT DISTINCT
					<include refid="shopDayReportSS01_Column_List"></include>
				FROM
					order_main om
				LEFT JOIN order_payway op ON om.order_no = op.order_no
				LEFT JOIN self_shop_terminal_account ssta ON om.shop_no = ssta.shop_no
				LEFT JOIN bill_status bs ON op.order_no = bs.bill_no AND op.pay_name = bs.pay_name
				WHERE 1 = 1 <include refid="orderMain_Condition"/>
				GROUP BY om.order_no,op.pay_code
				UNION ALL
				SELECT DISTINCT
					<include refid="shopDayReportSS02_Column_List"></include>
				FROM
					return_exchange_main rem
				LEFT JOIN order_payway op ON rem.`business_no` = op.`order_no`
				LEFT JOIN self_shop_terminal_account ssta ON rem.shop_no = ssta.shop_no
				LEFT JOIN bill_status bs ON op.order_no = bs.bill_no AND op.pay_name = bs.pay_name
				WHERE 1 = 1 <include refid="orderReturn_Condition"/>
				GROUP BY rem.`business_no`,op.pay_code
			) ST
		GROUP BY ST.shop_no, ST.out_date
	) SS ON PP.shop_no = SS.shop_no AND PP.out_date = SS.out_date
	WHERE 1=1
	<if test="null!=params" >
	   	<if test="params.retailType != null and params.retailType!=''">  
		   AND PP.shop_no in (SELECT shop_no FROM shop WHERE retail_type = #{params.retailType})
		</if>
	</if>
	GROUP BY PP.shop_no,PP.company_no,PP.out_date
	ORDER BY PP.shop_no,PP.out_date DESC
	<if test="orderByField != null and ''!=orderByField" >
	      order by ${orderByField}
	      <if test="orderByField" >
	        ${orderBy}
	      </if>
	</if>
   </select>
   
	<sql id="shopDayReport_Column_List">
		PP.shop_no,
		PP.shop_name,
		PP.company_no,
		PP.company_name,
		PP.out_date,
		IFNULL(PP.P01现金,0) P01现金,
		IFNULL(PP.P03现金券,0) P03现金券,
		IFNULL(PP.P04银行卡,0) P04银行卡,
		IFNULL(PP.P05商场卡,0) P05商场卡,
		IFNULL(PP.P06其它,0) P06其它,
		IFNULL(PP.P08商场券,0) P08商场券,
		IFNULL(PP.P09预收款,0) P09预收款,
		IFNULL(PP.P10支票,0) P10支票,
		IFNULL(PP.P11减现额接劵额,0) P11减现额接劵额,
		IFNULL(PP.P12国外银行卡,0) P12国外银行卡,
		IFNULL(PP.P13IC卡,0) P13IC卡,
		IFNULL(PP.P14公司折扣券,0) P14公司折扣券,
		IFNULL(PP.P15商场折扣券,0) P15商场折扣券,
		IFNULL(PP.P16美元,0) P16美元,
		IFNULL(PP.P17港币,0) P17港币,
		IFNULL(PP.P18联华卡,0) P18联华卡,
		IFNULL(PP.P19市民卡,0) P19市民卡,
		IFNULL(PP.P20商盟卡,0) P20商盟卡,
		IFNULL(PP.P20151010支付宝商场收银,0) P20151010支付宝商场收银,
		IFNULL(PP.P21支付宝当面付,0) P21支付宝当面付,
		IFNULL(PP.P22微信当面付,0) P22微信当面付,
		IFNULL(PP.P23储值卡,0) P23储值卡,
		IFNULL(PP.P24其它外卡,0) P24其它外卡,
		IFNULL(PP.P25商场现金劵,0) P25商场现金劵,
		IFNULL(PP.P26心赏卡,0) P26心赏卡,
		IFNULL(PP.P27商场会员卡,0) P27商场会员卡,
		IFNULL(PP.P28提货券,0) P28提货券,
		IFNULL(PP.P29外币卡,0) P29外币卡,
		IFNULL(PP.P30刷卡退款,0) P30刷卡退款,
		IFNULL(PP.P31商场储值卡,0) P31商场储值卡,
		IFNULL(PP.P32百丽储值卡,0) P32百丽储值卡,
		IFNULL(PP.P33支付宝,0) P33支付宝,
		IFNULL(PP.P35储值购物卡,0) P35储值购物卡,
		IFNULL(PP.P36微信商场收银,0) P36微信商场收银,
		IFNULL(PP.P37支付宝第三方,0) P37支付宝第三方,
		IFNULL(PP.P38微信第三方,0) P38微信第三方,
		IFNULL(PP.P999支付宝当面付,0) P999支付宝当面付,
		IFNULL(PP.totalAmount,0) totalAmount,
		IFNULL(SS.S03现金券,0) S03现金券,
		IFNULL(SS.S04银行卡,0) S04银行卡,
		IFNULL(SS.S05商场卡,0) S05商场卡,
		IFNULL(SS.S06其它,0) S06其它,
		IFNULL(SS.S08商场券,0) S08商场券,
		IFNULL(SS.S09预收款,0) S09预收款,
		IFNULL(SS.S10支票,0) S10支票,
		IFNULL(SS.S11减现额接劵额,0) S11减现额接劵额,
		IFNULL(SS.S12国外银行卡,0) S12国外银行卡,
		IFNULL(SS.S13IC卡,0) S13IC卡,
		IFNULL(SS.S14公司折扣券,0) S14公司折扣券,
		IFNULL(SS.S15商场折扣券,0) S15商场折扣券,
		IFNULL(SS.S16美元,0) S16美元,
		IFNULL(SS.S17港币,0) S17港币,
		IFNULL(SS.S18联华卡,0) S18联华卡,
		IFNULL(SS.S19市民卡,0) S19市民卡,
		IFNULL(SS.S20商盟卡,0) S20商盟卡,
		IFNULL(SS.S20151010支付宝商场收银,0) S20151010支付宝商场收银,
		IFNULL(SS.S21支付宝当面付,0) S21支付宝当面付,
		IFNULL(SS.S22微信当面付,0) S22微信当面付,
		IFNULL(SS.S23储值卡,0) S23储值卡,
		IFNULL(SS.S24其它外卡,0) S24其它外卡,
		IFNULL(SS.S25商场现金劵,0) S25商场现金劵,
		IFNULL(SS.S26心赏卡,0) S26心赏卡,
		IFNULL(SS.S27商场会员卡,0) S27商场会员卡,
		IFNULL(SS.S28提货券,0) S28提货券,
		IFNULL(SS.S29外币卡,0) S29外币卡,
		IFNULL(SS.S30刷卡退款,0) S30刷卡退款,
		IFNULL(SS.S31商场储值卡,0) S31商场储值卡,
		IFNULL(SS.S32百丽储值卡,0) S32百丽储值卡,
		IFNULL(SS.S33支付宝,0) S33支付宝,
		IFNULL(SS.S35储值购物卡,0) S35储值购物卡,
		IFNULL(SS.S36微信商场收银,0) S36微信商场收银,
		IFNULL(SS.S37支付宝第三方,0) S37支付宝第三方,
		IFNULL(SS.S38微信第三方,0) S38微信第三方,
		IFNULL(SS.S999支付宝当面付,0) S999支付宝当面付,
		IFNULL(SS.amount,0) amount,
		IFNULL(SS.S03现金券,0) - IFNULL(PP.P03现金券,0) D03现金券,
		IFNULL(SS.S04银行卡,0) - IFNULL(PP.P04银行卡,0) D04银行卡,
		IFNULL(SS.S05商场卡,0) - IFNULL(PP.P05商场卡,0) D05商场卡,
		IFNULL(SS.S06其它,0) - IFNULL(PP.P06其它,0) D06其它,
		IFNULL(SS.S08商场券,0) - IFNULL(PP.P08商场券,0) D08商场券,
		IFNULL(SS.S09预收款,0) - IFNULL(PP.P09预收款,0) D09预收款,
		IFNULL(SS.S10支票,0) - IFNULL(PP.P10支票,0) D10支票,
		IFNULL(SS.S11减现额接劵额,0) - IFNULL(PP.P11减现额接劵额,0) D11减现额接券额,
		IFNULL(SS.S12国外银行卡,0) - IFNULL(PP.P12国外银行卡,0) D12国外银行卡,
		IFNULL(SS.S13IC卡,0) - IFNULL(PP.P13IC卡,0) D13IC卡,
		IFNULL(SS.S14公司折扣券,0) - IFNULL(PP.P14公司折扣券,0) D14公司折扣券,
		IFNULL(SS.S15商场折扣券,0) - IFNULL(PP.P15商场折扣券,0) D15商场折扣券,
		IFNULL(SS.S16美元,0) - IFNULL(PP.P16美元,0) D16美元,
		IFNULL(SS.S17港币,0) - IFNULL(PP.P17港币,0) D17港币,
		IFNULL(SS.S18联华卡,0) - IFNULL(PP.P18联华卡,0) D18联华卡,
		IFNULL(SS.S19市民卡,0) - IFNULL(PP.P19市民卡,0) D19市民卡,
		IFNULL(SS.S20商盟卡,0) - IFNULL(PP.P20商盟卡,0) D20商盟卡,
		IFNULL(SS.S20151010支付宝商场收银,0) - IFNULL(PP.P20151010支付宝商场收银,0) D20151010支付宝商场收银,
		IFNULL(SS.S21支付宝当面付,0) - IFNULL(PP.P21支付宝当面付,0) D21支付宝当面付,
		IFNULL(SS.S22微信当面付,0) - IFNULL(PP.P22微信当面付,0) D22微信当面付,
		IFNULL(SS.S23储值卡,0) - IFNULL(PP.P23储值卡,0) D23储值卡,
		IFNULL(SS.S24其它外卡,0) - IFNULL(PP.P24其它外卡,0) D24其它外卡,
		IFNULL(SS.S25商场现金劵,0) - IFNULL(PP.P25商场现金劵,0) D25商场现金券,
		IFNULL(SS.S26心赏卡,0) - IFNULL(PP.P26心赏卡,0) D26心赏卡,
		IFNULL(SS.S27商场会员卡,0) - IFNULL(PP.P27商场会员卡,0) D27商场会员卡,
		IFNULL(SS.S28提货券,0) - IFNULL(PP.P28提货券,0) D28提货券,
		IFNULL(SS.S29外币卡,0) - IFNULL(PP.P29外币卡,0) D29外币卡,
		IFNULL(SS.S30刷卡退款,0) - IFNULL(PP.P30刷卡退款,0) D30刷卡退款,
		IFNULL(SS.S31商场储值卡,0) - IFNULL(PP.P31商场储值卡,0) D31商场储值卡,
		IFNULL(SS.S32百丽储值卡,0) - IFNULL(PP.P32百丽储值卡,0) D32百丽储值卡,
		IFNULL(SS.S33支付宝,0) - IFNULL(PP.P33支付宝,0) D33支付宝,
		IFNULL(SS.S35储值购物卡,0) - IFNULL(PP.P35储值购物卡,0) D35储值购物卡,
		IFNULL(SS.S36微信商场收银,0) - IFNULL(PP.P36微信商场收银,0) D36微信商场收银,
		IFNULL(SS.S37支付宝第三方,0) - IFNULL(PP.P37支付宝第三方,0) D37支付宝第三方,
		IFNULL(SS.S38微信第三方,0) - IFNULL(PP.P38微信第三方,0) D38微信第三方,
		IFNULL(SS.S999支付宝当面付,0) - IFNULL(PP.P999支付宝当面付,0) D999支付宝当面付,
		IFNULL(SS.return_amount,0) return_amount,
		IFNULL(SS.actual_return_amount,0) actual_return_amount,
		IFNULL(SS.amount,0) + IFNULL(SS.return_amount,0) + IFNULL(SS.actual_return_amount,0) - IFNULL(PP.totalAmount,0) diff_amount,
		IFNULL(SS.poundage,0) poundage,
		IFNULL(SS.amount,0) + IFNULL(SS.actual_return_amount,0) - IFNULL(SS.poundage,0) sum
	</sql>
	
	<sql id="shopDayReportPP_Column_List">
	PT.shop_no,PT.shop_name,
	PT.company_no,PT.company_name,
	PT.out_date,
	SUM(P1) P01现金,
	SUM(P3) P03现金券,
	SUM(P4) P04银行卡,
	SUM(P5) P05商场卡,
	SUM(P6) P06其它,
	SUM(P8) P08商场券,
	SUM(P9) P09预收款,
	SUM(P10) P10支票,
	SUM(P11) P11减现额接劵额,
	SUM(P12) P12国外银行卡,
	SUM(P13) P13IC卡,
	SUM(P14) P14公司折扣券,
	SUM(P15) P15商场折扣券,
	SUM(P16) P16美元,
	SUM(P17) P17港币,
	SUM(P18) P18联华卡,
	SUM(P19) P19市民卡,
	SUM(P20) P20商盟卡,
	SUM(P20151010) P20151010支付宝商场收银,
	SUM(P21) P21支付宝当面付,
	SUM(P22) P22微信当面付,
	SUM(P23) P23储值卡,
	SUM(P24) P24其它外卡,
	SUM(P25) P25商场现金劵,
	SUM(P26) P26心赏卡,
	SUM(P27) P27商场会员卡,
	SUM(P28) P28提货券,
	SUM(P29) P29外币卡,
	SUM(P30) P30刷卡退款,
	SUM(P31) P31商场储值卡,
	SUM(P32) P32百丽储值卡,
	SUM(P33) P33支付宝,
	SUM(P35) P35储值购物卡,
	SUM(P36) P36微信商场收银,
	SUM(P37) P37支付宝第三方,
	SUM(P38) P38微信第三方,
	SUM(P999) P999支付宝当面付,
	SUM(PT.amount) totalAmount
	</sql>
	
	<sql id="shopDayReportPP01_Column_List">
	om.id,
	om.shop_no,om.shop_name,
	om.company_no,om.company_name,
	om.`out_date`,
	om.order_no,
	op.amount,
	op.pay_code,
	IF(TRIM(op.pay_code)='01',op.amount,0) P1,
	IF(TRIM(op.pay_code)='03',op.amount,0) P3,
	IF(TRIM(op.pay_code)='04',op.amount,0) P4,
	IF(TRIM(op.pay_code)='05',op.amount,0) P5,
	IF(TRIM(op.pay_code)='06',op.amount,0) P6,
	IF(TRIM(op.pay_code)='08',op.amount,0) P8,
	IF(TRIM(op.pay_code)='09',op.amount,0) P9,
	IF(TRIM(op.pay_code)='10',op.amount,0) P10,
	IF(TRIM(op.pay_code)='11',op.amount,0) P11,
	IF(TRIM(op.pay_code)='12',op.amount,0) P12,
	IF(TRIM(op.pay_code)='13',op.amount,0) P13,
	IF(TRIM(op.pay_code)='14',op.amount,0) P14,
	IF(TRIM(op.pay_code)='15',op.amount,0) P15,
	IF(TRIM(op.pay_code)='16',op.amount,0) P16,
	IF(TRIM(op.pay_code)='17',op.amount,0) P17,
	IF(TRIM(op.pay_code)='18',op.amount,0) P18,
	IF(TRIM(op.pay_code)='19',op.amount,0) P19,
	IF(TRIM(op.pay_code)='20',op.amount,0) P20,
	IF(TRIM(op.pay_code)='20151010',op.amount,0) P20151010,
	IF(TRIM(op.pay_code)='21',op.amount,0) P21,
	IF(TRIM(op.pay_code)='22',op.amount,0) P22,
	IF(TRIM(op.pay_code)='23',op.amount,0) P23,
	IF(TRIM(op.pay_code)='24',op.amount,0) P24,
	IF(TRIM(op.pay_code)='25',op.amount,0) P25,
	IF(TRIM(op.pay_code)='26',op.amount,0) P26,
	IF(TRIM(op.pay_code)='27',op.amount,0) P27,
	IF(TRIM(op.pay_code)='28',op.amount,0) P28,
	IF(TRIM(op.pay_code)='29',op.amount,0) P29,
	IF(TRIM(op.pay_code)='30',op.amount,0) P30,
	IF(TRIM(op.pay_code)='31',op.amount,0) P31,
	IF(TRIM(op.pay_code)='32',op.amount,0) P32,
	IF(TRIM(op.pay_code)='33',op.amount,0) P33,
	IF(TRIM(op.pay_code)='35',op.amount,0) P35,
	IF(TRIM(op.pay_code)='36',op.amount,0) P36,
	IF(TRIM(op.pay_code)='37',op.amount,0) P37,
	IF(TRIM(op.pay_code)='38',op.amount,0) P38,
	IF(TRIM(op.pay_code)='999',op.amount,0) P999
	</sql>
	
	<sql id="shopDayReportPP02_Column_List">
	rem.id,
	rem.shop_no,rem.shop_name,
	rem.company_no,rem.company_name,
	rem.`out_date`,
	rem.business_no,
	IF((TRIM(op.pay_code)='04' AND rem.amount &lt; 0),0,op.amount) amount,
	op.pay_code,
	IF(TRIM(op.pay_code)='01',op.amount,0) P1,
	IF(TRIM(op.pay_code)='03',op.amount,0) P3,
	IF((TRIM(op.pay_code)='04' AND rem.amount &gt; 0),op.amount,0) P4,
	IF(TRIM(op.pay_code)='05',op.amount,0) P5,
	IF(TRIM(op.pay_code)='06',op.amount,0) P6,
	IF(TRIM(op.pay_code)='08',op.amount,0) P8,
	IF(TRIM(op.pay_code)='09',op.amount,0) P9,
	IF(TRIM(op.pay_code)='10',op.amount,0) P10,
	IF(TRIM(op.pay_code)='11',op.amount,0) P11,
	IF(TRIM(op.pay_code)='12',op.amount,0) P12,
	IF(TRIM(op.pay_code)='13',op.amount,0) P13,
	IF(TRIM(op.pay_code)='14',op.amount,0) P14,
	IF(TRIM(op.pay_code)='15',op.amount,0) P15,
	IF(TRIM(op.pay_code)='16',op.amount,0) P16,
	IF(TRIM(op.pay_code)='17',op.amount,0) P17,
	IF(TRIM(op.pay_code)='18',op.amount,0) P18,
	IF(TRIM(op.pay_code)='19',op.amount,0) P19,
	IF(TRIM(op.pay_code)='20',op.amount,0) P20,
	IF(TRIM(op.pay_code)='20151010',op.amount,0) P20151010,
	IF(TRIM(op.pay_code)='21',op.amount,0) P21,
	IF(TRIM(op.pay_code)='22',op.amount,0) P22,
	IF(TRIM(op.pay_code)='23',op.amount,0) P23,
	IF(TRIM(op.pay_code)='24',op.amount,0) P24,
	IF(TRIM(op.pay_code)='25',op.amount,0) P25,
	IF(TRIM(op.pay_code)='26',op.amount,0) P26,
	IF(TRIM(op.pay_code)='27',op.amount,0) P27,
	IF(TRIM(op.pay_code)='28',op.amount,0) P28,
	IF(TRIM(op.pay_code)='29',op.amount,0) P29,
	IF(TRIM(op.pay_code)='30',op.amount,0) P30,
	IF(TRIM(op.pay_code)='31',op.amount,0) P31,
	IF(TRIM(op.pay_code)='32',op.amount,0) P32,
	IF(TRIM(op.pay_code)='33',op.amount,0) P33,
	IF(TRIM(op.pay_code)='35',op.amount,0) P35,
	IF(TRIM(op.pay_code)='36',op.amount,0) P36,
	IF(TRIM(op.pay_code)='37',op.amount,0) P37,
	IF(TRIM(op.pay_code)='38',op.amount,0) P38,
	IF(TRIM(op.pay_code)='999',op.amount,0) P999
	</sql>

	<sql id="shopDayReportSS_Column_List">
		ST.shop_no,
		ST.out_date,
		SUM(S3) S03现金券,
		SUM(S4) S04银行卡,
		SUM(S5) S05商场卡,
		SUM(S6) S06其它,
		SUM(S8) S08商场券,
		SUM(S9) S09预收款,
		SUM(S10) S10支票,
		SUM(S11) S11减现额接劵额,
		SUM(S12) S12国外银行卡,
		SUM(S13) S13IC卡,
		SUM(S14) S14公司折扣券,
		SUM(S15) S15商场折扣券,
		SUM(S16) S16美元,
		SUM(S17) S17港币,
		SUM(S18) S18联华卡,
		SUM(S19) S19市民卡,
		SUM(S20) S20商盟卡,
		SUM(S20151010) S20151010支付宝商场收银,
		SUM(S21) S21支付宝当面付,
		SUM(S22) S22微信当面付,
		SUM(S23) S23储值卡,
		SUM(S24) S24其它外卡,
		SUM(S25) S25商场现金劵,
		SUM(S26) S26心赏卡,
		SUM(S27) S27商场会员卡,
		SUM(S28) S28提货券,
		SUM(S29) S29外币卡,
		SUM(S30) S30刷卡退款,
		SUM(S31) S31商场储值卡,
		SUM(S32) S32百丽储值卡,
		SUM(S33) S33支付宝,
		SUM(S35) S35储值购物卡,
		SUM(S36) S36微信商场收银,
		SUM(S37) S37支付宝第三方,
		SUM(S38) S38微信第三方,
		SUM(S999) S999支付宝当面付,
		( 
			SELECT
				SUM(CASE 
					WHEN bs.status=1 THEN
						0
					ELSE
						IF (ISNULL(rem.amount) = 1, 0, rem.amount)
				END) amount
			FROM
				return_exchange_main rem
			LEFT JOIN order_payway op ON rem.`business_no` = op.`order_no`
			LEFT JOIN (
				SELECT
					*
				FROM
					self_shop_terminal_account a
				WHERE
					create_time = (
						SELECT
							MAX(create_time)
						FROM
							self_shop_terminal_account
						WHERE
							shop_no = a.shop_no
					)
			) ssta ON rem.shop_no = ssta.shop_no
			LEFT JOIN bill_status bs ON op.order_no = bs.bill_no
			WHERE 1 = 1
			AND op.pay_code = '04'
			AND rem.amount &lt; 0
			AND rem.shop_no = ST.shop_no
			AND rem.out_date = ST.`out_date`
		) return_amount,
		( 
			SELECT
				SUM(CASE WHEN bs.status=1 THEN
					IF(TRIM(bs.status)='1',rem.amount - IF (ISNULL(op.poundage) = 1,IF (ISNULL(ssta.credit_card_rate) = 1,0,rem.amount * ssta.credit_card_rate),op.poundage),0)
				ELSE 
					0
				END) amount
			FROM
				return_exchange_main rem
			LEFT JOIN order_payway op ON rem.`business_no` = op.`order_no`
			LEFT JOIN (
				SELECT
					*
				FROM
					self_shop_terminal_account a
				WHERE
					create_time = (
						SELECT
							MAX(create_time)
						FROM
							self_shop_terminal_account
						WHERE
							shop_no = a.shop_no
					)
			) ssta ON rem.shop_no = ssta.shop_no
			LEFT JOIN bill_status bs ON op.order_no = bs.bill_no
			WHERE 1 = 1
			AND op.pay_code = '04'
			AND rem.amount &lt; 0
			AND rem.shop_no = ST.shop_no
			AND rem.out_date = ST.`out_date`
		)  actual_return_amount,
		SUM(ST.TOTAL_AMOUNT) amount,
		SUM(ST.poundage) poundage,
		SUM(ST.TOTAL_AMOUNT)-SUM(ST.poundage) sum
	</sql>

	<sql id="shopDayReportSS01_Column_List">
		om.id,
		om.`shop_no`,
		om.`out_date`,
		om.order_no,
		op.amount,
		op.pay_code,
		<![CDATA[
		IF((TRIM(op.pay_code)<>'01' AND bs. STATUS = 1),op.amount,0) total_amount,
		]]>
		IF(TRIM(op.poundage) is not null AND bs. STATUS = 1,op.poundage,IF((TRIM(op.pay_code)='04' AND bs. STATUS = 1),op.amount*ssta.credit_card_rate,0)) poundage,
		IF((TRIM(op.pay_code)='03' AND bs. STATUS = 1),op.amount,0) S3,
		IF((TRIM(op.pay_code)='04' AND bs. STATUS = 1),op.amount,0) S4,
		IF((TRIM(op.pay_code)='05' AND bs. STATUS = 1),op.amount,0) S5,
		IF((TRIM(op.pay_code) NOT IN ('01','03','04','05','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','35','25','26','27','28','29','30','31','32','999') AND bs. STATUS = 1),op.amount,0) S6,
		IF((TRIM(op.pay_code)='08' AND bs. STATUS = 1),op.amount,0) S8,
		IF((TRIM(op.pay_code)='09' AND bs. STATUS = 1),op.amount,0) S9,
		IF((TRIM(op.pay_code)='10' AND bs. STATUS = 1),op.amount,0) S10,
		IF((TRIM(op.pay_code)='11' AND bs. STATUS = 1),op.amount,0) S11,
		IF((TRIM(op.pay_code)='12' AND bs. STATUS = 1),op.amount,0) S12,
		IF((TRIM(op.pay_code)='13' AND bs. STATUS = 1),op.amount,0) S13,
		IF((TRIM(op.pay_code)='14' AND bs. STATUS = 1),op.amount,0) S14,
		IF((TRIM(op.pay_code)='15' AND bs. STATUS = 1),op.amount,0) S15,
		IF((TRIM(op.pay_code)='16' AND bs. STATUS = 1),op.amount,0) S16,
		IF((TRIM(op.pay_code)='17' AND bs. STATUS = 1),op.amount,0) S17,
		IF((TRIM(op.pay_code)='18' AND bs. STATUS = 1),op.amount,0) S18,
		IF((TRIM(op.pay_code)='19' AND bs. STATUS = 1),op.amount,0) S19,
		IF((TRIM(op.pay_code)='20' AND bs. STATUS = 1),op.amount,0) S20,
		IF((TRIM(op.pay_code)='20151010' AND bs. STATUS = 1),op.amount,0) S20151010,
		IF((TRIM(op.pay_code)='21' AND bs. STATUS = 1),op.amount,0) S21,
		IF((TRIM(op.pay_code)='22' AND bs. STATUS = 1),op.amount,0) S22,
		IF((TRIM(op.pay_code)='23' AND bs. STATUS = 1),op.amount,0) S23,
		IF((TRIM(op.pay_code)='24' AND bs. STATUS = 1),op.amount,0) S24,
		IF((TRIM(op.pay_code)='25' AND bs. STATUS = 1),op.amount,0) S25,
		IF((TRIM(op.pay_code)='26' AND bs. STATUS = 1),op.amount,0) S26,
		IF((TRIM(op.pay_code)='27' AND bs. STATUS = 1),op.amount,0) S27,
		IF((TRIM(op.pay_code)='28' AND bs. STATUS = 1),op.amount,0) S28,
		IF((TRIM(op.pay_code)='29' AND bs. STATUS = 1),op.amount,0) S29,
		IF((TRIM(op.pay_code)='30' AND bs. STATUS = 1),op.amount,0) S30,
		IF((TRIM(op.pay_code)='31' AND bs. STATUS = 1),op.amount,0) S31,
		IF((TRIM(op.pay_code)='32' AND bs. STATUS = 1),op.amount,0) S32,
		IF((TRIM(op.pay_code)='33' AND bs. STATUS = 1),op.amount,0) S33,
		IF((TRIM(op.pay_code)='35' AND bs. STATUS = 1),op.amount,0) S35,
		IF((TRIM(op.pay_code)='36' AND bs. STATUS = 1),op.amount,0) S36,
		IF((TRIM(op.pay_code)='37' AND bs. STATUS = 1),op.amount,0) S37,
		IF((TRIM(op.pay_code)='38' AND bs. STATUS = 1),op.amount,0) S38,
		IF((TRIM(op.pay_code)='999' AND bs. STATUS = 1),op.amount,0) S999
	</sql>
	
	<sql id="shopDayReportSS02_Column_List">
		rem.id,
		rem.`shop_no`,
		rem.`out_date`,
		rem.business_no,
		IF((TRIM(op.pay_code)='04' AND rem.amount &lt; 0),0,op.amount) amount,
		op.pay_code,
		<![CDATA[
		IF((TRIM(op.pay_code)<>'01' AND TRIM(op.pay_code)<>'04' AND bs. STATUS = 1),op.amount,0) total_amount,
		]]>
		IF(TRIM(op.poundage) is not null AND bs. STATUS = 1,op.poundage,IF((TRIM(op.pay_code)='04' AND bs. STATUS = 1),op.amount*ssta.credit_card_rate,0)) poundage,
		IF((TRIM(op.pay_code)='03' AND bs. STATUS = 1),op.amount,0) S3,
		IF((TRIM(op.pay_code)='04' AND bs. STATUS = 1 AND rem.amount &gt; 0),op.amount,0) S4,
		IF((TRIM(op.pay_code)='05' AND bs. STATUS = 1),op.amount,0) S5,
		IF((TRIM(op.pay_code) NOT IN ('01','03','04','05','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','35','25','26','27','28','29','30','31','32','999') AND bs. STATUS = 1),op.amount,0) S6,
		IF((TRIM(op.pay_code)='08' AND bs. STATUS = 1),op.amount,0) S8,
		IF((TRIM(op.pay_code)='09' AND bs. STATUS = 1),op.amount,0) S9,
		IF((TRIM(op.pay_code)='10' AND bs. STATUS = 1),op.amount,0) S10,
		IF((TRIM(op.pay_code)='11' AND bs. STATUS = 1),op.amount,0) S11,
		IF((TRIM(op.pay_code)='12' AND bs. STATUS = 1),op.amount,0) S12,
		IF((TRIM(op.pay_code)='13' AND bs. STATUS = 1),op.amount,0) S13,
		IF((TRIM(op.pay_code)='14' AND bs. STATUS = 1),op.amount,0) S14,
		IF((TRIM(op.pay_code)='15' AND bs. STATUS = 1),op.amount,0) S15,
		IF((TRIM(op.pay_code)='16' AND bs. STATUS = 1),op.amount,0) S16,
		IF((TRIM(op.pay_code)='17' AND bs. STATUS = 1),op.amount,0) S17,
		IF((TRIM(op.pay_code)='18' AND bs. STATUS = 1),op.amount,0) S18,
		IF((TRIM(op.pay_code)='19' AND bs. STATUS = 1),op.amount,0) S19,
		IF((TRIM(op.pay_code)='20' AND bs. STATUS = 1),op.amount,0) S20,
		IF((TRIM(op.pay_code)='20151010' AND bs. STATUS = 1),op.amount,0) S20151010,
		IF((TRIM(op.pay_code)='21' AND bs. STATUS = 1),op.amount,0) S21,
		IF((TRIM(op.pay_code)='22' AND bs. STATUS = 1),op.amount,0) S22,
		IF((TRIM(op.pay_code)='23' AND bs. STATUS = 1),op.amount,0) S23,
		IF((TRIM(op.pay_code)='24' AND bs. STATUS = 1),op.amount,0) S24,
		IF((TRIM(op.pay_code)='25' AND bs. STATUS = 1),op.amount,0) S25,
		IF((TRIM(op.pay_code)='26' AND bs. STATUS = 1),op.amount,0) S26,
		IF((TRIM(op.pay_code)='27' AND bs. STATUS = 1),op.amount,0) S27,
		IF((TRIM(op.pay_code)='28' AND bs. STATUS = 1),op.amount,0) S28,
		IF((TRIM(op.pay_code)='29' AND bs. STATUS = 1),op.amount,0) S29,
		IF((TRIM(op.pay_code)='30' AND bs. STATUS = 1),op.amount,0) S30,
		IF((TRIM(op.pay_code)='31' AND bs. STATUS = 1),op.amount,0) S31,
		IF((TRIM(op.pay_code)='32' AND bs. STATUS = 1),op.amount,0) S32,
		IF((TRIM(op.pay_code)='33' AND bs. STATUS = 1),op.amount,0) S33,
		IF((TRIM(op.pay_code)='35' AND bs. STATUS = 1),op.amount,0) S35,
		IF((TRIM(op.pay_code)='36' AND bs. STATUS = 1),op.amount,0) S36,
		IF((TRIM(op.pay_code)='37' AND bs. STATUS = 1),op.amount,0) S37,
		IF((TRIM(op.pay_code)='38' AND bs. STATUS = 1),op.amount,0) S38,
		IF((TRIM(op.pay_code)='999' AND bs. STATUS = 1),op.amount,0) S999
	</sql>
	
   <sql id="shopDayReportForBrandCount_Column_List">
   	COUNT(1) total,
	IFNULL(SUM(A.P01现金),0) P01现金,
	IFNULL(SUM(A.P03现金券),0) P03现金券,
	IFNULL(SUM(A.P04银行卡),0) P04银行卡,
	IFNULL(SUM(A.P05商场卡),0) P05商场卡,
	IFNULL(SUM(A.P06其它),0) P06其它,
	IFNULL(SUM(A.P08商场券),0) P08商场券,
	IFNULL(SUM(A.P09预收款),0) P09预收款,
	IFNULL(SUM(A.P10支票),0) P10支票,
	IFNULL(SUM(A.P11减现额接劵额),0) P11减现额接劵额,
	IFNULL(SUM(A.P12国外银行卡),0) P12国外银行卡,
	IFNULL(SUM(A.P13IC卡),0) P13IC卡,
	IFNULL(SUM(A.P14公司折扣券),0) P14公司折扣券,
	IFNULL(SUM(A.P15商场折扣券),0) P15商场折扣券,
	IFNULL(SUM(A.P16美元),0) P16美元,
	IFNULL(SUM(A.P17港币),0) P17港币,
	IFNULL(SUM(A.P18联华卡),0) P18联华卡,
	IFNULL(SUM(A.P19市民卡),0) P19市民卡,
	IFNULL(SUM(A.P20商盟卡),0) P20商盟卡,
	IFNULL(SUM(A.P20151010支付宝商场收银),0) P20151010支付宝商场收银,
	IFNULL(SUM(A.P21支付宝当面付),0) P21支付宝当面付,
	IFNULL(SUM(A.P22微信当面付),0) P22微信当面付,
	IFNULL(SUM(A.P23储值卡),0) P23储值卡,
	IFNULL(SUM(A.P24其它外卡),0) P24其它外卡,
	IFNULL(SUM(A.P25商场现金劵),0) P25商场现金劵,
	IFNULL(SUM(A.P26心赏卡),0) P26心赏卡,
	IFNULL(SUM(A.P27商场会员卡),0) P27商场会员卡,
	IFNULL(SUM(A.P28提货券),0) P28提货券,
	IFNULL(SUM(A.P29外币卡),0) P29外币卡,
	IFNULL(SUM(A.P30刷卡退款),0) P30刷卡退款,
	IFNULL(SUM(A.P31商场储值卡),0) P31商场储值卡,
	IFNULL(SUM(A.P32百丽储值卡),0) P32百丽储值卡,
	IFNULL(SUM(A.P33支付宝),0) P33支付宝,
	IFNULL(SUM(A.P35储值购物卡),0) P35储值购物卡,
	IFNULL(SUM(A.P36微信商场收银),0) P36微信商场收银,
	IFNULL(SUM(A.P37支付宝第三方),0) P37支付宝第三方,
	IFNULL(SUM(A.P38微信第三方),0) P38微信第三方,
	IFNULL(SUM(A.P999支付宝当面付),0) P999支付宝当面付,
	IFNULL(SUM(A.totalAmount),0) totalAmount
   </sql>
   
   <!-- 分品牌查询店铺销售日报表 总计-->
   <select id="findSaleDayReportForBrandCount" resultMap="saleOrderPayway" parameterType="java.util.Map">
   	SELECT 
		<include refid="shopDayReportForBrandCount_Column_List"></include>
	FROM (
		SELECT 
			<include refid="shopDayReportForBrand_Column_List"></include>
		FROM (
			SELECT  
				<include refid="shopDayReportForBrandPP_Column_List"></include>
			FROM (
				SELECT 
					<include refid="shopDayReportForBrandAA_Column_List"></include>
				FROM (
					SELECT
						<include refid="shopDayReportForBrandAA01_Column_List"></include>
					FROM
						order_main om
					LEFT JOIN order_payway op ON om.`order_no` = op.`order_no`
					WHERE 1 = 1 <include refid="orderMain_Condition"/>
					GROUP BY om.order_no,op.pay_code
				) a
				LEFT JOIN order_dtl dtl ON a.order_no = dtl.order_no
				WHERE 1=1
				AND dtl.amount != 0
				UNION ALL
				SELECT 
					<include refid="shopDayReportForBrandBB_Column_List"></include>
				FROM (
				SELECT
					<include refid="shopDayReportForBrandBB01_Column_List"></include>
				FROM
					return_exchange_main rem
				LEFT JOIN order_payway op ON rem.business_no = op.`order_no`
				WHERE 1 = 1 <include refid="orderReturn_Condition"/>
				GROUP BY rem.business_no,op.pay_code
				) a
				LEFT JOIN return_exchange_dtl dtl ON a.business_no = dtl.business_no
				WHERE 1=1
				AND dtl.amount != 0
			) PT
			GROUP BY PT.shop_no,PT.out_date,PT.brand_unit_no
		) PP LEFT JOIN (
			SELECT
				<include refid="shopDayReportSS_Column_List"></include>
			FROM
				(
					SELECT DISTINCT
						<include refid="shopDayReportSS01_Column_List"></include>
					FROM
						order_main om
					LEFT JOIN order_payway op ON om.order_no = op.order_no
					LEFT JOIN self_shop_terminal_account ssta ON om.shop_no = ssta.shop_no
					LEFT JOIN bill_status bs ON op.order_no = bs.bill_no AND op.pay_name = bs.pay_name
					WHERE 1 = 1 <include refid="orderMain_Condition"/>
					GROUP BY om.order_no,op.pay_code
					UNION ALL
					SELECT DISTINCT
						<include refid="shopDayReportSS02_Column_List"></include>
					FROM
						return_exchange_main rem
					LEFT JOIN order_payway op ON rem.`business_no` = op.`order_no`
					LEFT JOIN self_shop_terminal_account ssta ON rem.shop_no = ssta.shop_no
					LEFT JOIN bill_status bs ON op.order_no = bs.bill_no AND op.pay_name = bs.pay_name
					WHERE 1 = 1 <include refid="orderReturn_Condition"/>
					GROUP BY rem.`business_no`,op.pay_code
				) ST GROUP BY ST.shop_no, ST.out_date
		) SS ON PP.shop_no = SS.shop_no AND PP.out_date = SS.out_date
		WHERE 1=1
		<if test="null!=params" >
			<if test="null!=params.brandNoLists and ''!=params.brandNoLists" >
		       AND PP.brand_no in ${params.brandNoLists} 
		   	</if>
		   	<if test="params.retailType != null and params.retailType!=''">  
			   AND PP.shop_no in (SELECT shop_no FROM shop WHERE retail_type = #{params.retailType})
			</if>
		</if>
	) A
   </select>
   
   <sql id="shopDayReportForBrand_Column_List">
   	PP.shop_no,PP.shop_name,PP.company_no,PP.company_name,PP.brand_unit_no,PP.brand_unit_name,PP.out_date,
   	IFNULL(PP.P01现金,0) P01现金,
	IFNULL(PP.P03现金券,0) P03现金券,
	IFNULL(PP.P04银行卡,0) P04银行卡,
	IFNULL(PP.P05商场卡,0) P05商场卡,
	IFNULL(PP.P06其它,0) P06其它,
	IFNULL(PP.P08商场券,0) P08商场券,
	IFNULL(PP.P09预收款,0) P09预收款,
	IFNULL(PP.P10支票,0) P10支票,
	IFNULL(PP.P11减现额接劵额,0) P11减现额接劵额,
	IFNULL(PP.P12国外银行卡,0) P12国外银行卡,
	IFNULL(PP.P13IC卡,0) P13IC卡,
	IFNULL(PP.P14公司折扣券,0) P14公司折扣券,
	IFNULL(PP.P15商场折扣券,0) P15商场折扣券,
	IFNULL(PP.P16美元,0) P16美元,
	IFNULL(PP.P17港币,0) P17港币,
	IFNULL(PP.P18联华卡,0) P18联华卡,
	IFNULL(PP.P19市民卡,0) P19市民卡,
	IFNULL(PP.P20商盟卡,0) P20商盟卡,
	IFNULL(PP.P20151010支付宝商场收银,0) P20151010支付宝商场收银,
	IFNULL(PP.P21支付宝当面付,0) P21支付宝当面付,
	IFNULL(PP.P22微信当面付,0) P22微信当面付,
	IFNULL(PP.P23储值卡,0) P23储值卡,
	IFNULL(PP.P24其它外卡,0) P24其它外卡,
	IFNULL(PP.P25商场现金劵,0) P25商场现金劵,
	IFNULL(PP.P26心赏卡,0) P26心赏卡,
	IFNULL(PP.P27商场会员卡,0) P27商场会员卡,
	IFNULL(PP.P28提货券,0) P28提货券,
	IFNULL(PP.P29外币卡,0) P29外币卡,
	IFNULL(PP.P30刷卡退款,0) P30刷卡退款,
	IFNULL(PP.P31商场储值卡,0) P31商场储值卡,
	IFNULL(PP.P32百丽储值卡,0) P32百丽储值卡,
	IFNULL(PP.P33支付宝,0) P33支付宝,
	IFNULL(PP.P35储值购物卡,0) P35储值购物卡,
	IFNULL(PP.P36微信商场收银,0) P36微信商场收银,
	IFNULL(PP.P37支付宝第三方,0) P37支付宝第三方,
	IFNULL(PP.P38微信第三方,0) P38微信第三方,
	IFNULL(PP.P999支付宝当面付,0) P999支付宝当面付,
	IFNULL(PP.totalAmount,0) totalAmount,
	IFNULL(SS.S03现金券,0) S03现金券,
	IFNULL(SS.S04银行卡,0) S04银行卡,
	IFNULL(SS.S05商场卡,0) S05商场卡,
	IFNULL(SS.S06其它,0) S06其它,
	IFNULL(SS.S08商场券,0) S08商场券,
	IFNULL(SS.S09预收款,0) S09预收款,
	IFNULL(SS.S10支票,0) S10支票,
	IFNULL(SS.S11减现额接劵额,0) S11减现额接劵额,
	IFNULL(SS.S12国外银行卡,0) S12国外银行卡,
	IFNULL(SS.S13IC卡,0) S13IC卡,
	IFNULL(SS.S14公司折扣券,0) S14公司折扣券,
	IFNULL(SS.S15商场折扣券,0) S15商场折扣券,
	IFNULL(SS.S16美元,0) S16美元,
	IFNULL(SS.S17港币,0) S17港币,
	IFNULL(SS.S18联华卡,0) S18联华卡,
	IFNULL(SS.S19市民卡,0) S19市民卡,
	IFNULL(SS.S20商盟卡,0) S20商盟卡,
	IFNULL(SS.S20151010支付宝商场收银,0) S20151010支付宝商场收银,
	IFNULL(SS.S21支付宝当面付,0) S21支付宝当面付,
	IFNULL(SS.S22微信当面付,0) S22微信当面付,
	IFNULL(SS.S23储值卡,0) S23储值卡,
	IFNULL(SS.S24其它外卡,0) S24其它外卡,
	IFNULL(SS.S25商场现金劵,0) S25商场现金劵,
	IFNULL(SS.S26心赏卡,0) S26心赏卡,
	IFNULL(SS.S27商场会员卡,0) S27商场会员卡,
	IFNULL(SS.S28提货券,0) S28提货券,
	IFNULL(SS.S29外币卡,0) S29外币卡,
	IFNULL(SS.S30刷卡退款,0) S30刷卡退款,
	IFNULL(SS.S31商场储值卡,0) S31商场储值卡,
	IFNULL(SS.S32百丽储值卡,0) S32百丽储值卡,
	IFNULL(SS.S33支付宝,0) S33支付宝,
	IFNULL(SS.S35储值购物卡,0) S35储值购物卡,
	IFNULL(SS.S36微信商场收银,0) S36微信商场收银,
	IFNULL(SS.S37支付宝第三方,0) S37支付宝第三方,
	IFNULL(SS.S38微信第三方,0) S38微信第三方,
	IFNULL(SS.S999支付宝当面付,0) S999支付宝当面付,
	IFNULL(SS.amount,0) amount,
	IFNULL(SS.return_amount,0) return_amount,
	IFNULL(SS.actual_return_amount,0) actual_return_amount,
	IFNULL(SS.poundage,0) poundage,
	IFNULL(SS.amount,0) + IFNULL(SS.actual_return_amount,0) - IFNULL(SS.poundage,0) sum
   </sql>
   
   <sql id="shopDayReportForBrandPP_Column_List">
   	PT.shop_no,PT.shop_name,
	PT.company_no,PT.company_name,
	PT.brand_no,PT.brand_name,
	PT.brand_unit_no,PT.brand_unit_name,PT.out_date,
	SUM(IFNULL(P01现金,0)) P01现金,
	SUM(IFNULL(P03现金券,0)) P03现金券,
	SUM(IFNULL(P04银行卡,0)) P04银行卡,
	SUM(IFNULL(P05商场卡,0)) P05商场卡,
	SUM(IFNULL(P06其它,0)) P06其它,
	SUM(IFNULL(P08商场券,0)) P08商场券,
	SUM(IFNULL(P09预收款,0)) P09预收款,
	SUM(IFNULL(P10支票,0)) P10支票,
	SUM(IFNULL(P11减现额接劵额,0)) P11减现额接劵额,
	SUM(IFNULL(P12国外银行卡,0)) P12国外银行卡,
	SUM(IFNULL(P13IC卡,0)) P13IC卡,
	SUM(IFNULL(P14公司折扣券,0)) P14公司折扣券,
	SUM(IFNULL(P15商场折扣券,0)) P15商场折扣券,
	SUM(IFNULL(P16美元,0)) P16美元,
	SUM(IFNULL(P17港币,0)) P17港币,
	SUM(IFNULL(P18联华卡,0)) P18联华卡,
	SUM(IFNULL(P19市民卡,0)) P19市民卡,
	SUM(IFNULL(P20商盟卡,0)) P20商盟卡,
	SUM(IFNULL(P20151010支付宝商场收银,0)) P20151010支付宝商场收银,
	SUM(IFNULL(P21支付宝当面付,0)) P21支付宝当面付,
	SUM(IFNULL(P22微信当面付,0)) P22微信当面付,
	SUM(IFNULL(P23储值卡,0)) P23储值卡,
	SUM(IFNULL(P24其它外卡,0)) P24其它外卡,
	SUM(IFNULL(P25商场现金劵,0)) P25商场现金劵,
	SUM(IFNULL(P26心赏卡,0)) P26心赏卡,
	SUM(IFNULL(P27商场会员卡,0)) P27商场会员卡,
	SUM(IFNULL(P28提货券,0)) P28提货券,
	SUM(IFNULL(P29外币卡,0)) P29外币卡,
	SUM(IFNULL(P30刷卡退款,0)) P30刷卡退款,
	SUM(IFNULL(P31商场储值卡,0)) P31商场储值卡,
	SUM(IFNULL(P32百丽储值卡,0)) P32百丽储值卡,
	SUM(IFNULL(P33支付宝,0)) P33支付宝,
	SUM(IFNULL(P35储值购物卡,0)) P35储值购物卡,
	SUM(IFNULL(P36微信商场收银,0)) P36微信商场收银,
	SUM(IFNULL(P37支付宝第三方,0)) P37支付宝第三方,
	SUM(IFNULL(P38微信第三方,0)) P38微信第三方,
	SUM(IFNULL(P999支付宝当面付,0)) P999支付宝当面付,
	SUM(PT.amount) totalAmount
   </sql>
   
   <sql id="shopDayReportForBrandAA_Column_List">
   	a.shop_no,a.shop_name,a.company_no,a.company_name,dtl.brand_no,dtl.brand_name,
   	dtl.brand_unit_no,dtl.brand_unit_name,a.out_date,a.order_no,a.pay_code,a.all_amount,a.op_amount,
	((dtl.amount / a.all_amount) * (a.P1+a.P3+a.P4+a.P5+a.P6+a.P8+a.P9+a.P10+a.P11+a.P12+a.P13+a.P14+a.P15+a.P16
   	+a.P17+a.P18+a.P19+a.P20+P20151010+a.P21+a.P22+a.P23+a.P24+a.P25+a.P26+a.P27+a.P28+a.P29+a.P30+a.P31+a.P32+P33+a.P35+P36+P37+P38+a.P999)) amount,
   	IF(a.pay_code = '01',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P1),0) P01现金,
	IF(a.pay_code = '03',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P3),0) P03现金券,
	IF(a.pay_code = '04',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P4),0) P04银行卡,
	IF(a.pay_code = '05',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P5),0) P05商场卡,
	IF(a.pay_code = '06',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P6),0) P06其它,
	IF(a.pay_code = '08',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P8),0) P08商场券,
	IF(a.pay_code = '09',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P9),0) P09预收款,
	IF(a.pay_code = '10',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P10),0) P10支票,
	IF(a.pay_code = '11',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P11),0) P11减现额接劵额,
	IF(a.pay_code = '12',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P12),0) P12国外银行卡,
	IF(a.pay_code = '13',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P13),0) P13IC卡,
	IF(a.pay_code = '14',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P14),0) P14公司折扣券,
	IF(a.pay_code = '15',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P15),0) P15商场折扣券,
	IF(a.pay_code = '16',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P16),0) P16美元,
	IF(a.pay_code = '17',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P17),0) P17港币,
	IF(a.pay_code = '18',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P18),0) P18联华卡,
	IF(a.pay_code = '19',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P19),0) P19市民卡,
	IF(a.pay_code = '20',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P20),0) P20商盟卡,
	IF(a.pay_code = '20151010',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P20151010),0) P20151010支付宝商场收银,
	IF(a.pay_code = '21',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P21),0) P21支付宝当面付,
	IF(a.pay_code = '22',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P22),0) P22微信当面付,
	IF(a.pay_code = '23',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P23),0) P23储值卡,
	IF(a.pay_code = '24',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P24),0) P24其它外卡,
	IF(a.pay_code = '25',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P25),0) P25商场现金劵,
	IF(a.pay_code = '26',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P26),0) P26心赏卡,
	IF(a.pay_code = '27',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P27),0) P27商场会员卡,
	IF(a.pay_code = '28',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P28),0) P28提货券,
	IF(a.pay_code = '29',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P29),0) P29外币卡,
	IF(a.pay_code = '30',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P30),0) P30刷卡退款,
	IF(a.pay_code = '31',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P31),0) P31商场储值卡,
	IF(a.pay_code = '32',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P32),0) P32百丽储值卡,
	IF(a.pay_code = '33',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P33),0) P33支付宝,
	IF(a.pay_code = '35',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P35),0) P35储值购物卡,
	IF(a.pay_code = '36',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P36),0) P36微信商场收银,
	IF(a.pay_code = '37',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P37),0) P37支付宝第三方,
	IF(a.pay_code = '38',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P38),0) P38微信第三方,
	IF(a.pay_code = '999',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P999),0) P999支付宝当面付
   </sql>
   
   <sql id="shopDayReportForBrandAA01_Column_List">
   	om.id,
	om.shop_no,om.shop_name,
	om.company_no,om.company_name,
	om.out_date,om.order_no,op.pay_code,
	om.all_amount,
	IFNULL(SUM(op.amount), 0) op_amount,
	IFNULL(SUM(IF(op.pay_code='01',op.amount,0)),0) P1,
	IFNULL(SUM(IF(op.pay_code='03',op.amount,0)),0) P3,
	IFNULL(SUM(IF(op.pay_code='04',op.amount,0)),0) P4,
	IFNULL(SUM(IF(op.pay_code='05',op.amount,0)),0) P5,
	IFNULL(SUM(IF(op.pay_code='06',op.amount,0)),0) P6,
	IFNULL(SUM(IF(op.pay_code='08',op.amount,0)),0) P8,
	IFNULL(SUM(IF(op.pay_code='09',op.amount,0)),0) P9,
	IFNULL(SUM(IF(op.pay_code='10',op.amount,0)),0) P10,
	IFNULL(SUM(IF(op.pay_code='11',op.amount,0)),0) P11,
	IFNULL(SUM(IF(op.pay_code='12',op.amount,0)),0) P12,
	IFNULL(SUM(IF(op.pay_code='13',op.amount,0)),0) P13,
	IFNULL(SUM(IF(op.pay_code='14',op.amount,0)),0) P14,
	IFNULL(SUM(IF(op.pay_code='15',op.amount,0)),0) P15,
	IFNULL(SUM(IF(op.pay_code='16',op.amount,0)),0) P16,
	IFNULL(SUM(IF(op.pay_code='17',op.amount,0)),0) P17,
	IFNULL(SUM(IF(op.pay_code='18',op.amount,0)),0) P18,
	IFNULL(SUM(IF(op.pay_code='19',op.amount,0)),0) P19,
	IFNULL(SUM(IF(op.pay_code='20',op.amount,0)),0) P20,
	IFNULL(SUM(IF(op.pay_code='20151010',op.amount,0)),0) P20151010,
	IFNULL(SUM(IF(op.pay_code='21',op.amount,0)),0) P21,
	IFNULL(SUM(IF(op.pay_code='22',op.amount,0)),0) P22,
	IFNULL(SUM(IF(op.pay_code='23',op.amount,0)),0) P23,
	IFNULL(SUM(IF(op.pay_code='24',op.amount,0)),0) P24,
	IFNULL(SUM(IF(op.pay_code='25',op.amount,0)),0) P25,
	IFNULL(SUM(IF(op.pay_code='26',op.amount,0)),0) P26,
	IFNULL(SUM(IF(op.pay_code='27',op.amount,0)),0) P27,
	IFNULL(SUM(IF(op.pay_code='28',op.amount,0)),0) P28,
	IFNULL(SUM(IF(op.pay_code='29',op.amount,0)),0) P29,
	IFNULL(SUM(IF(op.pay_code='30',op.amount,0)),0) P30,
	IFNULL(SUM(IF(op.pay_code='31',op.amount,0)),0) P31,
	IFNULL(SUM(IF(op.pay_code='32',op.amount,0)),0) P32,
	IFNULL(SUM(IF(op.pay_code='33',op.amount,0)),0) P33,
	IFNULL(SUM(IF(op.pay_code='35',op.amount,0)),0) P35,
	IFNULL(SUM(IF(op.pay_code='36',op.amount,0)),0) P36,
	IFNULL(SUM(IF(op.pay_code='37',op.amount,0)),0) P37,
	IFNULL(SUM(IF(op.pay_code='38',op.amount,0)),0) P38,
	IFNULL(SUM(IF(op.pay_code='999',op.amount,0)),0) P999
   </sql>
   
   <sql id="shopDayReportForBrandBB_Column_List">
   	a.shop_no,a.shop_name,a.company_no,a.company_name,dtl.brand_no,dtl.brand_name,
   	dtl.brand_unit_no,dtl.brand_unit_name,a.out_date,a.business_no,a.pay_code,a.all_amount,a.op_amount,
	((dtl.amount / a.all_amount) * (a.P1+a.P3+a.P4+a.P5+a.P6+a.P8+a.P9+a.P10+a.P11+a.P12+a.P13+a.P14+a.P15+a.P16
   	+a.P17+a.P18+a.P19+a.P20+P20151010+a.P21+a.P22+a.P23+a.P24+a.P25+a.P26+a.P27+a.P28+a.P29+a.P30+a.P31+a.P32+P33+a.P35+P36+P37+P38+a.P999)) amount,
   	IF(a.pay_code = '01',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P1),0) P01现金,
	IF(a.pay_code = '03',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P3),0) P03现金券,
	IF(a.pay_code = '04',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P4),0) P04银行卡,
	IF(a.pay_code = '05',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P5),0) P05商场卡,
	IF(a.pay_code = '06',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P6),0) P06其它,
	IF(a.pay_code = '08',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P8),0) P08商场券,
	IF(a.pay_code = '09',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P9),0) P09预收款,
	IF(a.pay_code = '10',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P10),0) P10支票,
	IF(a.pay_code = '11',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P11),0) P11减现额接劵额,
	IF(a.pay_code = '12',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P12),0) P12国外银行卡,
	IF(a.pay_code = '13',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P13),0) P13IC卡,
	IF(a.pay_code = '14',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P14),0) P14公司折扣券,
	IF(a.pay_code = '15',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P15),0) P15商场折扣券,
	IF(a.pay_code = '16',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P16),0) P16美元,
	IF(a.pay_code = '17',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P17),0) P17港币,
	IF(a.pay_code = '18',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P18),0) P18联华卡,
	IF(a.pay_code = '19',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P19),0) P19市民卡,
	IF(a.pay_code = '20',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P20),0) P20商盟卡,
	IF(a.pay_code = '20151010',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P20151010),0) P20151010支付宝商场收银,
	IF(a.pay_code = '21',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P21),0) P21支付宝当面付,
	IF(a.pay_code = '22',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P22),0) P22微信当面付,
	IF(a.pay_code = '23',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P23),0) P23储值卡,
	IF(a.pay_code = '24',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P24),0) P24其它外卡,
	IF(a.pay_code = '25',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P25),0) P25商场现金劵,
	IF(a.pay_code = '26',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P26),0) P26心赏卡,
	IF(a.pay_code = '27',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P27),0) P27商场会员卡,
	IF(a.pay_code = '28',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P28),0) P28提货券,
	IF(a.pay_code = '29',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P29),0) P29外币卡,
	IF(a.pay_code = '30',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P30),0) P30刷卡退款,
	IF(a.pay_code = '31',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P31),0) P31商场储值卡,
	IF(a.pay_code = '32',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P32),0) P32百丽储值卡,
	IF(a.pay_code = '33',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P33),0) P33支付宝,
	IF(a.pay_code = '35',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P35),0) P35储值购物卡,
	IF(a.pay_code = '36',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P36),0) P36微信商场收银,
	IF(a.pay_code = '37',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P37),0) P37支付宝第三方,
	IF(a.pay_code = '38',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P38),0) P38微信第三方,
	IF(a.pay_code = '999',IF(a.all_amount=0,dtl.amount,(dtl.amount / a.all_amount) * a.P999),0) P999支付宝当面付
   </sql>
   
   <sql id="shopDayReportForBrandBB01_Column_List">
   	rem.id,
	rem.shop_no,rem.shop_name,
	rem.company_no,rem.company_name,
	rem.out_date,rem.business_no,op.pay_code,
	rem.all_amount,
	IFNULL(SUM(op.amount),0) op_amount,
	IFNULL(SUM(IF(op.pay_code='01',op.amount,0)),0) P1,
	IFNULL(SUM(IF(op.pay_code='03',op.amount,0)),0) P3,
	IFNULL(SUM(IF((op.pay_code='04' AND rem.amount &gt; 0),op.amount,0)),0) P4,
	IFNULL(SUM(IF(op.pay_code='05',op.amount,0)),0) P5,
	IFNULL(SUM(IF(op.pay_code='06',op.amount,0)),0) P6,
	IFNULL(SUM(IF(op.pay_code='08',op.amount,0)),0) P8,
	IFNULL(SUM(IF(op.pay_code='09',op.amount,0)),0) P9,
	IFNULL(SUM(IF(op.pay_code='10',op.amount,0)),0) P10,
	IFNULL(SUM(IF(op.pay_code='11',op.amount,0)),0) P11,
	IFNULL(SUM(IF(op.pay_code='12',op.amount,0)),0) P12,
	IFNULL(SUM(IF(op.pay_code='13',op.amount,0)),0) P13,
	IFNULL(SUM(IF(op.pay_code='14',op.amount,0)),0) P14,
	IFNULL(SUM(IF(op.pay_code='15',op.amount,0)),0) P15,
	IFNULL(SUM(IF(op.pay_code='16',op.amount,0)),0) P16,
	IFNULL(SUM(IF(op.pay_code='17',op.amount,0)),0) P17,
	IFNULL(SUM(IF(op.pay_code='18',op.amount,0)),0) P18,
	IFNULL(SUM(IF(op.pay_code='19',op.amount,0)),0) P19,
	IFNULL(SUM(IF(op.pay_code='20',op.amount,0)),0) P20,
	IFNULL(SUM(IF(op.pay_code='20151010',op.amount,0)),0) P20151010,
	IFNULL(SUM(IF(op.pay_code='21',op.amount,0)),0) P21,
	IFNULL(SUM(IF(op.pay_code='22',op.amount,0)),0) P22,
	IFNULL(SUM(IF(op.pay_code='23',op.amount,0)),0) P23,
	IFNULL(SUM(IF(op.pay_code='24',op.amount,0)),0) P24,
	IFNULL(SUM(IF(op.pay_code='25',op.amount,0)),0) P25,
	IFNULL(SUM(IF(op.pay_code='26',op.amount,0)),0) P26,
	IFNULL(SUM(IF(op.pay_code='27',op.amount,0)),0) P27,
	IFNULL(SUM(IF(op.pay_code='28',op.amount,0)),0) P28,
	IFNULL(SUM(IF(op.pay_code='29',op.amount,0)),0) P29,
	IFNULL(SUM(IF(op.pay_code='30',op.amount,0)),0) P30,
	IFNULL(SUM(IF(op.pay_code='31',op.amount,0)),0) P31,
	IFNULL(SUM(IF(op.pay_code='32',op.amount,0)),0) P32,
	IFNULL(SUM(IF(op.pay_code='33',op.amount,0)),0) P33,
	IFNULL(SUM(IF(op.pay_code='35',op.amount,0)),0) P35,
	IFNULL(SUM(IF(op.pay_code='36',op.amount,0)),0) P36,
	IFNULL(SUM(IF(op.pay_code='37',op.amount,0)),0) P37,
	IFNULL(SUM(IF(op.pay_code='38',op.amount,0)),0) P38,
	IFNULL(SUM(IF(op.pay_code='999',op.amount,0)),0) P999
   </sql>
   
   <!-- 分品牌查询店铺销售日报表 -->
   <select id="findSaleDayReportForBrandByPage" resultMap="saleOrderPayway" parameterType="java.util.Map">
	SELECT 
		<include refid="shopDayReportForBrand_Column_List"></include>
	FROM (
		SELECT  
			<include refid="shopDayReportForBrandPP_Column_List"></include>
		FROM (
			SELECT 
				<include refid="shopDayReportForBrandAA_Column_List"></include>
			FROM (
				SELECT
					<include refid="shopDayReportForBrandAA01_Column_List"></include>
				FROM
					order_main om
				LEFT JOIN order_payway op ON om.`order_no` = op.`order_no`
				WHERE 1 = 1 <include refid="orderMain_Condition"/>
				GROUP BY om.order_no,op.pay_code
			) a
			LEFT JOIN order_dtl dtl ON a.order_no = dtl.order_no
			WHERE 1=1
			AND dtl.amount != 0
			UNION ALL
			SELECT 
				<include refid="shopDayReportForBrandBB_Column_List"></include>
			FROM (
			SELECT
				<include refid="shopDayReportForBrandBB01_Column_List"></include>
			FROM
				return_exchange_main rem
			LEFT JOIN order_payway op ON rem.business_no = op.`order_no`
			WHERE 1 = 1 <include refid="orderReturn_Condition"/>
			GROUP BY rem.business_no,op.pay_code
			) a
			LEFT JOIN return_exchange_dtl dtl ON a.business_no = dtl.business_no
			WHERE 1=1
			AND dtl.amount != 0
		) PT
		GROUP BY PT.shop_no,PT.out_date,PT.brand_unit_no
	) PP LEFT JOIN (
		SELECT
			<include refid="shopDayReportSS_Column_List"></include>
		FROM
			(
				SELECT DISTINCT
					<include refid="shopDayReportSS01_Column_List"></include>
				FROM
					order_main om
				LEFT JOIN order_payway op ON om.order_no = op.order_no
				LEFT JOIN self_shop_terminal_account ssta ON om.shop_no = ssta.shop_no
				LEFT JOIN bill_status bs ON op.order_no = bs.bill_no AND op.pay_name = bs.pay_name
				WHERE 1 = 1 <include refid="orderMain_Condition"/>
				GROUP BY om.order_no,op.pay_code
				UNION ALL
				SELECT DISTINCT
					<include refid="shopDayReportSS02_Column_List"></include>
				FROM
					return_exchange_main rem
				LEFT JOIN order_payway op ON rem.`business_no` = op.`order_no`
				LEFT JOIN self_shop_terminal_account ssta ON rem.shop_no = ssta.shop_no
				LEFT JOIN bill_status bs ON op.order_no = bs.bill_no AND op.pay_name = bs.pay_name
				WHERE 1 = 1 <include refid="orderReturn_Condition"/>
				GROUP BY rem.`business_no`,op.pay_code
			) ST GROUP BY ST.shop_no, ST.out_date
	) SS ON PP.shop_no = SS.shop_no AND PP.out_date = SS.out_date
	WHERE 1=1
	<if test="null!=params" >
		<if test="null!=params.brandNoLists and ''!=params.brandNoLists" >
	       AND PP.brand_no in ${params.brandNoLists} 
	   	</if>
	   	<if test="params.retailType != null and params.retailType!=''">  
		   AND PP.shop_no in (SELECT shop_no FROM shop WHERE retail_type = #{params.retailType})
		</if>
	</if>
	ORDER BY PP.shop_no,PP.out_date DESC,PP.brand_unit_no
	<if test="orderByField != null and ''!=orderByField" >
	      order by ${orderByField}
	      <if test="orderByField" >
	        ${orderBy}
	      </if>
	</if>
   </select>
   
   <!-- 根据店铺,销售日期查询开票申请的销售明细 wang.yj -->
   <resultMap id="shopBalanceDtl" type="cn.wonhigh.retail.fas.common.dto.ItemSaleDtlDto" >
     <result column="shop_name" property="shopName" jdbcType="VARCHAR" />
     <result column="shop_no" property="shopNo" jdbcType="VARCHAR" />
     <result column="out_date" property="outDate" jdbcType="DATE" />
     <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
     <result column="item_code" property="itemCode" jdbcType="VARCHAR" />
     <result column="item_name" property="itemName" jdbcType="VARCHAR" />
     <result column="qty" property="qty" jdbcType="INTEGER" />
     <result column="tag_price" property="tagPrice" jdbcType="DECIMAL" />
     <result column="sale_price" property="salePrice" jdbcType="DECIMAL" />
     <result column="settle_price" property="settlePrice" jdbcType="DECIMAL" />
     <result column="amount" property="amount" jdbcType="DECIMAL" />
	 <result column="discount" property="discount" jdbcType="DECIMAL" /> 
     <result column="discount_name" property="discountName" jdbcType="VARCHAR" />  
     <result column="brand_no" property="brandNo" jdbcType="VARCHAR" />
     <result column="brand_name" property="brandName" jdbcType="VARCHAR" />
     <result column="brand_unit_no" property="brandUnitName" jdbcType="VARCHAR" />
     <result column="brand_unit_name" property="brandUnitName" jdbcType="VARCHAR" />
     <result column="region_cost" property="regionCost" jdbcType="DECIMAL"/>
	 <result column="unit_cost" property="unitCost" jdbcType="DECIMAL"/>
	 <result column="headquarter_cost" property="headquarterCost" jdbcType="DECIMAL"/>
     <result column="disc_price" property="discPrice" jdbcType="DECIMAL" /> 
     <result column="pro_name" property="proName" jdbcType="VARCHAR" /> 
   </resultMap> 
   
   <select id="findOrderDetailByOrderNo" resultMap="shopBalanceDtl" parameterType="java.util.Map" >
	 	select 
			 om.shop_no, 
			 om.shop_name,
			 om.out_date,
			 od.order_no,
			 od.item_code,
			 od.item_name,	
			 od.qty,  
			 od.tag_price, 
			 od.sale_price,
			 od.settle_price,
			 od.amount,
			 od.discount,
			 od.discount_name,
			 od.disc_price,
			 od.item_no,
			 od.brand_no,
			 od.brand_name,
			 od.brand_unit_no,
			 od.brand_unit_name,
			 od.headquarter_cost,
			 od.region_cost,
			 od.unit_cost,
			 od.rate_pro_name pro_name
	    FROM order_dtl od LEFT JOIN order_main om ON od.order_no = om.order_no
	    WHERE 1=1 <include refid="orderDetailCondition" />
	    
	    union all 
		select 
	    	 rem.shop_no, 
			 rem.shop_name,
			 rem.out_date,
			 red.business_no order_no,
			 red.item_code,
			 red.item_name,	
			 red.qty,  
			 red.tag_price, 
			 red.sale_price,
			 red.settle_price,
			 red.amount,
			 red.discount,
			 red.discount_name,
			 red.disc_price,
			 red.item_no,
			 red.brand_no,
			 red.brand_name,
			 red.brand_unit_no,
			 red.brand_unit_name,
			 red.headquarter_cost,
			 red.region_cost,
			 red.unit_cost,
			 red.rate_pro_name pro_name
	    FROM return_exchange_dtl red LEFT JOIN return_exchange_main rem ON rem.business_no = red.business_no 
	    WHERE 1=1 <include refid="returnChanganCondition" />
		
	     limit #{page.startRowNum} ,#{page.pageSize} 
	</select>
	
	<select id="findOrderDetailCountByOrderNo" resultType="java.lang.Integer"  parameterType="java.util.Map" >
	 	select count(*) from (
	 		select 
			 om.shop_no, 
			 om.shop_name,
			 om.out_date,
			 od.order_no,
			 od.item_code,
			 od.item_name,	
			 od.qty,  
			 od.tag_price, 
			 od.sale_price,
			 od.settle_price,
			 od.amount,
			 od.discount,
			 od.discount_name,
			 od.disc_price,
			 od.item_no,
			 od.brand_no,
			 od.brand_name,
			 od.brand_unit_no,
			 od.brand_unit_name,
			 od.headquarter_cost,
			 od.region_cost,
			 od.unit_cost
	    FROM order_dtl od LEFT JOIN order_main om ON od.order_no = om.order_no
	    WHERE 1=1 <include refid="orderDetailCondition" />
	    
	    union all 
		select 
	    	 rem.shop_no, 
			 rem.shop_name,
			 rem.out_date,
			 red.business_no,
			 red.item_code,
			 red.item_name,	
			 red.qty,  
			 red.tag_price, 
			 red.sale_price,
			 red.settle_price,
			 red.amount,
			 red.discount,
			 red.discount_name,
			 red.disc_price,
			 red.item_no,
			 red.brand_no,
			 red.brand_name,
			 red.brand_unit_no,
			 red.brand_unit_name,
			 red.headquarter_cost,
			 red.region_cost,
			 red.unit_cost
	    FROM return_exchange_dtl red LEFT JOIN return_exchange_main rem ON rem.business_no = red.business_no 
	    WHERE 1=1 <include refid="returnChanganCondition" />
		) t
	</select>
	
	<sql id="orderDetailCondition">
		<if test="null!=params" >
	       <if test="params.shopNo != null and params.shopNo!=''">  
	     		and om.shop_no = #{params.shopNo}
	      </if>
	      <if test="params.statusList!=null and params.statusList!=''">
	        	<foreach collection="params.statusList" item="status" open="AND om.status in(" separator="," close=")">
	            	'${status}'
	       		</foreach>
	      </if>
	       <if test="params.startDate != null and params.startDate!=''">  
	     		and  om.out_date  &gt;= #{params.startDate, jdbcType=DATE}
	     	</if>
	     	<if test="params.endDate != null and params.endDate!=''">  
	     		and  om.out_date  &lt;= #{params.endDate, jdbcType=DATE}
	     	</if>
	 		 <if test="params.shopNoList!=null and params.shopNoList!=''" >
			   <foreach collection="params.shopNoList" item="shopNo" open="AND om.shop_no in(" separator="," close=")">
			      '${shopNo}'
			   </foreach>
		  	</if>
		  	 <if test="null!=params.businessTypeList and ''!=params.businessTypeList" >
			   <foreach collection="params.businessTypeList" item="businessType" open="AND om.business_type in(" separator="," close=")">
			      '${businessType}'
			    </foreach>
		  	</if>
			 <if test="params.orderNo != null and params.orderNo!=''">  
	     		and om.order_no = #{params.orderNo}
	        </if>
	        <if test="params.balanceNo != null and params.balanceNo != ''">
	        	and om.balance_no = #{params.balanceNo}
	        </if>
	     </if>
	</sql>
	
	<sql id="returnChanganCondition">
		<if test="null!=params" >
	       <if test="params.shopNo != null and params.shopNo!=''">  
	     		and rem.shop_no = #{params.shopNo}
	      </if>
	      <if test="params.statusList!=null and params.statusList!=''">
	        	<foreach collection="params.statusList" item="status" open="AND rem.status in(" separator="," close=")">
	            	'${status}'
	       		</foreach>
	      </if>
	       <if test="params.startDate != null and params.startDate!=''">  
	     		and  rem.out_date  &gt;= #{params.startDate, jdbcType=DATE}
	     	</if>
	     	<if test="params.endDate != null and params.endDate!=''">  
	     		and  rem.out_date  &lt;= #{params.endDate, jdbcType=DATE}
	     	</if>
	 		 <if test="params.shopNoList!=null and params.shopNoList!=''" >
			   <foreach collection="params.shopNoList" item="shopNo" open="AND rem.shop_no in(" separator="," close=")">
			      '${shopNo}'
			   </foreach>
		  	</if>
		  	 <if test="null!=params.businessTypeList and ''!=params.businessTypeList" >
			   <foreach collection="params.businessTypeList" item="businessType" open="AND rem.business_type in(" separator="," close=")">
			      '${businessType}'
			    </foreach>
		  	</if>
			 <if test="params.orderNo != null and params.orderNo!=''">  
	     		and rem.business_no = #{params.orderNo}
	        </if>
	        <if test="params.balanceNo != null and params.balanceNo != ''">
	        	and rem.balance_no = #{params.balanceNo}
	        </if>
	     </if>
	</sql>
	
	<resultMap id="shopSaleOrderDtlResultMap" type="cn.wonhigh.retail.fas.common.dto.ItemSaleDtlDto" extends="shopBalanceDtl" >
	<!--  <result column="order_dtl_id" property="id" jdbcType="VARCHAR" /> -->
     <result column="zone_no" property="zoneNo" jdbcType="VARCHAR" />
     <result column="zone_name" property="zoneName" jdbcType="VARCHAR" />
     <result column="biz_city_no" property="bizCityNo" jdbcType="VARCHAR" />
     <result column="biz_name" property="bizName" jdbcType="VARCHAR" />
     <result column="bsgroups_no" property="bsgroupsNo" jdbcType="VARCHAR" />
     <result column="bsgroups_name" property="bsgroupsName" jdbcType="VARCHAR" />
     <result column="mall_name" property="mallName" jdbcType="VARCHAR" />
     <result column="company_no" property="companyNo" jdbcType="VARCHAR" />
     <result column="company_name" property="companyName" jdbcType="VARCHAR" />
     <result column="size_no" property="sizeNo" jdbcType="VARCHAR" />
     <result column="item_no" property="itemNo" jdbcType="VARCHAR" />
     <result column="category_no" property="categoryNo" jdbcType="VARCHAR" />
     <result column="category_name" property="categoryName" jdbcType="VARCHAR" />
     <result column="tag_amount" property="tagAmount" jdbcType="DECIMAL" />
	 <result column="sale_amount" property="saleAmount" jdbcType="DECIMAL" /> 
	 <result column="disc_amount" property="discAmount" jdbcType="DECIMAL" /> 
     <result column="settle_amount" property="settleAmount" jdbcType="DECIMAL" />  
     <result column="mall_deduct_amount" property="mallDeductAmount" jdbcType="DECIMAL" />
     <result column="reduce_price" property="reducePrice" jdbcType="DECIMAL" />
	 <result column="pref_price" property="prefPrice" jdbcType="DECIMAL" />
     <result column="item_discount" property="itemDiscount" jdbcType="DECIMAL" /> 
     <result column="pro_no" property="proNo" jdbcType="VARCHAR" />
     <result column="billing_code" property="billingCode" jdbcType="VARCHAR" />
     <result column="launch_type_name" property="launchTypeName" jdbcType="VARCHAR" />
     <result column="activity_describe" property="activityDescribe" jdbcType="VARCHAR" />
	 <result column="discount_code" property="discountCode" jdbcType="VARCHAR" />
     <result column="pro_start_date" property="proStartDate" jdbcType="DATE" /> 
     <result column="pro_end_date" property="proEndDate" jdbcType="DATE" />
     <result column="vip_discount" property="vipDiscount" jdbcType="DECIMAL" />  
     <result column="invoice_no" property="invoiceNo" jdbcType="VARCHAR" />
     <result column="order_bill_type" property="orderBillType" jdbcType="VARCHAR" />
     <result column="organ_no" property="organNo" jdbcType="VARCHAR" />
     <result column="organ_name" property="organName" jdbcType="VARCHAR" />
     <result column="discount_str" property="discountStr" jdbcType="VARCHAR" />
     <result column="item_discount_str" property="itemDiscountStr" jdbcType="VARCHAR" />
     <result column="sale_price_amount" property="salePriceAmount" jdbcType="DECIMAL" />
       <result column="old_order_no" property="oldOrderNo" jdbcType="DECIMAL" />
   </resultMap> 
   
	<select id="findShopSaleDetailList" resultMap="shopSaleOrderDtlResultMap" parameterType="map">
		select * from (
			select sp.*,odr.* from (
			<if test="null == params.orderBillType or '' == params.orderBillType or -1 == params.orderBillType 
     		or (null != params.orderBillType and '' != params.orderBillType and 0 == params.orderBillType)">
				SELECT
					od.id order_dtl_id,
					om.company_no,
					om.company_name,
					om.shop_no,
					om.shop_name,
					om.remark,
					od.brand_no,
					od.brand_name,
					od.brand_unit_no,
					od.brand_unit_name,
					om.out_date,
					od.order_no,
					od.size_no,
					od.item_no,
					od.item_code,
					od.item_name,
					cty.category_no,
					cty.name category_name,
					od.qty,
					od.tag_price,
					od.tag_price * IFNULL(od.qty, 0) tag_amount,
					od.sale_price,
					od.sale_price * IFNULL(od.qty, 0) sale_price_amount,
					(CASE WHEN od.balance_base = 1 THEN (od.tag_price * IFNULL(od.qty, 0)) ELSE od.amount END) sale_amount,
					od.disc_price * IFNULL(od.qty, 0) disc_amount,
					od.settle_price,
					od.settle_price * IFNULL(od.qty, 0) settle_amount,
					od.amount,
					ROUND(IFNULL(od.discount, 0) / 100 * (CASE WHEN od.balance_base = 1 THEN
								(od.tag_price * IFNULL(od.qty, 0)) ELSE od.amount END),2) mall_deduct_amount,
					od.reduce_price,
					od.pref_price,
					od.item_discount,
					CONCAT(ROUND(od.item_discount,2),'%') item_discount_str,
					od.rate_pro_no pro_no,
					od.rate_pro_name pro_name,
					od.discount,
					CONCAT(ROUND(od.discount,2),'%') discount_str,
					od.billing_code,
					od.launch_type_name,
					od.activity_type_name activity_describe,
					IFNULL(od.discount_code, '') discount_code,
					od.pro_start_time pro_start_date,
					od.pro_end_time pro_end_date,
					od.vip_discount,
					od.region_cost,
					od.unit_cost,
					od.headquarter_cost,
					od.invoice_no,
					od.actual_amount,
					od.real_buy_amount,
					od.surplus_amount,
					od.rate_discount,
					 '' AS old_order_no,
					'正常销售' order_bill_type
				FROM order_dtl od
				LEFT JOIN order_main om ON od.order_no = om.order_no
				LEFT JOIN category cty ON left(od.category_no,2) = cty.category_no
				WHERE 1=1 
				<include refid="orderDtlCondition" />
			</if>
			<if test="null == params.orderBillType or '' == params.orderBillType or -1 == params.orderBillType" >
				UNION ALL
			</if>
			<if test="null == params.orderBillType or '' == params.orderBillType or -1 == params.orderBillType 
			or (null != params.orderBillType and '' != params.orderBillType and (1 == params.orderBillType or 2 == params.orderBillType))">	
				SELECT
					red.id order_dtl_id,
					rem.company_no,
					rem.company_name,
					rem.shop_no,
					rem.shop_name,
					rem.remark,
					red.brand_no,
					red.brand_name,
					red.brand_unit_no,
					red.brand_unit_name,
					rem.out_date,
					red.business_no order_no,
					red.size_no,
					red.item_no,
					red.item_code,
					red.item_name,
					cty.category_no,
					cty.name category_name,
					red.qty,
					red.tag_price,
					red.tag_price * IFNULL(red.qty, 0) tag_amount,
					red.sale_price,
					red.sale_price * IFNULL(red.qty, 0) sale_price_amount,
					(CASE WHEN red.balance_base = 1 THEN (red.tag_price * IFNULL(red.qty, 0)) ELSE red.amount END) sale_amount,
					red.disc_price * IFNULL(red.qty, 0) disc_amount,
					red.settle_price,
					red.settle_price * IFNULL(red.qty, 0) settle_amount,
					red.amount,
					ROUND(IFNULL(red.discount, 0) / 100 * (CASE WHEN red.balance_base = 1 THEN 
					(red.tag_price * IFNULL(red.qty, 0))ELSE red.amount END),2) mall_deduct_amount,
					red.reduce_price,
					red.pref_price,
					red.item_discount,
					CONCAT(ROUND(red.item_discount,2),'%') item_discount_str,
					red.rate_pro_no pro_no,
					red.rate_pro_name pro_name,
					red.discount,
					CONCAT(ROUND(red.discount,2),'%') discount_str,
					red.billing_code,
					red.launch_type_name,
					red.activity_type_name activity_describe,
					IFNULL(red.discount_code, '') discount_code,
					red.pro_start_time pro_start_date,
					red.pro_end_time pro_end_date,
					red.vip_discount,
					red.region_cost,
					red.unit_cost,
					red.headquarter_cost,
					red.invoice_no,
					red.actual_amount,
					red.real_buy_amount,
					red.surplus_amount,
					red.rate_discount,
					 rem.old_order_no AS old_order_no,
					CASE WHEN rem.business_mode = 1 THEN '换货' ELSE '退货' END order_bill_type
				FROM return_exchange_dtl red
				LEFT JOIN return_exchange_main rem ON rem.business_no = red.business_no
				LEFT JOIN category cty ON left(red.category_no,2) = cty.category_no
				WHERE 1=1 
				<include refid="returnDtlCondition" />
			</if>
			) odr 
			INNER JOIN
			(
				SELECT
					s.company_no company_no1,
					z.zone_no,
					z. NAME AS zone_name,
					g.organ_no,
					g.name organ_name,
					bg.organ_no biz_city_no,
					bg.`name` biz_name,
					b.bsgroups_no,
					b. NAME AS bsgroups_name,
					m.`name` mall_name,
					s.shop_no shop_no1
				FROM shop s
				LEFT JOIN organ bg ON s.biz_city_no = bg.organ_no
				LEFT JOIN organ g ON bg.parent_no = g.organ_no
				LEFT JOIN zone_info z ON g.zone_no = z.zone_no
				LEFT JOIN mall m ON s.mall_no = m.mall_no
				LEFT JOIN bsgroups b ON m.bsgroups_no = b.bsgroups_no
				where 1=1 
				<if test="null!=params.organNos and ''!=params.organNos">
					AND g.organ_no IN ${params.organNos} 
				</if>
			) sp ON sp.shop_no1 = odr.shop_no
		)tb
		<if test="null != page and '' != page">
			limit #{page.startRowNum} ,#{page.pageSize} 
		</if>
	</select>
	
	<resultMap id="TotalResultMap" type="cn.wonhigh.retail.fas.common.dto.ItemSaleDtlDto" >
  	<result column="total" property="total" jdbcType="INTEGER" />
  	<result column="qty" property="qty" jdbcType="INTEGER" />
  	<result column="tag_amount" property="tagAmount" jdbcType="DECIMAL" />
  	<result column="sale_price_amount" property="salePriceAmount" jdbcType="DECIMAL" /> 
	<result column="sale_amount" property="saleAmount" jdbcType="DECIMAL" /> 
	<result column="disc_amount" property="discAmount" jdbcType="DECIMAL" /> 
    <result column="settle_amount" property="settleAmount" jdbcType="DECIMAL" />  
    <result column="mall_deduct_amount" property="mallDeductAmount" jdbcType="DECIMAL" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="unit_cost" property="unitCost" jdbcType="DECIMAL" />
    <result column="region_cost" property="regionCost" jdbcType="DECIMAL" />
    <result column="headquarter_cost" property="headquarterCost" jdbcType="DECIMAL" />
  </resultMap>
	
	<!-- 店铺销售明细合计及记录数   wang.yj -->
	<select id="findShopSaleDetailCount" resultMap="TotalResultMap" parameterType="Map" >
     SELECT count(*) total,
     sum(a.qty) as qty ,
     sum(a.tag_amount) as tag_amount ,
     sum(a.sale_price_amount) sale_price_amount,
     sum(a.sale_amount) as sale_amount,
     sum(a.disc_amount) as disc_amount,
     sum(a.settle_amount) as settle_amount,
     sum(a.mall_deduct_amount) mall_deduct_amount,
     sum(a.amount) amount,
     sum(a.region_cost) region_cost,
     sum(a.unit_cost) unit_cost,
     sum(a.headquarter_cost) headquarter_cost
     FROM 
     (select sp.*,odr.* from (
     		<if test="null == params.orderBillType or '' == params.orderBillType or -1 == params.orderBillType 
     		or (null != params.orderBillType and '' != params.orderBillType and 0 == params.orderBillType)">
				SELECT
					om.company_no,
					om.company_name,
					om.shop_no,
					om.shop_name,
					od.order_no,
					od.qty,
					od.tag_price,
					od.tag_price * IFNULL(od.qty, 0) tag_amount,
					od.sale_price,
					od.sale_price * IFNULL(od.qty, 0) sale_price_amount,
					(CASE WHEN od.balance_base = 1 THEN (od.tag_price * IFNULL(od.qty, 0)) ELSE od.amount END) sale_amount,
					od.disc_price * IFNULL(od.qty, 0) disc_amount,
					od.settle_price,
					od.settle_price * IFNULL(od.qty, 0) settle_amount,
					od.amount,
					ROUND(IFNULL(od.discount, 0) / 100 * (CASE WHEN od.balance_base = 1 THEN
								(od.tag_price * IFNULL(od.qty, 0)) ELSE od.amount END),2) mall_deduct_amount,
					od.reduce_price,
					od.pref_price,
					od.item_discount,
					od.discount,
					od.vip_discount,
					od.region_cost,
					od.unit_cost,
					od.headquarter_cost,
					'正常销售' order_bill_type
				FROM order_dtl od
				LEFT JOIN order_main om ON od.order_no = om.order_no
				LEFT JOIN category cty ON left(od.category_no,2) = cty.category_no
				WHERE 1=1 
				<include refid="orderDtlCondition" />
			</if>
			<if test="null == params.orderBillType or '' == params.orderBillType or -1 == params.orderBillType" >
				UNION ALL
			</if>
			<if test="null == params.orderBillType or '' == params.orderBillType or -1 == params.orderBillType 
			or (null != params.orderBillType and '' != params.orderBillType and (1 == params.orderBillType or 2 == params.orderBillType))">	
				SELECT
					rem.company_no,
					rem.company_name,
					rem.shop_no,
					rem.shop_name,
					red.business_no order_no,
					red.qty,
					red.tag_price,
					red.tag_price * IFNULL(red.qty, 0) tag_amount,
					red.sale_price,
					red.sale_price * IFNULL(red.qty, 0) sale_price_amount,
					(CASE WHEN red.balance_base = 1 THEN (red.tag_price * IFNULL(red.qty, 0)) ELSE red.amount END) sale_amount,
					red.disc_price * IFNULL(red.qty, 0) disc_amount,
					red.settle_price,
					red.settle_price * IFNULL(red.qty, 0) settle_amount,
					red.amount,
					ROUND(IFNULL(red.discount, 0) / 100 * (CASE WHEN red.balance_base = 1 THEN 
					(red.tag_price * IFNULL(red.qty, 0))ELSE red.amount END),2) mall_deduct_amount,
					red.reduce_price,
					red.pref_price,
					red.item_discount,
					red.discount,
					red.vip_discount,
					red.region_cost,
					red.unit_cost,
					red.headquarter_cost,
					CASE WHEN rem.business_mode = 1 THEN '换货' ELSE '退货' END order_bill_type
				FROM return_exchange_dtl red
				LEFT JOIN return_exchange_main rem ON rem.business_no = red.business_no
				LEFT JOIN category cty ON left(red.category_no,2) = cty.category_no
				WHERE 1=1 
				<include refid="returnDtlCondition" />
			</if>
			) odr 
			INNER JOIN
			(
				SELECT
					s.shop_no shop_no1
				FROM shop s
				LEFT JOIN organ bg ON s.biz_city_no = bg.organ_no
				where 1=1 
				<if test="null!=params.organNos and ''!=params.organNos">
					AND bg.parent_no IN ${params.organNos} 
				</if>
			) sp ON sp.shop_no1 = odr.shop_no
      )AS a 
  </select>
	
	
	<sql id="orderDtlCondition" >
    	<if test="null!=params" >
    	  <if test="null!=params.itemSql and ''!=params.itemSql" >
				AND od.item_no IN (SELECT item_no FROM item WHERE 1=1 AND ${params.itemSql})
		  </if>
	      <if test="null!=params.companyNo and ''!=params.companyNo" >
	          	 AND om.company_no in ${params.companyNo}
	      </if>
	      <if test="null!=params.shopNoLists and ''!=params.shopNoLists" >
	          and om.shop_no in ${params.shopNoLists} 
	      </if>
	      <if test="params.statusList!=null and params.statusList!=''">
	        	<foreach collection="params.statusList" item="status" open="AND om.status in(" separator="," close=")">
	            	'${status}'
	       		</foreach>
	      </if>
	       <if test="params.startOutDate != null and params.startOutDate!=''">  
	     		and  om.out_date  &gt;= #{params.startOutDate, jdbcType=DATE}
	     	</if>
	     	<if test="params.endOutDate != null and params.endOutDate!=''">  
	     		and  om.out_date  &lt;= #{params.endOutDate, jdbcType=DATE}
	     	</if>
		  	<if test="null!=params.businessTypeList and ''!=params.businessTypeList" >
			   <foreach collection="params.businessTypeList" item="businessType" open="AND om.business_type in(" separator="," close=")">
			      '${businessType}'
			    </foreach>
		  	</if>
			<if test="params.orderNo != null and params.orderNo!=''">  
	     		and om.order_no = #{params.orderNo}
	        </if>
	        <if test="null!=params.orderNoList and ''!=params.orderNoList" >
			   <foreach collection="params.orderNoList" item="orderNo" open="AND om.order_no in(" separator="," close=")">
			      '${orderNo}'
			    </foreach>
		  	</if>
	         <!-- modify By wang.m 06/11-->
	        <if test="params.multiBrandNo != null and params.multiBrandNo!=''">  
	     		AND od.brand_no in ${params.multiBrandNo}
	        </if>
	         <if test="null!=params.balanceNo and ''!=params.balanceNo" >  
	            AND om.balance_no = #{params.balanceNo}
	         </if>
	         <if test="params.categoryNo != null and params.categoryNo!=''">  
	     		AND LEFT(od.category_no,2) in ${params.categoryNo}
	        </if>
	         <if test="null!=params.isQty and ''!=params.isQty" >    
	           AND  od.qty  !=0 
		      </if>  
		      <if test="null!=params.noQty and ''!=params.noQty" >    
		        AND  od.qty = 0 
		      </if> 
		       <if test="null!=params.isSaleAmount and ''!=params.isSaleAmount" >    
		        AND  od.amount !=0 
		      </if>  
		      <if test="null!=params.noSaleAmount and ''!=params.noSaleAmount" >    
		        AND  od.amount = 0 
		      </if> 
	     </if>
  	</sql>
	
	<sql id="returnDtlCondition" >
	    <if test="null!=params" >
		    <if test="null!=params.itemSql and ''!=params.itemSql" >
				AND red.item_no IN (SELECT item_no FROM item WHERE 1=1 AND ${params.itemSql})
			</if>
	    	 <if test="null!=params.companyNo and ''!=params.companyNo" >
	          	 AND rem.company_no in ${params.companyNo}
	      	 </if>
	    	 <if test="null!=params.shopNoLists and ''!=params.shopNoLists" >
	         	and rem.shop_no in ${params.shopNoLists} 
	          </if>
	    	 <if test="params.orderNo != null and params.orderNo!=''">  
	     		and rem.business_no = #{params.orderNo}
	    	</if>
	     	<if test="params.startOutDate != null and params.startOutDate!=''">  
	     		and rem.out_date  &gt;= #{params.startOutDate, jdbcType=DATE}
	     	</if>
	     	<if test="params.endOutDate != null and params.endOutDate!=''">  
	     		and rem.out_date  &lt;= #{params.endOutDate, jdbcType=DATE}
	     	</if>
			<if test="params.shopNoList!=null and params.shopNoList!=''" >
			   <foreach collection="params.shopNoList" item="shopNo" open="AND rem.shop_no in(" separator="," close=")">
			      '${shopNo}'
			    </foreach>
		  	</if>
			<if test="null!=params.businessTypeList and ''!=params.businessTypeList" >
			   <foreach collection="params.businessTypeList" item="businessType" open="AND rem.business_type in(" separator="," close=")">
			      '${businessType}'
			    </foreach>
		  	</if>
		   	<if test="params.statusList!=null and params.statusList!=''">
	          <foreach collection="params.statusList" item="status" open="AND rem.status in(" separator="," close=")">
	              '${status}'
	          </foreach>
	       	</if>
	      	<if test="null!=params.orderNoListForFAS and ''!=params.orderNoListForFAS" >
			   <foreach collection="params.orderNoListForFAS" item="orderNo" open="AND red.business_no in(" separator="," close=")">
			      '${orderNo}'
			    </foreach>
		  	</if>
		  	<if test="null!=params.multiBrandNo and ''!=params.multiBrandNo" >
	          and red.brand_no in ${params.multiBrandNo} 
	          </if>
	           <if test="null!=params.balanceNo and ''!=params.balanceNo" >  
	            AND rem.balance_no = #{params.balanceNo}
	         </if>
	         <if test="params.categoryNo != null and params.categoryNo!=''">  
	     		AND LEFT(red.category_no,2) in ${params.categoryNo}
	        </if>
	        
	        <if test="null!=params.orderBillType and ''!=params.orderBillType and -1 != params.orderBillType" >
	          	and rem.business_mode = #{params.orderBillType} 
	      	</if>
	      	<if test="null!=params.isQty and ''!=params.isQty" >    
	           AND  red.qty  !=0 
		      </if>  
		      <if test="null!=params.noQty and ''!=params.noQty" >    
		        AND  red.qty = 0 
		      </if> 
		       <if test="null!=params.isSaleAmount and ''!=params.isSaleAmount" >    
		        AND  red.amount !=0 
		      </if>  
		      <if test="null!=params.noSaleAmount and ''!=params.noSaleAmount" >    
		        AND  red.amount = 0 
		      </if> 
	    </if>
  </sql>
  
  <select id="findOrderMainInfo" resultMap="BaseResultMap" parameterType="map">
  	SELECT
		*
	FROM
		order_main om
	WHERE
		1 = 1
	-- AND @om.company_no
	<if test="null!=params" >
		<if test="params.orderNoList!=null and params.orderNoList!=''" >
		    <foreach collection="params.orderNoList" item="orderNo" open="AND om.order_no in(" separator="," close=")">
		      '${orderNo}'
		    </foreach>
	  	</if>
  	</if>
  </select>
  
  <select id="findList" resultType="java.util.Map" parameterType="java.util.Map">
  	SELECT
		PP.shop_no,PP.shop_name,PP.company_no,PP.company_name,PP.out_date,
		${params.ppColumns},IFNULL(PP.totalAmount,0) totalAmount,
		${params.ssColumns},IFNULL(SS.amount,0) amount,${params.ddColumns},
		IFNULL(SS.return_amount,0) returnAmount,
		IFNULL(SS.actual_return_amount,0) actualReturnAmount,
		IFNULL(SS.amount,0) + IFNULL(SS.return_amount,0) + IFNULL(SS.actual_return_amount,0) - IFNULL(PP.totalAmount,0) diffAmount,
		IFNULL(SS.poundage,0) poundage,
		IFNULL(SS.amount,0) + IFNULL(SS.actual_return_amount,0) - IFNULL(SS.poundage,0) sum
	FROM
		(
			SELECT
				PT.shop_no,PT.shop_name,PT.company_no,PT.company_name,PT.out_date,
				${params.ptColumns},SUM(PT.amount) totalAmount
			FROM
				(
					SELECT DISTINCT
						om.id,om.shop_no,om.shop_name,om.company_no,om.company_name,
						om.`out_date`,om.order_no,op.amount,op.pay_code,${params.pt01Columns}
					FROM
						order_main om
					LEFT JOIN order_payway op ON om.`order_no` = op.`order_no`
					LEFT JOIN order_dtl dtl ON om.order_no = dtl.order_no
					WHERE 1 = 1 <include refid="orderMain_Condition"/>
					GROUP BY om.order_no,op.pay_code
					UNION ALL
					SELECT DISTINCT
						rem.id,rem.shop_no,rem.shop_name,rem.company_no,rem.company_name,
						rem.`out_date`,rem.business_no,
						op.amount,op.pay_code,${params.pt02Columns}
					FROM
						return_exchange_main rem
					LEFT JOIN order_payway op ON rem.`business_no` = op.`order_no`
					LEFT JOIN return_exchange_dtl dtl ON rem.`business_no` = dtl.`business_no`
					WHERE 1 = 1 <include refid="orderReturn_Condition"/>
					GROUP BY rem.`business_no`,op.pay_code
				) PT
			GROUP BY PT.shop_no,PT.company_no,PT.out_date
	) PP LEFT JOIN (
		SELECT
			ST.shop_no,ST.out_date,${params.stColumns},
			SUM(return_amount) return_amount,
			SUM(actual_return_amount) actual_return_amount,
			SUM(ST.TOTAL_AMOUNT) amount,
			SUM(ST.poundage) poundage,
			SUM(ST.TOTAL_AMOUNT)-SUM(ST.poundage) sum
		FROM
			(
				SELECT DISTINCT
					om.id,om.`shop_no`,om.`out_date`,om.order_no,
					op.amount,op.pay_code,
					IF((TRIM(op.pay_code)&lt;&gt;'01' AND bs. STATUS = 1),op.amount,0) total_amount,
					0 return_amount,0 actual_return_amount,
					IF(TRIM(op.poundage) is not null AND bs. STATUS = 1,op.poundage,IF((TRIM(op.pay_code)='04' AND bs. STATUS = 1),op.amount*ssta.credit_card_rate,0)) poundage,
					${params.st01Columns}
				FROM
					order_main om
				LEFT JOIN order_payway op ON om.order_no = op.order_no
				LEFT JOIN self_shop_terminal_account ssta ON om.shop_no = ssta.shop_no
				LEFT JOIN bill_status bs ON op.order_no = bs.bill_no AND op.pay_name = bs.pay_name
				WHERE 1 = 1 <include refid="orderMain_Condition"/>
				GROUP BY om.order_no,op.pay_code
				UNION ALL
				SELECT DISTINCT
					rem.id,rem.`shop_no`,rem.`out_date`,rem.business_no,
					IF(TRIM(op.pay_code)='04',0,op.amount) amount,op.pay_code,
					IF((TRIM(op.pay_code)='04' AND bs. STATUS = 1 AND (rem.old_out_date IS NULL OR rem.old_out_date &lt;&gt; rem.out_date) AND rem.amount &gt; 0) OR (TRIM(op.pay_code)='04' AND rem.old_out_date = rem.out_date AND bs. STATUS = 1), op.amount, IF(TRIM(op.pay_code) NOT IN ('01','04')  AND bs. STATUS = 1,op.amount,0)) total_amount,
					IF((rem.old_out_date IS NULL OR rem.old_out_date &lt;&gt; rem.out_date) AND TRIM(op.pay_code)='04' AND op.amount &lt; 0 ,IF(bs.`status` = 1,0,op.amount),0) return_amount,
					IF((rem.old_out_date IS NULL OR rem.old_out_date &lt;&gt; rem.out_date) AND TRIM(op.pay_code)='04' AND op.amount &lt; 0 ,IF(bs.`status` = 1,op.amount,0),0) actual_return_amount,
					ABS(IF(TRIM(op.poundage) is not null AND bs. STATUS = 1,op.poundage,IF((TRIM(op.pay_code)='04' AND bs. STATUS = 1),op.amount*ssta.credit_card_rate,0))) poundage,
					${params.st02Columns}
				FROM
					return_exchange_main rem
				LEFT JOIN order_payway op ON rem.`business_no` = op.`order_no`
				LEFT JOIN self_shop_terminal_account ssta ON rem.shop_no = ssta.shop_no
				LEFT JOIN bill_status bs ON op.order_no = bs.bill_no AND op.pay_name = bs.pay_name
				WHERE 1 = 1 <include refid="orderReturn_Condition"/>
				GROUP BY rem.`business_no`,op.pay_code
			) ST
		GROUP BY ST.shop_no, ST.out_date
	) SS ON PP.shop_no = SS.shop_no AND PP.out_date = SS.out_date
	WHERE 1=1
	<if test="null!=params" >
	   	<if test="params.retailType != null and params.retailType!=''">  
		   AND PP.shop_no in (SELECT shop_no FROM shop WHERE retail_type = #{params.retailType})
		</if>
	</if>
	GROUP BY PP.shop_no,PP.company_no,PP.out_date
	ORDER BY PP.shop_no,PP.out_date DESC
  </select>
  
  <select id="findDayReportForBrandList" resultType="java.util.Map" parameterType="java.util.Map">
  	SELECT 
		PP.shop_no,PP.shop_name,PP.company_no,PP.company_name,
		PP.brand_unit_no,PP.brand_unit_name,PP.out_date,
   		${params.ppColumns},IFNULL(PP.totalAmount,0) totalAmount,
   		${params.brandColumns}, IFNULL(SS.amount,0) amount,
		IFNULL(SS.return_amount,0) returnAmount,
		IFNULL(SS.actual_return_amount,0) actualReturnAmount,
		IFNULL(SS.amount,0) + IFNULL(SS.return_amount,0) + IFNULL(SS.actual_return_amount,0) - IFNULL(PP.totalAmount,0) diffAmount,
		IFNULL(SS.poundage,0) poundage,
		IFNULL(SS.amount,0) + IFNULL(SS.actual_return_amount,0) - IFNULL(SS.poundage,0) sum
	FROM (
		SELECT  
			PT.shop_no,PT.shop_name, PT.company_no,PT.company_name,
			PT.brand_no,PT.brand_name, PT.brand_unit_no,PT.brand_unit_name,PT.out_date,
			${params.brandPPColumns}, SUM(${params.brandAPColumns}) totalAmount
		FROM (
			SELECT 
				a.shop_no,a.shop_name,a.company_no,a.company_name,
				dtl.brand_no,dtl.brand_name, dtl.brand_unit_no,dtl.brand_unit_name,
				a.out_date,a.order_no,a.pay_code,a.all_amount,a.op_amount,
   				${params.brandAAColumns}
			FROM (
				SELECT
					om.id,om.shop_no,om.shop_name,om.company_no,om.company_name,
					om.out_date,om.order_no,op.pay_code,om.all_amount,
					IFNULL(SUM(op.amount), 0) op_amount,${params.brandAA01Columns}
				FROM
					order_main om
				LEFT JOIN order_payway op ON om.`order_no` = op.`order_no`
				WHERE 1 = 1 <include refid="orderMain_Condition"/>
				GROUP BY om.order_no,op.pay_code
			) a
			LEFT JOIN order_dtl dtl ON a.order_no = dtl.order_no
			WHERE 1=1
			AND dtl.amount != 0
			UNION ALL
			SELECT 
				a.shop_no,a.shop_name,a.company_no,a.company_name,
				dtl.brand_no,dtl.brand_name,dtl.brand_unit_no,dtl.brand_unit_name,
				a.out_date,a.business_no,a.pay_code,a.all_amount,a.op_amount,
   				${params.brandAAColumns}
			FROM (
				SELECT
					rem.id,rem.shop_no,rem.shop_name,rem.company_no,rem.company_name,
					rem.out_date,rem.business_no,op.pay_code,rem.all_amount,
					IFNULL(SUM(op.amount),0) op_amount,${params.brandAA02Columns}
				FROM
					return_exchange_main rem
				LEFT JOIN order_payway op ON rem.business_no = op.`order_no`
				WHERE 1 = 1 <include refid="orderReturn_Condition"/>
				GROUP BY rem.business_no,op.pay_code
			) a
			LEFT JOIN return_exchange_dtl dtl ON a.business_no = dtl.business_no
			WHERE 1=1
			AND dtl.amount != 0
		) PT
		GROUP BY PT.shop_no,PT.out_date,PT.brand_unit_no
	) PP LEFT JOIN (
		SELECT
			ST.shop_no,ST.out_date,${params.stColumns},
			SUM(return_amount) return_amount,
			SUM(actual_return_amount) actual_return_amount,
			SUM(ST.TOTAL_AMOUNT) amount,
			SUM(ST.poundage) poundage,
			SUM(ST.TOTAL_AMOUNT)-SUM(ST.poundage) sum
		FROM
			(
				SELECT DISTINCT
					om.id,om.`shop_no`,om.`out_date`,om.order_no,
					op.amount,op.pay_code,
					IF((TRIM(op.pay_code)&lt;&gt;'01' AND bs. STATUS = 1),op.amount,0) total_amount,
					0 return_amount,0 actual_return_amount,
					IF(TRIM(op.poundage) is not null AND bs. STATUS = 1,op.poundage,IF((TRIM(op.pay_code)='04' AND bs. STATUS = 1),op.amount*ssta.credit_card_rate,0)) poundage,
					${params.st01Columns}
				FROM
					order_main om
				LEFT JOIN order_payway op ON om.order_no = op.order_no
				LEFT JOIN self_shop_terminal_account ssta ON om.shop_no = ssta.shop_no
				LEFT JOIN bill_status bs ON op.order_no = bs.bill_no AND op.pay_name = bs.pay_name
				WHERE 1 = 1 <include refid="orderMain_Condition"/>
				GROUP BY om.order_no,op.pay_code
				UNION ALL
				SELECT DISTINCT
					rem.id,rem.`shop_no`,rem.`out_date`,rem.business_no,
					IF(TRIM(op.pay_code)='04',0,op.amount) amount,op.pay_code,
					IF((TRIM(op.pay_code)='04' AND bs. STATUS = 1 AND (rem.old_out_date IS NULL OR rem.old_out_date &lt;&gt; rem.out_date) AND rem.amount &gt; 0) OR (TRIM(op.pay_code)='04' AND rem.old_out_date = rem.out_date AND bs. STATUS = 1), op.amount, IF(TRIM(op.pay_code) NOT IN ('01','04')  AND bs. STATUS = 1,op.amount,0)) total_amount,
					IF((rem.old_out_date IS NULL OR rem.old_out_date &lt;&gt; rem.out_date) AND TRIM(op.pay_code)='04' AND op.amount &lt; 0 ,IF(bs.`status` = 1,0,op.amount),0) return_amount,
					IF((rem.old_out_date IS NULL OR rem.old_out_date &lt;&gt; rem.out_date) AND TRIM(op.pay_code)='04' AND op.amount &lt; 0 ,IF(bs.`status` = 1,op.amount,0),0) actual_return_amount,
					ABS(IF(TRIM(op.poundage) is not null AND bs. STATUS = 1,op.poundage,IF((TRIM(op.pay_code)='04' AND bs. STATUS = 1),op.amount*ssta.credit_card_rate,0))) poundage,
					${params.st02Columns}
				FROM
					return_exchange_main rem
				LEFT JOIN order_payway op ON rem.`business_no` = op.`order_no`
				LEFT JOIN self_shop_terminal_account ssta ON rem.shop_no = ssta.shop_no
				LEFT JOIN bill_status bs ON op.order_no = bs.bill_no AND op.pay_name = bs.pay_name
				WHERE 1 = 1 <include refid="orderReturn_Condition"/>
				GROUP BY rem.`business_no`,op.pay_code
			) ST
		GROUP BY ST.shop_no, ST.out_date
	) SS ON PP.shop_no = SS.shop_no AND PP.out_date = SS.out_date
	WHERE 1=1
	<if test="null!=params" >
		<if test="null!=params.brandNoLists and ''!=params.brandNoLists" >
	       AND PP.brand_no in ${params.brandNoLists} 
	   	</if>
	   	<if test="params.retailType != null and params.retailType!=''">  
		   AND PP.shop_no in (SELECT shop_no FROM shop WHERE retail_type = #{params.retailType})
		</if>
	</if>
	ORDER BY PP.shop_no,PP.out_date DESC,PP.brand_unit_no
  </select>
</mapper>