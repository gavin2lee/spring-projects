<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wonhigh.retail.fas.dal.database.ItemCostMapper" >
  <resultMap id="BaseResultMap" type="cn.wonhigh.retail.fas.common.model.ItemCost" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="company_no" property="companyNo" jdbcType="CHAR" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="item_no" property="itemNo" jdbcType="CHAR" />
    <result column="item_code" property="itemCode" jdbcType="VARCHAR" />
    <result column="item_name" property="itemName" jdbcType="VARCHAR" />
    <result column="style_no" property="styleNo" jdbcType="CHAR" />
    <result column="brand_no" property="brandNo" jdbcType="CHAR" />
    <result column="store_no" property="storeNo" jdbcType="CHAR" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="lot" property="lot" jdbcType="VARCHAR" />
    <result column="cost_method" property="costMethod" jdbcType="VARCHAR" />
    <result column="unit_cost" property="unitCost" jdbcType="DECIMAL" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
    <result column="year" property="year" jdbcType="CHAR" />
    <result column="month" property="month" jdbcType="CHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="sharding_flag" property="shardingFlag" jdbcType="CHAR" />
    
    <result column="region_cost" property="regionCost" jdbcType="DECIMAL" />
    <result column="brand_name" property="brandName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, company_no, company_name, item_no, item_code, item_name, brand_no, store_no, location, 
    lot, cost_method, unit_cost, unit, year, month, create_user, create_time, update_user, 
    update_time, sharding_flag,
    (select name from brand where item_cost.brand_no = brand.brand_no) brand_name,
    (select region_cost from region_cost_maintain r where r.item_no = item_cost.item_no and r.zone_no = LEFT(item_cost.company_no,1)
    	AND r.effective_time &lt;= NOW()
		ORDER BY r.effective_time DESC LIMIT 0,1
    ) region_cost
  </sql>
  <sql id="condition" >
  -- AND @brand_no
    <if test="null!=params" >
      <if test="null!=params.queryCondition and ''!=params.queryCondition" >
        ${params.queryCondition}
      </if>
      <if test="null != params.itemNo and '' != params.itemNo">
      	and item_no = #{params.itemNo}
      </if>
      <if test="null != params.itemNos and '' != params.itemNos">
	    <foreach collection="params.itemNos" item="itemNo" separator="," open="AND item_no in (" close=")" index=""> 
			#{itemNo}  
		</foreach>  
	  </if>
      <if test="null != params.companyNo and '' != params.companyNo">
      	and company_no = #{params.companyNo}
      </if>
      <if test="null != params.brandNo and '' != params.brandNo">
      	and brand_no = #{params.brandNo}
      </if>
      <if test="null != params.brandNos and '' != params.brandNos">
		   AND brand_no in ${params.brandNos}
	  </if>
      <if test="null != params.year and '' != params.year">
      	and year = #{params.year}
      </if>
      <if test="null != params.month and '' != params.month">
      	and month = #{params.month}
      </if>
      <if test="null != params.saleDate and '' != params.saleDate">
      	and year = YEAR(#{params.saleDate}) and month = MONTH(#{params.saleDate})
      </if>
      <if test="null!=params.createTimeStart and ''!=params.createTimeStart">
       	   AND create_time &gt;= '${params.createTimeStart} 00:00:00'
      </if>
      <if test="null!=params.createTimeEnd and ''!=params.createTimeEnd">
       	   AND create_time &lt;= '${params.createTimeEnd} 23:59:59'
      </if>
      <if test="null != params.shardingFlag and '' != params.shardingFlag">
      	AND sharding_flag = #{params.shardingFlag}
      </if>
    </if>
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    SELECT 
    <include refid="Base_Column_List" />
    FROM item_cost
    WHERE id = #{id,jdbcType=CHAR}
  </select>
  <select id="selectCount" resultType="java.lang.Integer" >
    SELECT COUNT(1) as s FROM item_cost WHERE 1=1 
    <include refid="condition" />
  </select>
  <select id="selectByPage" resultMap="BaseResultMap" parameterType="map" >
    SELECT 
    <include refid="Base_Column_List" />
     FROM item_cost WHERE 1=1 
    <include refid="condition" />
    <if test="orderByField != null and ''!=orderByField" >
      ORDER BY ${orderByField}
      <if test="orderByField" >
        ${orderBy}
      </if>
    </if>
    <if test="orderByField == null || ''==orderByField">
		ORDER BY create_time DESC
	</if>
     LIMIT #{page.startRowNum} ,#{page.pageSize} 
  </select>
  
  <select id="selectByParams" resultMap="BaseResultMap" parameterType="map" >
    SELECT 
    <include refid="Base_Column_List" />
     FROM item_cost WHERE 1=1 
    <include refid="condition" />
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    DELETE FROM item_cost
    WHERE id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByPrimarayKeyForModel" parameterType="cn.wonhigh.retail.fas.common.model.ItemCost" >
    DELETE FROM item_cost
    WHERE id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="cn.wonhigh.retail.fas.common.model.ItemCost" >
    INSERT INTO item_cost (id, company_no, company_name, 
      item_no, item_code, item_name, 
      brand_no, store_no, location, 
      lot, cost_method, unit_cost, 
      unit, year, month, create_user, 
      create_time, update_user, update_time,sharding_flag
      )
    VALUES (#{id,jdbcType=CHAR}, #{companyNo,jdbcType=CHAR}, #{companyName,jdbcType=VARCHAR}, 
      #{itemNo,jdbcType=CHAR}, #{itemCode,jdbcType=VARCHAR}, #{itemName,jdbcType=VARCHAR}, 
      #{brandNo,jdbcType=CHAR}, #{storeNo,jdbcType=CHAR}, #{location,jdbcType=VARCHAR}, 
      #{lot,jdbcType=VARCHAR}, #{costMethod,jdbcType=VARCHAR}, #{unitCost,jdbcType=DECIMAL}, 
      #{unit,jdbcType=VARCHAR}, #{year,jdbcType=CHAR}, #{month,jdbcType=CHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR},
      #{updateTime,jdbcType=TIMESTAMP}, #{shardingFlag,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.wonhigh.retail.fas.common.model.ItemCost" >
    INSERT INTO item_cost
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companyNo != null" >
        company_no,
      </if>
      <if test="companyName != null" >
        company_name,
      </if>
      <if test="itemNo != null" >
        item_no,
      </if>
      <if test="itemCode != null" >
        item_code,
      </if>
      <if test="itemName != null" >
        item_name,
      </if>
      <if test="brandNo != null" >
        brand_no,
      </if>
      <if test="storeNo != null" >
        store_no,
      </if>
      <if test="location != null" >
        location,
      </if>
      <if test="lot != null" >
        lot,
      </if>
      <if test="costMethod != null" >
        cost_method,
      </if>
      <if test="unitCost != null" >
        unit_cost,
      </if>
      <if test="unit != null" >
        unit,
      </if>
      <if test="year != null" >
        year,
      </if>
      <if test="month != null" >
        month,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="shardingFlag != null" >
        sharding_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="companyNo != null" >
        #{companyNo,jdbcType=CHAR},
      </if>
      <if test="companyName != null" >
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="itemNo != null" >
        #{itemNo,jdbcType=CHAR},
      </if>
      <if test="itemCode != null" >
        #{itemCode,jdbcType=VARCHAR},
      </if>
      <if test="itemName != null" >
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="brandNo != null" >
        #{brandNo,jdbcType=CHAR},
      </if>
      <if test="storeNo != null" >
        #{storeNo,jdbcType=CHAR},
      </if>
      <if test="location != null" >
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="lot != null" >
        #{lot,jdbcType=VARCHAR},
      </if>
      <if test="costMethod != null" >
        #{costMethod,jdbcType=VARCHAR},
      </if>
      <if test="unitCost != null" >
        #{unitCost,jdbcType=DECIMAL},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="year != null" >
        #{year,jdbcType=CHAR},
      </if>
      <if test="month != null" >
        #{month,jdbcType=CHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shardingFlag != null" >
        #{shardingFlag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.wonhigh.retail.fas.common.model.ItemCost" >
    UPDATE item_cost
    <set >
      <if test="companyNo != null" >
        company_no = #{companyNo,jdbcType=CHAR},
      </if>
      <if test="companyName != null" >
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="itemNo != null" >
        item_no = #{itemNo,jdbcType=CHAR},
      </if>
      <if test="itemCode != null" >
        item_code = #{itemCode,jdbcType=VARCHAR},
      </if>
      <if test="itemName != null" >
        item_name = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="brandNo != null" >
        brand_no = #{brandNo,jdbcType=CHAR},
      </if>
      <if test="storeNo != null" >
        store_no = #{storeNo,jdbcType=CHAR},
      </if>
      <if test="location != null" >
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="lot != null" >
        lot = #{lot,jdbcType=VARCHAR},
      </if>
      <if test="costMethod != null" >
        cost_method = #{costMethod,jdbcType=VARCHAR},
      </if>
      <if test="unitCost != null" >
        unit_cost = #{unitCost,jdbcType=DECIMAL},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="year != null" >
        year = #{year,jdbcType=CHAR},
      </if>
      <if test="month != null" >
        month = #{month,jdbcType=CHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    WHERE id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.wonhigh.retail.fas.common.model.ItemCost" >
    UPDATE item_cost
    SET company_no = #{companyNo,jdbcType=CHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      item_no = #{itemNo,jdbcType=CHAR},
      item_code = #{itemCode,jdbcType=VARCHAR},
      item_name = #{itemName,jdbcType=VARCHAR},
      brand_no = #{brandNo,jdbcType=CHAR},
      store_no = #{storeNo,jdbcType=CHAR},
      location = #{location,jdbcType=VARCHAR},
      lot = #{lot,jdbcType=VARCHAR},
      cost_method = #{costMethod,jdbcType=VARCHAR},
      unit_cost = #{unitCost,jdbcType=DECIMAL},
      unit = #{unit,jdbcType=VARCHAR},
      year = #{year,jdbcType=CHAR},
      month = #{month,jdbcType=CHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    WHERE id = #{id,jdbcType=CHAR}
  </update>
  
  <select id="getItemCostUnmatchRegionPriceCount" resultType="java.lang.Integer" >
  	SELECT 
	  COUNT(1) 
	FROM
	  (
	  	SELECT
			A.*, B.region_cost
		FROM
			(
				SELECT * FROM item_cost
				WHERE 1 = 1
				<include refid="condition" />
			) A
		LEFT JOIN
		(
			SELECT C.item_no,C.zone_no,C.effective_time,C.region_cost from region_cost_maintain C 
			INNER JOIN
			(select rcm.item_no,rcm.zone_no,max(rcm.effective_time) effective_time from region_cost_maintain rcm 
			 where rcm.effective_time &lt;= #{params.effectiveTime} and rcm.zone_no = #{params.zoneNo} group by rcm.item_no,rcm.zone_no
			 ) D ON C.item_no=D.item_no and C.zone_no=D.zone_no and C.effective_time=D.effective_time
		) B on A.item_no = B.item_no
		WHERE A.unit_cost &lt;&gt; B.region_cost
		<if test="null!=params.zeroAmount and ''!=params.zeroAmount and 'true'==params.zeroAmount">
			 OR A.unit_cost = 0 
		</if>
	  ) T 
  </select>
  
  <select id="getItemCostUnmatchRegionPriceByPage" resultMap="BaseResultMap" parameterType="map" >
  	SELECT
		A.*,
		(select name from brand where brand_no = A.brand_no) brand_name,
		B.region_cost
	FROM
		(
			SELECT * FROM item_cost
			WHERE 1 = 1
			<include refid="condition" />
		) A
	LEFT JOIN
	(
		SELECT C.item_no,C.zone_no,C.effective_time,C.region_cost from region_cost_maintain C 
		INNER JOIN
		(select rcm.item_no,rcm.zone_no,max(rcm.effective_time) effective_time from region_cost_maintain rcm 
		 where rcm.effective_time &lt;= #{params.effectiveTime} and rcm.zone_no = #{params.zoneNo} group by rcm.item_no,rcm.zone_no
		 ) D ON C.item_no=D.item_no and C.zone_no=D.zone_no and C.effective_time=D.effective_time
	) B on A.item_no = B.item_no
	WHERE A.unit_cost &lt;&gt; B.region_cost
	<if test="null!=params.zeroAmount and ''!=params.zeroAmount and 'true'==params.zeroAmount">
		 OR A.unit_cost = 0 
	</if>
    <if test="orderByField != null and ''!=orderByField" >
      ORDER BY ${orderByField}
      <if test="orderByField" >
        ${orderBy}
      </if>
    </if>
     LIMIT #{page.startRowNum} ,#{page.pageSize} 
  </select>
  
  <delete id="deleteCompanyMonthCost" parameterType="map" >
    DELETE FROM item_cost 
    	WHERE lot IS NULL AND company_no = #{params.companyNo} AND year = #{params.currentYear} AND month= #{params.currentMonth}
    		<if test="null != params.itemNos and '' != params.itemNos">
				   AND item_no in 
				   <foreach collection="params.itemNos" item="itemNo" separator="," open="(" close=")" index=""> 
						#{itemNo}  
				   </foreach>  
			</if>
			<if test="null != params.brandNos and '' != params.brandNos">
				   AND brand_no in 
				   <foreach collection="params.brandNos" item="brandNo" separator="," open="(" close=")" index=""> 
						#{brandNo}  
				   </foreach>  
			</if>
  </delete>
  
  <select id="getItemCost" resultMap="BaseResultMap" parameterType="map" >
	SELECT
		id, company_no, company_name, item_no, item_code, item_name, brand_no, store_no, location, 
		lot, cost_method, unit_cost, unit, `year`, `month`, create_user, create_time, update_user, update_time
	FROM item_cost
	WHERE 1=1
	<if test="null!=params" >
		<if test="null!=params.queryCondition and ''!=params.queryCondition" >
       		${params.queryCondition}
     	 </if>
		<if test="null != params.companyNo and '' != params.companyNo">
			AND company_no = #{params.companyNo, jdbcType=CHAR}
		</if>
		<if test="null != params.itemNo and '' != params.itemNo">
			AND item_no = #{params.itemNo, jdbcType=CHAR}
		</if>
		<if test="null != params.date and '' != params.date">
			AND `year` = DATE_FORMAT(#{params.date,jdbcType=DATE}, '%Y')
			AND `month` = DATE_FORMAT(#{params.date,jdbcType=DATE}, '%c')
		</if>
		<if test="null != params.itemCode and '' != params.itemCode">
			AND item_code = #{params.itemCode, jdbcType=CHAR}
		</if>
		<if test="null != params.brandNo and '' != params.brandNo">
			AND brand_no = #{params.brandNo, jdbcType=CHAR}
		</if>
	</if>
  </select>
  
  <select id="findPosOrderRegionCostId" parameterType="map" resultType="java.lang.String">
    /*sharding_flag*/
  	SELECT od.id FROM order_main om , order_dtl od  
	WHERE om.`order_no` = od.`order_no` 
	  AND od.`region_cost` &lt;&gt; (SELECT 
	    c.`region_cost` 
	  FROM region_cost_maintain c 
	  	WHERE om.out_date &gt;= c.`effective_time` 
	    AND IF(
	      ISNULL(
	        (SELECT PRICE_ZONE FROM `financial_account` F 
	        	WHERE om.`company_no` = F.COMPANY_NO)
	      ),
	      (SELECT ZONE_NO FROM COMPANY CO 
	      	WHERE om.`company_no` = CO.COMPANY_NO),
	      (SELECT PRICE_ZONE FROM `financial_account` F 
	      	WHERE om.`company_no` = F.COMPANY_NO)
	    ) = C.ZONE_NO 
	    AND OD.ITEM_NO = C.ITEM_NO 
	  ORDER BY c.`effective_time` DESC 
	  LIMIT 0, 1)
	AND om.company_no = #{params.companyNo} 
	AND om.out_date BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
 	<if test="null != params.multiBrandUnitNo and '' != params.multiBrandUnitNo">
 		AND od.brand_unit_no IN ${params.multiBrandUnitNo}
 	</if>
  </select>
  
  <update id="updatePosOrderRegionCost" parameterType="map">
 	<include refid="update_flag" />
  	UPDATE order_main om , order_dtl od
	   SET od.`region_cost`=
	  (SELECT c.`region_cost` 
	  	FROM region_cost_maintain c 
	  		WHERE om.out_date &gt;= c.`effective_time` 
	    AND IF(
	      ISNULL(
	        (SELECT PRICE_ZONE FROM `financial_account` F 
	        	WHERE om.`company_no` = F.COMPANY_NO)
	      ),
	      (SELECT ZONE_NO FROM COMPANY CO 
	      	WHERE om.`company_no` = CO.COMPANY_NO),
	      (SELECT PRICE_ZONE FROM `financial_account` F 
	      	WHERE om.`company_no` = F.COMPANY_NO)
	    ) = C.ZONE_NO 
	    AND OD.ITEM_NO = C.ITEM_NO 
	  ORDER BY c.`effective_time` DESC 
	  LIMIT 0, 1)   
	WHERE om.`order_no` = od.`order_no`
	<foreach collection="params.ids" item="id" open="AND od.id in(" separator="," close=")">
      '${id}'
    </foreach>
  </update>
  
  <select id="findPosReturnExchangeRegionCostId" parameterType="map" resultType="java.lang.String">
  	SELECT od.id FROM return_exchange_main om , return_exchange_dtl od 
		WHERE om.`business_no` = od.`business_no` 
		  AND od.`region_cost` &lt;&gt; (SELECT 
		    c.`region_cost` 
		  FROM region_cost_maintain c 
		  WHERE om.out_date &gt;= c.`effective_time` 
		    AND IF(
		      ISNULL(
		        (SELECT PRICE_ZONE FROM `financial_account` F 
		        	WHERE om.`company_no` = F.COMPANY_NO)
		      ),
		      (SELECT ZONE_NO FROM COMPANY CO 
		      	WHERE om.`company_no` = CO.COMPANY_NO),
		      (SELECT PRICE_ZONE FROM `financial_account` F 
		      	WHERE om.`company_no` = F.COMPANY_NO)
		    ) = C.ZONE_NO 
		    AND OD.ITEM_NO = C.ITEM_NO 
		  ORDER BY c.`effective_time` DESC 
		  LIMIT 0, 1) 
	 	AND om.COMPANY_NO = #{params.companyNo}
		AND om.out_date BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
  	 	<if test="null != params.multiBrandUnitNo and '' != params.multiBrandUnitNo">
	 		AND od.brand_unit_no IN ${params.multiBrandUnitNo}
	 	</if>
  </select>
  <sql id="update_flag">
     <if test="null !=params.shardingFlag">
     /*#mycat:sql=select 1 from bill_shop_balance where sharding_flag='${params.shardingFlag}' */
    </if>
    <if test="null ==params.shardingFlag">
      /*sharding_flag*/
    </if>
  </sql>
  <update id="updatePosReturnExchangeRegionCost" parameterType="map">
  	<include refid="update_flag" />

  	UPDATE return_exchange_main om , return_exchange_dtl od
	   SET od.`region_cost`=
	  (SELECT c.`region_cost` FROM region_cost_maintain c 
	  	WHERE om.out_date &gt;= c.`effective_time` 
	    AND IF(
	      ISNULL(
	        (SELECT PRICE_ZONE FROM `financial_account` F 
	        	WHERE om.`company_no` = F.COMPANY_NO)
	      ),
	      (SELECT ZONE_NO FROM COMPANY CO 
	      	WHERE om.`company_no` = CO.COMPANY_NO),
	      (SELECT PRICE_ZONE FROM `financial_account` F 
	      	WHERE om.`company_no` = F.COMPANY_NO)
	    ) = C.ZONE_NO 
	    AND OD.ITEM_NO = C.ITEM_NO 
	  ORDER BY c.`effective_time` DESC 
	  LIMIT 0, 1)   
	WHERE om.`business_no` = od.`business_no`
	<foreach collection="params.ids" item="id" open="AND od.id in(" separator="," close=")">
      '${id}'
    </foreach>
  </update>
  
  <update id="updatePosOrderRegionCostSchedule" parameterType="map">
  <include refid="update_flag" />
  	UPDATE order_main om, order_dtl od
	   SET od.`region_cost`=
	  (SELECT c.`region_cost` 
	  	FROM region_cost_maintain c 
	  		WHERE om.out_date &gt;= c.`effective_time` 
	    AND IF(
	      ISNULL(
	        (SELECT PRICE_ZONE FROM `financial_account` F 
	        	WHERE om.`company_no` = F.COMPANY_NO)
	      ),
	      (SELECT ZONE_NO FROM COMPANY CO 
	      	WHERE om.`company_no` = CO.COMPANY_NO),
	      (SELECT PRICE_ZONE FROM `financial_account` F 
	      	WHERE om.`company_no` = F.COMPANY_NO)
	    ) = C.ZONE_NO 
	    AND OD.ITEM_NO = C.ITEM_NO 
	  ORDER BY c.`effective_time` DESC 
	  LIMIT 0, 1)   
	WHERE om.`order_no` = od.`order_no` 
	  AND od.`region_cost` &lt;&gt; (SELECT 
	    c.`region_cost` 
	  FROM region_cost_maintain c 
	  	WHERE om.out_date &gt;= c.`effective_time` 
	    AND IF(
	      ISNULL(
	        (SELECT PRICE_ZONE FROM `financial_account` F 
	        	WHERE om.`company_no` = F.COMPANY_NO)
	      ),
	      (SELECT ZONE_NO FROM COMPANY CO 
	      	WHERE om.`company_no` = CO.COMPANY_NO),
	      (SELECT PRICE_ZONE FROM `financial_account` F 
	      	WHERE om.`company_no` = F.COMPANY_NO)
	    ) = C.ZONE_NO 
	    AND OD.ITEM_NO = C.ITEM_NO 
	  ORDER BY c.`effective_time` DESC 
	  LIMIT 0, 1)
	AND om.COMPANY_NO = #{params.companyNo} AND om.sharding_flag=#{params.shardingFlag} AND od.sharding_flag=#{params.shardingFlag}
	AND om.out_date BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
  </update>
  
  <update id="updatePosReturnExchangeRegionCostSchedule" parameterType="map">
  <include refid="update_flag" />
  	UPDATE return_exchange_main om, return_exchange_dtl od
	   SET od.`region_cost`=
	  (SELECT c.`region_cost` FROM region_cost_maintain c 
	  	WHERE om.out_date &gt;= c.`effective_time` 
	    AND IF(
	      ISNULL(
	        (SELECT PRICE_ZONE FROM `financial_account` F 
	        	WHERE om.`company_no` = F.COMPANY_NO)
	      ),
	      (SELECT ZONE_NO FROM COMPANY CO 
	      	WHERE om.`company_no` = CO.COMPANY_NO),
	      (SELECT PRICE_ZONE FROM `financial_account` F 
	      	WHERE om.`company_no` = F.COMPANY_NO)
	    ) = C.ZONE_NO 
	    AND OD.ITEM_NO = C.ITEM_NO 
	  ORDER BY c.`effective_time` DESC 
	  LIMIT 0, 1)   
	WHERE om.`business_no` = od.`business_no` 
	  AND od.`region_cost` &lt;&gt; (SELECT 
	    c.`region_cost` 
	  FROM region_cost_maintain c 
	  WHERE om.out_date &gt;= c.`effective_time` 
	    AND IF(
	      ISNULL(
	        (SELECT PRICE_ZONE FROM `financial_account` F 
	        	WHERE om.`company_no` = F.COMPANY_NO)
	      ),
	      (SELECT ZONE_NO FROM COMPANY CO 
	      	WHERE om.`company_no` = CO.COMPANY_NO),
	      (SELECT PRICE_ZONE FROM `financial_account` F 
	      	WHERE om.`company_no` = F.COMPANY_NO)
	    ) = C.ZONE_NO 
	    AND OD.ITEM_NO = C.ITEM_NO 
	  ORDER BY c.`effective_time` DESC 
	  LIMIT 0, 1) 
	AND om.COMPANY_NO = #{params.companyNo} AND om.sharding_flag=#{params.shardingFlag} AND od.sharding_flag=#{params.shardingFlag}
	AND om.out_date BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
  </update>
  
  <select id="findBuybalanceRegionCostId" parameterType="map" resultType="java.lang.String">
  	SELECT id FROM bill_buy_balance A 
		WHERE 1=1
	AND  A.REGION_COST &lt;&gt; (
		SELECT c.`region_cost` FROM region_cost_maintain c 
		WHERE IFNULL(A.RECEIVE_DATE,A.SEND_DATE) &gt;= c.`effective_time` 
		AND IF(ISNULL((SELECT PRICE_ZONE FROM `financial_account` F WHERE A.BUYER_NO = F.COMPANY_NO)),
					(SELECT ZONE_NO FROM COMPANY CO WHERE A.BUYER_NO = CO.COMPANY_NO),
					(SELECT PRICE_ZONE FROM `financial_account` F WHERE A.BUYER_NO = F.COMPANY_NO)) = C.ZONE_NO 
		AND A.ITEM_NO = C.ITEM_NO 
		ORDER BY c.`effective_time` DESC 
		LIMIT 0, 1
	)
	AND NOT ISNULL((
		SELECT c.`region_cost` FROM region_cost_maintain c 
		WHERE IFNULL(A.RECEIVE_DATE,A.SEND_DATE) &gt;= c.`effective_time` 
		AND IF(ISNULL((SELECT PRICE_ZONE FROM `financial_account` F WHERE A.BUYER_NO = F.COMPANY_NO)),
		      (SELECT ZONE_NO FROM COMPANY CO WHERE A.BUYER_NO = CO.COMPANY_NO),
		      (SELECT PRICE_ZONE FROM `financial_account` F WHERE A.BUYER_NO = F.COMPANY_NO)) = C.ZONE_NO 
		AND A.ITEM_NO = C.ITEM_NO 
		ORDER BY c.`effective_time` DESC 
		LIMIT 0, 1
	))
	AND A.buyer_no = #{params.companyNo}
	AND A.receive_date IS NOT NULL
	AND A.receive_date &gt;= #{params.startDate}
	AND A.receive_date &lt;= #{params.endDate}
  	<if test="null != params.multiBrandUnitNo and '' != params.multiBrandUnitNo">
 		AND A.brand_unit_no IN ${params.multiBrandUnitNo}
 	</if>
	UNION ALL
	SELECT id FROM bill_buy_balance A 
		WHERE 1=1
	AND  A.REGION_COST &lt;&gt; (
		SELECT c.`region_cost` FROM region_cost_maintain c 
		WHERE IFNULL(A.RECEIVE_DATE,A.SEND_DATE) &gt;= c.`effective_time` 
		AND IF(ISNULL((SELECT PRICE_ZONE FROM `financial_account` F WHERE A.BUYER_NO = F.COMPANY_NO)),
					(SELECT ZONE_NO FROM COMPANY CO WHERE A.BUYER_NO = CO.COMPANY_NO),
					(SELECT PRICE_ZONE FROM `financial_account` F WHERE A.BUYER_NO = F.COMPANY_NO)) = C.ZONE_NO 
		AND A.ITEM_NO = C.ITEM_NO 
		ORDER BY c.`effective_time` DESC 
		LIMIT 0, 1
	)
	AND NOT ISNULL((
		SELECT c.`region_cost` FROM region_cost_maintain c 
		WHERE IFNULL(A.RECEIVE_DATE,A.SEND_DATE) &gt;= c.`effective_time` 
		AND IF(ISNULL((SELECT PRICE_ZONE FROM `financial_account` F WHERE A.BUYER_NO = F.COMPANY_NO)),
		      (SELECT ZONE_NO FROM COMPANY CO WHERE A.BUYER_NO = CO.COMPANY_NO),
		      (SELECT PRICE_ZONE FROM `financial_account` F WHERE A.BUYER_NO = F.COMPANY_NO)) = C.ZONE_NO 
		AND A.ITEM_NO = C.ITEM_NO 
		ORDER BY c.`effective_time` DESC 
		LIMIT 0, 1
	))
	AND A.buyer_no = #{params.companyNo}
	AND A.receive_date IS NULL
	AND A.send_date &gt;= #{params.startDate}
	AND A.send_date &lt;= #{params.endDate}
	<if test="null != params.multiBrandUnitNo and '' != params.multiBrandUnitNo">
 		AND A.brand_unit_no IN ${params.multiBrandUnitNo}
 	</if>
  </select>
  
  <update id="updateBuyBalanceRegionCost" parameterType="map">
  	UPDATE bill_buy_balance A
	   SET A.region_cost=
	  (SELECT c.`region_cost` FROM region_cost_maintain c 
	  	WHERE IFNULL(A.RECEIVE_DATE,A.SEND_DATE) &gt;= c.`effective_time` 
	    AND IF(
	      ISNULL(
	        (SELECT PRICE_ZONE FROM `financial_account` F 
	        	WHERE A.BUYER_NO = F.COMPANY_NO)
	      ),
	      (SELECT ZONE_NO FROM COMPANY CO 
	      	WHERE A.BUYER_NO = CO.COMPANY_NO),
	      (SELECT PRICE_ZONE FROM `financial_account` F 
	      	WHERE A.BUYER_NO = F.COMPANY_NO)
	    ) = C.ZONE_NO 
	    AND A.ITEM_NO = C.ITEM_NO 
	  ORDER BY c.`effective_time` DESC 
	  LIMIT 0, 1)  
	WHERE 1=1
	<if test="params.ids != null and params.ids != ''" >
	 <foreach collection="params.ids" item="id" open="AND A.id in(" separator="," close=")">
      '${id}'
   	 </foreach>
	</if>
	<if test="params.ids == null or params.ids == ''" >
	   AND A.REGION_COST &lt;&gt; 
	  (SELECT c.`region_cost` FROM region_cost_maintain c 
	  	WHERE IFNULL(A.RECEIVE_DATE,A.SEND_DATE) &gt;= c.`effective_time` 
	    AND IF(
	      ISNULL(
	        (SELECT PRICE_ZONE FROM `financial_account` F 
	        	WHERE A.BUYER_NO = F.COMPANY_NO)
	      ),
	      (SELECT ZONE_NO FROM COMPANY CO 
	      	WHERE A.BUYER_NO = CO.COMPANY_NO),
	      (SELECT PRICE_ZONE FROM `financial_account` F 
	      	WHERE A.BUYER_NO = F.COMPANY_NO)
	    ) = C.ZONE_NO 
	    AND A.ITEM_NO = C.ITEM_NO 
	  ORDER BY c.`effective_time` DESC 
	  LIMIT 0, 1)
	  AND NOT ISNULL((SELECT c.`region_cost` FROM
	    region_cost_maintain c 
	  WHERE IFNULL(A.RECEIVE_DATE,A.SEND_DATE) &gt;= c.`effective_time` 
	    AND IF(
	      ISNULL(
	        (SELECT PRICE_ZONE FROM `financial_account` F 
	        	WHERE A.BUYER_NO = F.COMPANY_NO)
	      ),
	      (SELECT ZONE_NO FROM COMPANY CO 
	      	WHERE A.BUYER_NO = CO.COMPANY_NO),
	      (SELECT PRICE_ZONE FROM `financial_account` F 
	      	WHERE A.BUYER_NO = F.COMPANY_NO)
	    ) = C.ZONE_NO 
	    AND A.ITEM_NO = C.ITEM_NO 
	  ORDER BY c.`effective_time` DESC 
	  LIMIT 0, 1))
	AND A.BUYER_NO = #{params.companyNo}
	AND IFNULL(A.RECEIVE_DATE,A.SEND_DATE) BETWEEN #{params.startDate} AND #{params.endDate}
	</if>
  </update>
  
  <select id="findSaleBalanceRegionCostId" parameterType="map" resultType="java.lang.String">
   SELECT id FROM bill_sale_balance A 
	WHERE  A.REGION_COST &lt;&gt; 
	  (SELECT c.`region_cost` FROM
	    region_cost_maintain c 
	  	WHERE A.SEND_DATE &gt;= c.`effective_time` 
	    AND IF(
	      ISNULL(
	        (SELECT PRICE_ZONE FROM `financial_account` F 
	        	WHERE A.SALER_NO = F.COMPANY_NO)
	      ),
	      (SELECT ZONE_NO FROM COMPANY CO 
	      	WHERE A.SALER_NO = CO.COMPANY_NO),
	      (SELECT PRICE_ZONE FROM `financial_account` F 
	      	WHERE A.SALER_NO = F.COMPANY_NO)
	    ) = C.ZONE_NO 
	    AND A.ITEM_NO = C.ITEM_NO 
	  ORDER BY c.`effective_time` DESC 
	  LIMIT 0, 1)
	  AND NOT ISNULL((SELECT c.`region_cost` 
	  FROM region_cost_maintain c 
	  WHERE A.SEND_DATE &gt;= c.`effective_time` 
	    AND IF(
	      ISNULL(
	        (SELECT PRICE_ZONE FROM `financial_account` F 
	        	WHERE A.SALER_NO = F.COMPANY_NO)
	      ),
	      (SELECT ZONE_NO FROM COMPANY CO 
	      	WHERE A.SALER_NO = CO.COMPANY_NO),
	      (SELECT PRICE_ZONE FROM `financial_account` F 
	      	WHERE A.SALER_NO = F.COMPANY_NO)
	    ) = C.ZONE_NO 
	    AND A.ITEM_NO = C.ITEM_NO 
	  ORDER BY c.`effective_time` DESC 
	  LIMIT 0, 1))
  	AND A.SALER_NO = #{params.companyNo}
	AND A.SEND_DATE BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
  	<if test="null != params.multiBrandUnitNo and '' != params.multiBrandUnitNo">
 		AND A.brand_unit_no IN ${params.multiBrandUnitNo}
 	</if>
  </select>
  
  <update id="updateSaleBalanceRegionCost" parameterType="map">
  	UPDATE bill_sale_balance A
	   SET A.REGION_cost=
	  (SELECT c.`region_cost` FROM
	    region_cost_maintain c 
	  	WHERE A.SEND_DATE &gt;= c.`effective_time` 
	    AND IF(
	      ISNULL(
	        (SELECT PRICE_ZONE FROM `financial_account` F 
	        	WHERE A.SALER_NO = F.COMPANY_NO)
	      ),
	      (SELECT ZONE_NO FROM COMPANY CO 
	      	WHERE A.SALER_NO = CO.COMPANY_NO),
	      (SELECT PRICE_ZONE FROM `financial_account` F 
	      	WHERE A.SALER_NO = F.COMPANY_NO)
	    ) = C.ZONE_NO 
	    AND A.ITEM_NO = C.ITEM_NO 
	  ORDER BY c.`effective_time` DESC 
	  LIMIT 0, 1)  
	WHERE 1=1
	<foreach collection="params.ids" item="id" open="AND id in(" separator="," close=")">
      '${id}'
    </foreach>
  </update>
  
  <update id="updatePosOrderHeadquaterCost" parameterType="map">
    <include refid="update_flag" />
  	UPDATE order_dtl od, order_main om
	   SET od.headquarter_cost=
	  (SELECT 
	    c.`headquarter_cost` 
	  FROM
	    `headquarter_cost_maintain` c 
	  WHERE om.out_date &gt;= c.`effective_time` 
	    AND od.item_no = C.ITEM_NO 
	  ORDER BY c.`effective_time` DESC 
	  LIMIT 0, 1)  
	WHERE om.`order_no`=od.`order_no` 
	AND om.COMPANY_NO = #{params.companyNo}
	<if test="params.shardingFlag != null and params.shardingFlag != ''" >
	 AND om.sharding_flag=#{params.shardingFlag} AND od.sharding_flag=#{params.shardingFlag}
	</if>
	AND om.`out_date` BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
 	<if test="null != params.multiBrandUnitNo and '' != params.multiBrandUnitNo">
 		AND od.brand_unit_no IN ${params.multiBrandUnitNo}
 	</if>
  </update>
  
  <update id="updatePosReturnExchangeHeadquaterCost" parameterType="map">
   <include refid="update_flag" />
  	UPDATE return_exchange_dtl od, return_exchange_main om
	   SET od.headquarter_cost=
	  (SELECT 
	    c.`headquarter_cost` 
	  FROM
	    `headquarter_cost_maintain` c 
	  WHERE om.out_date &gt;= c.`effective_time` 
	    AND od.item_no = C.ITEM_NO 
	  ORDER BY c.`effective_time` DESC 
	  LIMIT 0, 1)  
	WHERE om.`business_no`=od.`business_no` 
	AND om.COMPANY_NO = #{params.companyNo}
	<if test="params.shardingFlag != null and params.shardingFlag != ''" >
	 AND om.sharding_flag=#{params.shardingFlag} AND od.sharding_flag=#{params.shardingFlag}
	</if>	 
	AND om.`out_date` BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
  	<if test="null != params.multiBrandUnitNo and '' != params.multiBrandUnitNo">
 		AND od.brand_unit_no IN ${params.multiBrandUnitNo}
 	</if>
  </update>
  
  <update id="updatePOSOrderHQSchedule" parameterType="map">
  <include refid="update_flag" />
  	UPDATE order_dtl od, order_main om
	   SET od.headquarter_cost=
	  (SELECT 
	    c.`headquarter_cost` 
	  FROM
	    `headquarter_cost_maintain` c 
	  WHERE om.out_date &gt;= c.`effective_time` 
	    AND od.item_no = C.ITEM_NO 
	  ORDER BY c.`effective_time` DESC 
	  LIMIT 0, 1)  
	WHERE om.`order_no`=od.`order_no` 
	  AND od.`headquarter_cost` &lt;&gt; 
	  (SELECT 
	    c.`headquarter_cost` 
	  FROM
	    `headquarter_cost_maintain` c 
	  WHERE om.out_date &gt;= c.`effective_time` 
	    AND od.item_no = C.ITEM_NO 
	  ORDER BY c.`effective_time` DESC 
	  LIMIT 0, 1)
	  AND om.COMPANY_NO = #{params.companyNo} AND om.sharding_flag=#{params.shardingFlag} AND od.sharding_flag=#{params.shardingFlag}
	AND om.`out_date` BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
  </update>
  
  <update id="updateReturnExchangeHQSchedule" parameterType="map">
  <include refid="update_flag" />
  	UPDATE return_exchange_dtl od, return_exchange_main om
	   SET od.headquarter_cost=
	  (SELECT 
	    c.`headquarter_cost` 
	  FROM
	    `headquarter_cost_maintain` c 
	  WHERE om.out_date &gt;= c.`effective_time` 
	    AND od.item_no = C.ITEM_NO 
	  ORDER BY c.`effective_time` DESC 
	  LIMIT 0, 1)  
	WHERE om.`business_no`=od.`business_no` 
	  AND od.`headquarter_cost` &lt;&gt; 
	  (SELECT 
	    c.`headquarter_cost` 
	  FROM
	    `headquarter_cost_maintain` c 
	  WHERE om.out_date &gt;= c.`effective_time` 
	    AND od.item_no = C.ITEM_NO 
	  ORDER BY c.`effective_time` DESC 
	  LIMIT 0, 1)
	  AND om.COMPANY_NO = #{params.companyNo} AND om.sharding_flag=#{params.shardingFlag} AND od.sharding_flag=#{params.shardingFlag}
	AND om.`out_date` BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
  </update>
  
  <update id="updateBuyBalanceHeadquaterCost" parameterType="map">
  <include refid="update_flag" />
  	UPDATE bill_buy_balance bbb
	   SET bbb.headquarter_cost=
	  (SELECT 
	    c.`headquarter_cost` 
	  FROM
	    `headquarter_cost_maintain` c 
	  WHERE IFNULL(bbb.receive_date,bbb.`send_date`) &gt;= c.`effective_time` 
	    AND bbb.item_no = C.ITEM_NO 
	  ORDER BY c.`effective_time` DESC 
	  LIMIT 0, 1)  
	WHERE bbb.buyer_no = #{params.companyNo}
	AND IFNULL(bbb.receive_date,bbb.`send_date`) BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
 	<if test="null != params.multiBrandUnitNo and '' != params.multiBrandUnitNo">
 		AND bbb.brand_unit_no IN ${params.multiBrandUnitNo}
 	</if>
  </update>
  
  <update id="updateSaleBalanceHeadquaterCost" parameterType="map">
  <include refid="update_flag" />
  	UPDATE bill_sale_balance bsb
	   SET bsb.headquarter_cost=
	  (SELECT 
	    c.`headquarter_cost` 
	  FROM
	    `headquarter_cost_maintain` c 
	  WHERE bsb.send_date &gt;= c.`effective_time` 
	    AND bsb.item_no = C.ITEM_NO 
	  ORDER BY c.`effective_time` DESC 
	  LIMIT 0, 1)  
	WHERE bsb.saler_no = #{params.companyNo}
	AND bsb.send_date BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
  	<if test="null != params.multiBrandUnitNo and '' != params.multiBrandUnitNo">
 		AND bsb.brand_unit_no IN ${params.multiBrandUnitNo}
 	</if>
  </update>
  
  <update id="updatePosOrderItemCost" parameterType="map">
  	<include refid="update_flag" />
  	UPDATE  order_main om , order_dtl od, item_cost force key (company_no)
		SET od.`unit_cost`=item_cost.`unit_cost`
		WHERE om.`order_no` = od.`order_no` 
		  AND om.COMPANY_NO = ITEM_COST.COMPANY_NO 
		  AND od.ITEM_NO = ITEM_COST.ITEM_NO 
		  AND YEAR(
		      DATE_FORMAT(
		        om.out_DATE,
		        '%Y-%m-%d'
		      )
		    ) = ITEM_COST.YEAR 
		  AND MONTH(
		      DATE_FORMAT(
		        om.`out_date`,
		        '%Y-%m-%d'
		     )
		   ) = ITEM_COST.MONTH   
		AND od.`unit_cost` &lt;&gt; item_cost.`unit_cost` 
		AND om.COMPANY_NO = #{params.companyNo}
		AND om.`out_date` BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
  		<if test="null != params.multiBrandUnitNo and '' != params.multiBrandUnitNo">
  			AND od.brand_unit_no IN ${params.multiBrandUnitNo}
  		</if>
  </update>
  
  <update id="updatePosReturnExchangeItemCost" parameterType="map">
 	<include refid="update_flag" />
  	UPDATE  return_exchange_main om , return_exchange_dtl od, item_cost force key (company_no)
		SET od.`unit_cost`=item_cost.`unit_cost`
		WHERE om.`business_no` = od.`business_no` 
		  AND om.COMPANY_NO = ITEM_COST.COMPANY_NO 
		  AND od.ITEM_NO = ITEM_COST.ITEM_NO 
		  AND YEAR(
		      DATE_FORMAT(
		        om.out_DATE,
		        '%Y-%m-%d'
		      )
		    ) = ITEM_COST.YEAR 
		  AND MONTH(
		      DATE_FORMAT(
		        om.`out_date`,
		        '%Y-%m-%d'
		     )
		   ) = ITEM_COST.MONTH   
		AND od.`unit_cost` &lt;&gt; item_cost.`unit_cost`
		AND om.COMPANY_NO = #{params.companyNo}
		AND om.`out_date` BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
  		<if test="null != params.multiBrandUnitNo and '' != params.multiBrandUnitNo">
  			AND od.brand_unit_no IN ${params.multiBrandUnitNo}
  		</if>
  </update>
  
  <update id="updateBuyBalanceItemCost" parameterType="map">
  /*sharding_flag*/
	UPDATE bill_buy_balance bsb, item_cost
	   SET  bsb.`unit_cost`= item_cost.`unit_cost`
		WHERE bsb.buyer_no = ITEM_COST.COMPANY_NO 
		  AND bsb.ITEM_NO = ITEM_COST.ITEM_NO 
		  AND YEAR(
		      DATE_FORMAT(
		        IFNULL(bsb.receive_date,bsb.`send_date`),
		        '%Y-%m-%d'
		      )
		    ) = ITEM_COST.YEAR 
		  AND MONTH(
		      DATE_FORMAT(
		        IFNULL(bsb.receive_date,bsb.`send_date`),
		        '%Y-%m-%d'
		     )
		   ) = ITEM_COST.MONTH   
		 AND bsb.unit_cost &lt;&gt; item_cost.unit_cost	
		 AND bsb.buyer_no = #{params.companyNo}
		 AND IFNULL(bsb.receive_date,bsb.`send_date`) BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')																			
  </update>
  
  <update id="updateSaleBalanceItemCost" parameterType="map">
  /*sharding_flag*/
  	UPDATE bill_sale_balance bsb, item_cost
	   SET  bsb.`unit_cost`= item_cost.`unit_cost`
		WHERE bsb.saler_no = ITEM_COST.COMPANY_NO 
		  AND bsb.ITEM_NO = ITEM_COST.ITEM_NO 
		  AND YEAR(
		      DATE_FORMAT(
		        bsb.send_date,
		        '%Y-%m-%d'
		      )
		    ) = ITEM_COST.YEAR 
		  AND MONTH(
		      DATE_FORMAT(
		        bsb.send_date,
		        '%Y-%m-%d'
		     )
		   ) = ITEM_COST.MONTH   
		AND bsb.`unit_cost` &lt;&gt; item_cost.`unit_cost` 
		AND bsb.saler_no = #{params.companyNo}
		AND bsb.send_date BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
  </update>
  
  
  <resultMap id="BillBuyBalanceResultMap" type="cn.wonhigh.retail.fas.common.model.BillBuyBalance" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="bill_no" property="billNo" jdbcType="CHAR" />
    <result column="bill_type" property="billType" jdbcType="INTEGER" />
    <result column="biz_type" property="bizType" jdbcType="INTEGER" />
    <result column="ref_bill_no" property="refBillNo" jdbcType="CHAR" />
    <result column="ref_bill_type" property="refBillType" jdbcType="INTEGER" />
    <result column="original_bill_no" property="originalBillNo" jdbcType="CHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="buyer_no" property="buyerNo" jdbcType="CHAR" />
    <result column="buyer_name" property="buyerName" jdbcType="CHAR" />
    <result column="saler_no" property="salerNo" jdbcType="CHAR" />
    <result column="saler_name" property="salerName" jdbcType="CHAR" />
    <result column="send_date" property="sendDate" jdbcType="DATE" />
    <result column="receive_date" property="receiveDate" jdbcType="DATE" />
    <result column="send_store_no" property="sendStoreNo" jdbcType="CHAR" />
    <result column="send_store_name" property="sendStoreName" jdbcType="CHAR" />
    <result column="receive_store_no" property="receiveStoreNo" jdbcType="CHAR" />
    <result column="receive_store_name" property="receiveStoreName" jdbcType="CHAR" />
    <result column="sku_id" property="skuId" jdbcType="CHAR" />
    <result column="sku_no" property="skuNo" jdbcType="CHAR" />
    <result column="supplier_no" property="supplierNo" jdbcType="CHAR" />
    <result column="supplier_name" property="supplierName" jdbcType="CHAR" />
    <result column="item_no" property="itemNo" jdbcType="CHAR" />
    <result column="item_code" property="itemCode" jdbcType="CHAR" />
    <result column="item_name" property="itemName" jdbcType="CHAR" />
    <result column="brand_no" property="brandNo" jdbcType="CHAR" />
    <result column="brand_name" property="brandName" jdbcType="CHAR" />
    <result column="category_no" property="categoryNo" jdbcType="CHAR" />
    <result column="category_name" property="categoryName" jdbcType="CHAR" />
    <result column="cost" property="cost" jdbcType="DECIMAL" />
    <result column="bill_cost" property="billCost" jdbcType="DECIMAL" />
    <result column="tax_rate" property="taxRate" jdbcType="DECIMAL" />
    <result column="exclusive_cost" property="exclusiveCost" jdbcType="DECIMAL" />
    <result column="headquarter_cost" property="headquarterCost" jdbcType="DECIMAL" />
    <result column="region_cost" property="regionCost" jdbcType="DECIMAL" />
    <result column="unit_cost" property="unitCost" jdbcType="DECIMAL" />
    <result column="send_qty" property="sendQty" jdbcType="INTEGER" />
    <result column="receive_qty" property="receiveQty" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="CHAR" />
    <result column="balance_no" property="balanceNo" jdbcType="CHAR" />
    <result column="balance_status" property="balanceStatus" jdbcType="TINYINT" />
    <result column="balance_type" property="balanceType" jdbcType="TINYINT" />
    <result column="is_split" property="isSplit" jdbcType="INTEGER" />
    <result column="path_no" property="pathNo" jdbcType="CHAR" />
    <result column="order_unit_no" property="orderUnitNo" jdbcType="CHAR" />
    <result column="order_unit_name" property="orderUnitName" jdbcType="VARCHAR" />
    <result column="organ_no" property="organNo" jdbcType="CHAR" />
    <result column="organ_name" property="organName" jdbcType="VARCHAR" />
    <result column="order_unit_no_from" property="orderUnitNoFrom" jdbcType="CHAR" />
    <result column="order_unit_name_from" property="orderUnitNameFrom" jdbcType="VARCHAR" />
    <result column="organ_no_from" property="organNoFrom" jdbcType="CHAR" />
    <result column="organ_name_from" property="organNameFrom" jdbcType="VARCHAR" />
    <result column="zone_no" property="zoneNo" jdbcType="CHAR" />
    <result column="zone_name" property="zoneName" jdbcType="VARCHAR" />
    <result column="zone_no_from" property="zoneNoFrom" jdbcType="CHAR" />
    <result column="zone_name_from" property="zoneNameFrom" jdbcType="VARCHAR" />
    <result column="company_no" property="companyNo" jdbcType="CHAR" />
    <result column="company_name" property="companyName" jdbcType="CHAR" />
    
    <result column="difference_qty" property="differenceQty" jdbcType="INTEGER" />
    <result column="brand_unit_name" property="brandUnitName" jdbcType="CHAR" />
    <result column="send_amount" property="sendAmount" jdbcType="DECIMAL" />
    <result column="receive_amount" property="receiveAmount" jdbcType="DECIMAL" />
    <result column="difference_amount" property="differenceAmount" jdbcType="DECIMAL" />
    <result column="one_level_category_no" property="oneLevelCategoryNo" jdbcType="CHAR" />
    <result column="one_level_category_name" property="oneLevelCategoryName" jdbcType="CHAR" />
    <result column="two_level_category_no" property="twoLevelCategoryNo" jdbcType="CHAR" />
    <result column="two_level_category_name" property="twoLevelCategoryName" jdbcType="CHAR" />
    <result column="cost_checked" property="costChecked" jdbcType="INTEGER"/>
    <result column="gender_name" property="genderName" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="BillSaleBalanceResultMap" type="cn.wonhigh.retail.fas.common.model.BillSaleBalance" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="bill_no" property="billNo" jdbcType="CHAR" />
    <result column="bill_type" property="billType" jdbcType="INTEGER" />
    <result column="biz_type" property="bizType" jdbcType="INTEGER" />
    <result column="ref_bill_no" property="refBillNo" jdbcType="CHAR" />
    <result column="ref_bill_type" property="refBillType" jdbcType="INTEGER" />
    <result column="original_bill_no" property="originalBillNo" jdbcType="CHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="buyer_no" property="buyerNo" jdbcType="CHAR" />
    <result column="buyer_name" property="buyerName" jdbcType="CHAR" />
    <result column="saler_no" property="salerNo" jdbcType="CHAR" />
    <result column="saler_name" property="salerName" jdbcType="CHAR" />
    <result column="send_date" property="sendDate" jdbcType="DATE" />
    <result column="receive_date" property="receiveDate" jdbcType="DATE" />
    <result column="send_store_no" property="sendStoreNo" jdbcType="CHAR" />
    <result column="send_store_name" property="sendStoreName" jdbcType="CHAR" />
    <result column="receive_store_no" property="receiveStoreNo" jdbcType="CHAR" />
    <result column="receive_store_name" property="receiveStoreName" jdbcType="CHAR" />
    <result column="sku_id" property="skuId" jdbcType="CHAR" />
    <result column="sku_no" property="skuNo" jdbcType="CHAR" />
    <result column="supplier_no" property="supplierNo" jdbcType="CHAR" />
    <result column="supplier_name" property="supplierName" jdbcType="CHAR" />
    <result column="item_no" property="itemNo" jdbcType="CHAR" />
    <result column="item_code" property="itemCode" jdbcType="CHAR" />
    <result column="item_name" property="itemName" jdbcType="CHAR" />
    <result column="brand_no" property="brandNo" jdbcType="CHAR" />
    <result column="brand_name" property="brandName" jdbcType="CHAR" />
    <result column="category_no" property="categoryNo" jdbcType="CHAR" />
    <result column="category_name" property="categoryName" jdbcType="CHAR" />
    <result column="cost" property="cost" jdbcType="DECIMAL" />
    <result column="bill_cost" property="billCost" jdbcType="DECIMAL" />
    <result column="tax_rate" property="taxRate" jdbcType="DECIMAL" />
    <result column="exclusive_cost" property="exclusiveCost" jdbcType="DECIMAL" />
    <result column="headquarter_cost" property="headquarterCost" jdbcType="DECIMAL" />
    <result column="region_cost" property="regionCost" jdbcType="DECIMAL" />
    <result column="unit_cost" property="unitCost" jdbcType="DECIMAL" />
    <result column="send_qty" property="sendQty" jdbcType="INTEGER" />
    <result column="receive_qty" property="receiveQty" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="CHAR" />
    <result column="balance_no" property="balanceNo" jdbcType="CHAR" />
    <result column="balance_type" property="balanceType" jdbcType="TINYINT" />
    <result column="balance_status" property="balanceStatus" jdbcType="TINYINT" />
    <result column="is_split" property="isSplit" jdbcType="INTEGER" />
    <result column="path_no" property="pathNo" jdbcType="CHAR" />
    <result column="order_unit_no" property="orderUnitNo" jdbcType="CHAR" />
    <result column="order_unit_name" property="orderUnitName" jdbcType="VARCHAR" />
    <result column="organ_no" property="organNo" jdbcType="CHAR" />
    <result column="organ_name" property="organName" jdbcType="VARCHAR" />
    <result column="order_unit_no_from" property="orderUnitNoFrom" jdbcType="CHAR" />
    <result column="order_unit_name_from" property="orderUnitNameFrom" jdbcType="VARCHAR" />
    <result column="organ_no_from" property="organNoFrom" jdbcType="CHAR" />
    <result column="organ_name_from" property="organNameFrom" jdbcType="VARCHAR" />
    <result column="zone_no" property="zoneNo" jdbcType="CHAR" />
    <result column="zone_name" property="zoneName" jdbcType="VARCHAR" />
    <result column="zone_no_from" property="zoneNoFrom" jdbcType="CHAR" />
    <result column="zone_name_from" property="zoneNameFrom" jdbcType="VARCHAR" />
    
    <result column="difference_qty" property="differenceQty" jdbcType="INTEGER" />
    <result column="brand_unit_no" property="brandUnitNo" jdbcType="CHAR" />
    <result column="brand_unit_name" property="brandUnitName" jdbcType="CHAR" />
    <result column="send_amount" property="sendAmount" jdbcType="DECIMAL" />
    <result column="receive_amount" property="receiveAmount" jdbcType="DECIMAL" />
    <result column="difference_amount" property="differenceAmount" jdbcType="DECIMAL" />
    <result column="one_level_category_no" property="oneLevelCategoryNo" jdbcType="CHAR" />
    <result column="one_level_category_name" property="oneLevelCategoryName" jdbcType="CHAR" />
    <result column="two_level_category_no" property="twoLevelCategoryNo" jdbcType="CHAR" />
    <result column="two_level_category_name" property="twoLevelCategoryName" jdbcType="CHAR" />
    
    <result column="is_bill_invoice" property="isBillInvoice" jdbcType="INTEGER" />
    <result column="invoice_apply_no" property="invoiceApplyNo" jdbcType="VARCHAR" />
    <result column="invoice_apply_date" property="invoiceApplyDate" jdbcType="DATE" />
    <result column="gender_name" property="genderName" jdbcType="VARCHAR" />
    <result column="cost_checked" property="costChecked" jdbcType="INTEGER"/>
    <result column="tag_price" property="tagPrice" jdbcType="DECIMAL"/>
    
    <result column="deduction_amount" property="deductionAmount" jdbcType="DECIMAL"/>
    <result column="deduction_remark" property="deductionRemark" jdbcType="VARCHAR"/>
  </resultMap>
  
  <select id="getBuyBalanceItemCostUnmatchCount" resultType="java.lang.Integer" parameterType="map">
  /*sharding_flag*/
  SELECT COUNT(1) FROM bill_buy_balance bbb
    INNER JOIN 
	(SELECT company_no,year,month,item_no,unit_cost FROM item_cost 
		WHERE company_no= #{params.companyNo} AND year=#{params.year} AND month=#{params.month}
	) ic ON bbb.buyer_no = ic.company_no AND bbb.item_no = ic.item_no 
		AND IFNULL(bbb.receive_date,bbb.send_date) BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
     WHERE bbb.unit_cost != ic.unit_cost or bbb.unit_cost is null
  </select>
  
  <select id="getBuyBalanceItemCostUnmatchByPage" resultMap="BillBuyBalanceResultMap" parameterType="map">
  /*sharding_flag*/
  	SELECT bbb.id, ic.unit_cost 
     FROM bill_buy_balance bbb
     INNER JOIN 
	(SELECT company_no,year,month,item_no,unit_cost FROM item_cost 
		WHERE company_no= #{params.companyNo} AND year=#{params.year} AND month=#{params.month}
	) ic ON bbb.buyer_no = ic.company_no AND bbb.item_no = ic.item_no 
		AND IFNULL(bbb.receive_date,bbb.send_date) BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
     WHERE (bbb.unit_cost != ic.unit_cost or bbb.unit_cost is null)
      <if test="null != params.multiBrandUnitNo and '' != params.multiBrandUnitNo">
 		AND bbb.brand_unit_no IN ${params.multiBrandUnitNo}
 	  </if>
 	  <if test="null != params.lastId and '' != params.lastId">
 		AND bsb.id > #{params.lastId}
 	  </if>
 	  ORDER BY bbb.id ASC
 	  LIMIT #{page.startRowNum} ,#{page.pageSize} 
  </select>
  
  <select id="getSaleBalanceItemCostUnmatchCount" resultType="java.lang.Integer" parameterType="map">
  /*sharding_flag*/
  	SELECT COUNT(1) FROM bill_sale_balance bsb
  	INNER JOIN 
	(SELECT company_no,year,month,item_no,unit_cost FROM item_cost 
		WHERE company_no= #{params.companyNo} AND year=#{params.year} AND month=#{params.month}
	) ic ON bsb.saler_no = ic.company_no AND bsb.item_no = ic.item_no 
		AND bsb.send_date BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
     WHERE bsb.unit_cost != ic.unit_cost
      or bsb.unit_cost is null
  </select>
  
  <select id="getSaleBalanceItemCostUnmatchByPage" resultMap="BillSaleBalanceResultMap" parameterType="map">
  /*sharding_flag*/
  	SELECT bsb.id,ic.unit_cost 
  	FROM bill_sale_balance bsb
    INNER JOIN 
	(SELECT company_no,year,month,item_no,unit_cost FROM item_cost 
		WHERE company_no= #{params.companyNo} AND year=#{params.year} AND month=#{params.month}
	) ic ON bsb.saler_no = ic.company_no AND bsb.item_no = ic.item_no 
		AND bsb.send_date BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
     WHERE (bsb.unit_cost != ic.unit_cost or bsb.unit_cost is null)
      <if test="null != params.multiBrandUnitNo and '' != params.multiBrandUnitNo">
 		AND bsb.brand_unit_no IN ${params.multiBrandUnitNo}
 	  </if>
 	  <if test="null != params.lastId and '' != params.lastId">
 		AND bsb.id > #{params.lastId}
 	  </if>
 	  ORDER BY bsb.id ASC
 	  LIMIT #{page.startRowNum} ,#{page.pageSize} 
  </select>
  
  <select id="getBuyBalanceHeadquaterCostUnmatchByPage" resultMap="BillBuyBalanceResultMap" parameterType="map">
  /*sharding_flag*/
  	SELECT 
	  A.id,
	  (SELECT 
	    C.headquarter_cost 
	  FROM
	    headquarter_cost_maintain C 
	  WHERE IFNULL(A.receive_date,A.send_date) &gt;= C.effective_time 
	    AND A.item_no = C.ITEM_NO 
	  ORDER BY C.`effective_time` DESC 
	  LIMIT 0, 1) headquarter_cost 
	FROM
	  bill_buy_balance A 
	  WHERE 1 = 1
	  AND A.headquarter_cost &lt;&gt; 
	  (SELECT 
	    C.headquarter_cost 
	  FROM
	    headquarter_cost_maintain C 
	  WHERE IFNULL(A.receive_date,A.send_date) &gt;= C.effective_time 
	    AND A.item_no = C.ITEM_NO 
	  ORDER BY C.`effective_time` DESC 
	  LIMIT 0, 1)
	  AND NOT ISNULL (
		  (SELECT 
		    C.headquarter_cost 
		  FROM
		    headquarter_cost_maintain C 
		  WHERE IFNULL(A.receive_date,A.send_date) &gt;= C.effective_time 
		    AND A.item_no = C.ITEM_NO 
		  ORDER BY C.`effective_time` DESC 
		  LIMIT 0, 1)
	  )
	  AND IFNULL(A.receive_date,A.send_date) BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
      AND A.buyer_no = #{params.companyNo}
      <if test="null != params.multiBrandUnitNo and '' != params.multiBrandUnitNo">
 		AND A.brand_unit_no IN ${params.multiBrandUnitNo}
 	  </if>
 	  <if test="null != params.lastId and '' != params.lastId">
 		AND A.id > #{params.lastId}
 	  </if>
 	  ORDER BY A.id ASC
 	  LIMIT #{page.startRowNum} ,#{page.pageSize} 
  </select>
  
  <select id="getSaleBalanceHeadquaterCostUnmatchByPage" resultMap="BillSaleBalanceResultMap" parameterType="map">
  	/*sharding_flag*/
  	SELECT 
	  A.id,
	  (SELECT 
	    C.headquarter_cost 
	  FROM
	    headquarter_cost_maintain C 
	  WHERE A.send_date &gt;= C.effective_time 
	    AND A.item_no = C.ITEM_NO 
	  ORDER BY C.`effective_time` DESC 
	  LIMIT 0, 1) headquarter_cost 
	FROM
	  bill_sale_balance A 
	  WHERE 1 = 1
	  AND A.headquarter_cost &lt;&gt; 
	  (SELECT 
	    C.headquarter_cost 
	  FROM
	    headquarter_cost_maintain C 
	  WHERE A.send_date &gt;= C.effective_time 
	    AND A.item_no = C.ITEM_NO 
	  ORDER BY C.`effective_time` DESC 
	  LIMIT 0, 1)
	  AND NOT ISNULL (
		  (SELECT 
		    C.headquarter_cost 
		  FROM
		    headquarter_cost_maintain C 
		  WHERE A.send_date &gt;= C.effective_time 
		    AND A.item_no = C.ITEM_NO 
		  ORDER BY C.`effective_time` DESC 
		  LIMIT 0, 1)
	  )
	  AND A.send_date BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
	  AND A.saler_no = #{params.companyNo}
      <if test="null != params.multiBrandUnitNo and '' != params.multiBrandUnitNo">
 		AND A.brand_unit_no IN ${params.multiBrandUnitNo}
 	  </if>
 	  <if test="null != params.lastId and '' != params.lastId">
 		AND A.id > #{params.lastId}
 	  </if>
 	  ORDER BY A.id ASC
 	  LIMIT #{page.startRowNum} ,#{page.pageSize} 
  </select>
  <select id="getBuyBalanceRegionCostUnmatchByPage" resultMap="BillBuyBalanceResultMap" parameterType="map">
  /*sharding_flag*/
  	SELECT 
	  A.id,
	  (SELECT 
	    region_cost 
	  FROM
	    region_cost_maintain C 
	  WHERE 1 = 1 
	    AND A.item_no = C.item_no 
	    AND C.effective_time &lt;= IFNULL(A.receive_date, A.send_date) 
	    AND IF(
	      ISNULL(
	        (SELECT 
	          PRICE_ZONE 
	        FROM
	          `financial_account` F 
	        WHERE A.`buyer_no` = F.COMPANY_NO)
	      ),
	      (SELECT 
	        ZONE_NO 
	      FROM
	        COMPANY CO 
	      WHERE A.`buyer_no` = CO.COMPANY_NO),
	      (SELECT 
	        PRICE_ZONE 
	      FROM
	        `financial_account` F 
	      WHERE A.`buyer_no` = F.COMPANY_NO)
	    ) = C.ZONE_NO 
	  ORDER BY C.effective_time DESC 
	  LIMIT 1) region_cost 
	FROM
	  bill_buy_balance A 
	WHERE 1 = 1 
	  AND A.REGION_COST &lt;&gt; 
	  (SELECT 
	    C.`region_cost` 
	  FROM
	    region_cost_maintain c 
	  WHERE IFNULL(A.RECEIVE_DATE, A.SEND_DATE) &gt;= C.`effective_time` 
	    AND IF(
	      ISNULL(
	        (SELECT 
	          PRICE_ZONE 
	        FROM
	          `financial_account` F 
	        WHERE A.BUYER_NO = F.COMPANY_NO)
	      ),
	      (SELECT 
	        ZONE_NO 
	      FROM
	        COMPANY CO 
	      WHERE A.BUYER_NO = CO.COMPANY_NO),
	      (SELECT 
	        PRICE_ZONE 
	      FROM
	        `financial_account` F 
	      WHERE A.BUYER_NO = F.COMPANY_NO)
	    ) = C.ZONE_NO 
	    AND A.ITEM_NO = C.ITEM_NO 
	  ORDER BY C.`effective_time` DESC 
	  LIMIT 0, 1) 
	  AND NOT ISNULL(
	    (SELECT 
	      C.`region_cost` 
	    FROM
	      region_cost_maintain c 
	    WHERE IFNULL(A.RECEIVE_DATE, A.SEND_DATE) &gt;= C.`effective_time` 
	      AND IF(
	        ISNULL(
	          (SELECT 
	            PRICE_ZONE 
	          FROM
	            `financial_account` F 
	          WHERE A.BUYER_NO = F.COMPANY_NO)
	        ),
	        (SELECT 
	          ZONE_NO 
	        FROM
	          COMPANY CO 
	        WHERE A.BUYER_NO = CO.COMPANY_NO),
	        (SELECT 
	          PRICE_ZONE 
	        FROM
	          `financial_account` F 
	        WHERE A.BUYER_NO = F.COMPANY_NO)
	      ) = C.ZONE_NO 
	      AND A.ITEM_NO = C.ITEM_NO 
	    ORDER BY C.`effective_time` DESC 
	    LIMIT 0, 1)
	  )
	  AND IFNULL(A.receive_date,A.send_date) BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
      AND A.buyer_no = #{params.companyNo}
      <if test="null != params.multiBrandUnitNo and '' != params.multiBrandUnitNo">
 		AND A.brand_unit_no IN ${params.multiBrandUnitNo}
 	  </if>
 	  <if test="null != params.lastId and '' != params.lastId">
 		AND A.id &gt; #{params.lastId}
 	  </if>
 	  ORDER BY A.id ASC
 	  LIMIT #{page.startRowNum} ,#{page.pageSize} 
  </select>

  <select id="getSaleBalanceRegionCostUnmatchByPage" resultMap="BillSaleBalanceResultMap" parameterType="map">
  /*sharding_flag*/
  	SELECT 
	  A.id,
	  (SELECT 
	    region_cost 
	  FROM
	    region_cost_maintain C 
	  WHERE 1 = 1 
	    AND A.item_no = C.item_no 
	    AND A.SEND_DATE &gt;= C.`effective_time` 
	    AND IF(
	      ISNULL(
	        (SELECT 
	          PRICE_ZONE 
	        FROM
	          `financial_account` F 
	        WHERE A.`saler_no` = F.COMPANY_NO)
	      ),
	      (SELECT 
	        ZONE_NO 
	      FROM
	        COMPANY CO 
	      WHERE A.`saler_no` = CO.COMPANY_NO),
	      (SELECT 
	        PRICE_ZONE 
	      FROM
	        `financial_account` F 
	      WHERE A.`saler_no` = F.COMPANY_NO)
	    ) = C.ZONE_NO 
	  ORDER BY C.effective_time DESC 
	  LIMIT 1) region_cost 
	FROM
	  bill_sale_balance A 
	WHERE 1 = 1 
	  AND A.REGION_COST &lt;&gt; 
	  (SELECT 
	    C.`region_cost` 
	  FROM
	    region_cost_maintain c 
	  WHERE A.SEND_DATE &gt;= C.`effective_time` 
	    AND IF(
	      ISNULL(
	        (SELECT 
	          PRICE_ZONE 
	        FROM
	          `financial_account` F 
	        WHERE A.saler_no = F.COMPANY_NO)
	      ),
	      (SELECT 
	        ZONE_NO 
	      FROM
	        COMPANY CO 
	      WHERE A.saler_no = CO.COMPANY_NO),
	      (SELECT 
	        PRICE_ZONE 
	      FROM
	        `financial_account` F 
	      WHERE A.saler_no = F.COMPANY_NO)
	    ) = C.ZONE_NO 
	    AND A.ITEM_NO = C.ITEM_NO 
	  ORDER BY C.`effective_time` DESC 
	  LIMIT 0, 1) 
	  AND NOT ISNULL(
	    (SELECT 
	      C.`region_cost` 
	    FROM
	      region_cost_maintain c 
	    WHERE A.SEND_DATE &gt;= C.`effective_time`  
	      AND IF(
	        ISNULL(
	          (SELECT 
	            PRICE_ZONE 
	          FROM
	            `financial_account` F 
	          WHERE A.saler_no = F.COMPANY_NO)
	        ),
	        (SELECT 
	          ZONE_NO 
	        FROM
	          COMPANY CO 
	        WHERE A.saler_no = CO.COMPANY_NO),
	        (SELECT 
	          PRICE_ZONE 
	        FROM
	          `financial_account` F 
	        WHERE A.saler_no = F.COMPANY_NO)
	      ) = C.ZONE_NO 
	      AND A.ITEM_NO = C.ITEM_NO 
	    ORDER BY C.`effective_time` DESC 
	    LIMIT 0, 1)
	  )
	  AND A.send_date BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
      AND A.saler_no = #{params.companyNo}
      <if test="null != params.multiBrandUnitNo and '' != params.multiBrandUnitNo">
 		AND A.brand_unit_no IN ${params.multiBrandUnitNo}
 	  </if>
 	  <if test="null != params.lastId and '' != params.lastId">
 		AND A.id &gt; #{params.lastId}
 	  </if>
 	  ORDER BY A.id ASC
 	  LIMIT #{page.startRowNum} ,#{page.pageSize} 
  </select>
    
  <update id="updatePosOrderItemCostSchedule" parameterType="map">
  <include refid="update_flag" />
  	UPDATE order_main om , order_dtl od, item_cost
		SET od.`unit_cost`=item_cost.`unit_cost`
		WHERE om.`order_no` = od.`order_no` 
		  AND om.COMPANY_NO = ITEM_COST.COMPANY_NO 
		  AND od.ITEM_NO = ITEM_COST.ITEM_NO 
		  AND om.YEAR = ITEM_COST.YEAR 
		  AND om.MONTH = ITEM_COST.MONTH   
		AND od.`unit_cost` &lt;&gt; item_cost.`unit_cost` 
		AND om.COMPANY_NO = #{params.companyNo} AND item_cost.sharding_flag=#{params.shardingFlag}
		AND om.sharding_flag=#{params.shardingFlag} AND od.sharding_flag=#{params.shardingFlag}
		AND om.`out_date` BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
  </update>
  
  <update id="updateReturnExchangeItemCostSchedule" parameterType="map">
  <include refid="update_flag" />
  	UPDATE return_exchange_main om , return_exchange_dtl od, item_cost
		SET od.`unit_cost`=item_cost.`unit_cost`
		WHERE om.`business_no` = od.`business_no` 
		  AND om.COMPANY_NO = ITEM_COST.COMPANY_NO 
		  AND od.ITEM_NO = ITEM_COST.ITEM_NO 
		  AND om.YEAR = ITEM_COST.YEAR 
		  AND om.MONTH = ITEM_COST.MONTH    
		AND od.`unit_cost` &lt;&gt; item_cost.`unit_cost`
		AND om.COMPANY_NO = #{params.companyNo} AND item_cost.sharding_flag=#{params.shardingFlag}
		AND om.sharding_flag=#{params.shardingFlag} AND od.sharding_flag=#{params.shardingFlag}
		AND om.`out_date` BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
  </update>
  
  <select id="getBBICUnmatchCountSchedule" resultType="java.lang.Integer" parameterType="map">
  	SELECT COUNT(1) FROM bill_buy_balance bbb
  	INNER JOIN 
	(SELECT company_no,year,month,item_no,unit_cost FROM item_cost 
		WHERE company_no= #{params.companyNo} AND year=#{params.year} AND month=#{params.month} AND sharding_flag = #{params.shardingFlag}
	) ic ON bbb.buyer_no = ic.company_no AND bbb.item_no = ic.item_no 
		AND IFNULL(bbb.receive_date,bbb.send_date) BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
     WHERE bbb.unit_cost != ic.unit_cost
  </select>
  
  <select id="getBBICUnmatchByPageSchedule" resultMap="BillBuyBalanceResultMap" parameterType="map">
  	SELECT bbb.id, bbb.bill_no, bbb.bill_type, bbb.biz_type, bbb.ref_bill_no, bbb.ref_bill_type, bbb.original_bill_no, bbb.status, 
    bbb.buyer_no, bbb.buyer_name, bbb.saler_no, bbb.saler_name, bbb.send_date, bbb.receive_date, bbb.send_store_no, 
    bbb.send_store_name, bbb.receive_store_no, bbb.receive_store_name, bbb.sku_id, bbb.sku_no, bbb.supplier_no, 
    bbb.supplier_name, bbb.item_no, bbb.item_code, bbb.item_name, bbb.brand_no, bbb.brand_name, bbb.category_no, 
    bbb.category_name, bbb.cost, bbb.bill_cost, bbb.tax_rate, bbb.exclusive_cost, 
    bbb.headquarter_cost, bbb.region_cost, ic.unit_cost, bbb.send_qty, bbb.receive_qty, 
    bbb.order_no, bbb.balance_no, bbb.balance_status, bbb.balance_type, bbb.is_split, bbb.path_no, bbb.order_unit_no, 
    bbb.order_unit_name, bbb.organ_no, bbb.organ_name, bbb.order_unit_no_from, bbb.order_unit_name_from, 
    bbb.organ_no_from, bbb.organ_name_from, bbb.zone_no, bbb.zone_name, bbb.zone_no_from, bbb.zone_name_from ,bbb.cost_checked
    FROM bill_buy_balance bbb
    INNER JOIN 
	(SELECT company_no,year,month,item_no,unit_cost FROM item_cost 
		WHERE company_no= #{params.companyNo} AND year=#{params.year} AND month=#{params.month} AND sharding_flag = #{params.shardingFlag}
	) ic ON bbb.buyer_no = ic.company_no AND bbb.item_no = ic.item_no 
		AND IFNULL(bbb.receive_date,bbb.send_date) BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
     WHERE bbb.unit_cost != ic.unit_cost
  </select>
  
  <select id="getSBICUnmatchCountSchedule" resultType="java.lang.Integer" parameterType="map">
  	SELECT COUNT(1) FROM bill_sale_balance bsb
  	INNER JOIN 
	(SELECT company_no,year,month,item_no,unit_cost FROM item_cost 
		WHERE company_no= #{params.companyNo} AND year=#{params.year} AND month=#{params.month} AND sharding_flag = #{params.shardingFlag}
	) ic ON bsb.saler_no = ic.company_no AND bsb.item_no = ic.item_no 
		AND bsb.send_date BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
     WHERE bsb.unit_cost != ic.unit_cost
  </select>
  
  <select id="getSBICUnmatchByPageSchedule" resultMap="BillSaleBalanceResultMap" parameterType="map">
  	SELECT bsb.id, bsb.bill_no, bsb.bill_type, bsb.biz_type, bsb.ref_bill_no, bsb.ref_bill_type, bsb.original_bill_no, bsb.status, 
    bsb.buyer_no, bsb.buyer_name, bsb.saler_no, bsb.saler_name, bsb.send_date, bsb.receive_date, bsb.send_store_no, 
    bsb.send_store_name, bsb.receive_store_no, bsb.receive_store_name, bsb.sku_id, bsb.sku_no, bsb.supplier_no, 
    bsb.supplier_name, bsb.item_no, bsb.item_code, bsb.item_name, bsb.brand_no, bsb.brand_name, bsb.category_no, 
    bsb.category_name, bsb.cost, bsb.bill_cost, bsb.tax_rate, bsb.exclusive_cost, 
    bsb.headquarter_cost, bsb.region_cost, ic.unit_cost, bsb.send_qty, bsb.receive_qty, 
    bsb.order_no, bsb.balance_no, bsb.balance_status, bsb.balance_type, bsb.is_split, bsb.path_no, bsb.order_unit_no, 
    bsb.order_unit_name, bsb.organ_no, bsb.organ_name, bsb.order_unit_no_from, bsb.order_unit_name_from, 
    bsb.organ_no_from, bsb.organ_name_from, bsb.zone_no, bsb.zone_name, bsb.zone_no_from, bsb.zone_name_from ,bsb.cost_checked
    FROM bill_sale_balance bsb
    INNER JOIN 
	(SELECT company_no,year,month,item_no,unit_cost FROM item_cost 
		WHERE company_no= #{params.companyNo} AND year=#{params.year} AND month=#{params.month} AND sharding_flag = #{params.shardingFlag}
	) ic ON bsb.saler_no = ic.company_no AND bsb.item_no = ic.item_no 
		AND bsb.send_date BETWEEN DATE_FORMAT(#{params.startDate},'%Y-%m-%d') AND DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
     WHERE bsb.unit_cost != ic.unit_cost
  </select>
  
  
  <delete id="deleteCurrentMonthCost" parameterType="map" >
    DELETE FROM item_cost 
    	WHERE lot IS NULL AND company_no = #{params.companyNo} AND year = #{params.year} AND month= #{params.month} 
    		<if test="null != params.brandNos and '' != params.brandNos">
				   AND brand_no in 
				   <foreach collection="params.brandNos" item="brandNo" separator="," open="(" close=")" index=""> 
						#{brandNo}  
				   </foreach>  
			</if>
    		<if test="null != params.itemNos and '' != params.itemNos">
				   AND item_no in 
				   <foreach collection="params.itemNos" item="itemNo" separator="," open="(" close=")" index=""> 
						#{itemNo}  
				   </foreach>  
			</if>
  </delete>
  
  <select id="selectCompanyLastCostCount" resultType="java.lang.Integer" >
  SELECT count(1) FROM item_cost ic 
		WHERE ic.company_no = #{params.companyNo} AND ic.year = #{params.year} AND ic.month = #{params.month}
			<if test="null != params.itemNos and '' != params.itemNos">
			   AND ic.item_no in 
			   <foreach collection="params.itemNos" item="itemNo" separator="," open="(" close=")" index=""> 
					#{itemNo}  
			   </foreach>  
		   </if>
		   <if test="null != params.brandNos and '' != params.brandNos">
			   AND ic.brand_no in 
			   <foreach collection="params.brandNos" item="brandNo" separator="," open="(" close=")" index=""> 
					#{brandNo}  
			   </foreach>  
		   </if>
  </select>
  
  <select id="selectCompanyLastCostByPage" resultMap="BaseResultMap" parameterType="map" >
  SELECT ic.sharding_flag, ic.id, ic.company_no, ic.company_name, ic.item_no, ic.item_code, ic.item_name, ic.brand_no, ic.store_no, ic.location, 
    ic.lot, ic.cost_method, ic.unit_cost, ic.unit, ic.year, ic.month, ic.create_user, ic.create_time, ic.update_user, 
    ic.update_time
		FROM item_cost ic
		WHERE ic.company_no = #{params.companyNo} AND ic.year = #{params.year} AND ic.month = #{params.month}
			<if test="null != params.itemNos and '' != params.itemNos">
			   AND ic.item_no in 
			   <foreach collection="params.itemNos" item="itemNo" separator="," open="(" close=")" index=""> 
					#{itemNo}  
			   </foreach>  
		   </if>
		   <if test="null != params.brandNos and '' != params.brandNos">
			   AND ic.brand_no in 
			   <foreach collection="params.brandNos" item="brandNo" separator="," open="(" close=")" index=""> 
					#{brandNo}  
			   </foreach>  
		   </if>
		LIMIT #{page.startRowNum} ,#{page.pageSize}
  </select>
  
  <select id="findAdjustedItemCosts" resultMap="BaseResultMap" parameterType="map" >
  SELECT ic.id, ic.company_no, ic.company_name, ic.item_no, ic.item_code, ic.item_name, ic.brand_no, ic.store_no, ic.location, 
    ic.lot, ic.cost_method, ic.unit_cost, ic.unit, ic.year, ic.month, ic.create_user, ic.create_time, ic.update_user, 
    ic.update_time FROM item_cost ic
    		WHERE ic.lot ='M' AND ic.company_no = #{params.companyNo}
		       AND ic.year = #{params.year} AND ic.month = #{params.month} AND ic.sharding_flag = #{params.shardingFlag}
		   <if test="null != params.brandNos and '' != params.brandNos">
			   AND ic.brand_no in 
			   <foreach collection="params.brandNos" item="brandNo" separator="," open="(" close=")" index=""> 
					#{brandNo}  
			   </foreach>  
		   </if>
			<if test="null != params.itemNos and '' != params.itemNos">
			   AND ic.item_no in 
			   <foreach collection="params.itemNos" item="itemNo" separator="," open="(" close=")" index=""> 
					#{itemNo}  
			   </foreach>  
		   </if>
		   LIMIT 0,65535
  </select>
  
  <insert id="batchInsertItemCost" parameterType="java.util.List" >
   INSERT INTO item_cost
    (id, company_no, company_name, item_no, item_code, item_name, brand_no, store_no, location, lot, cost_method, unit_cost, 
    	unit, year, month, create_user, create_time, update_user, update_time,sharding_flag
    )
   VALUES 
    <foreach collection="subList" item="item" index="index" separator="," >
    (replace(uuid(), '-', ''), #{item.companyNo,jdbcType=CHAR}, #{item.companyName,jdbcType=VARCHAR}, #{item.itemNo,jdbcType=CHAR}, 
      #{item.itemCode,jdbcType=VARCHAR}, #{item.itemName,jdbcType=VARCHAR}, #{item.brandNo,jdbcType=CHAR}, #{item.storeNo,jdbcType=CHAR}, #{item.location,jdbcType=VARCHAR}, 
      #{item.lot,jdbcType=VARCHAR}, #{item.costMethod,jdbcType=VARCHAR}, #{item.unitCost,jdbcType=DECIMAL}, 
      #{item.unit,jdbcType=VARCHAR}, #{item.year,jdbcType=CHAR}, #{item.month,jdbcType=CHAR}, 
      #{item.createUser,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, 
      #{item.updateUser,jdbcType=VARCHAR}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.shardingFlag,jdbcType=VARCHAR}
    )
    </foreach>
  </insert>
  
  <insert id="transferLastItemCostToCurrentMonth" parameterType="map" >
    INSERT INTO item_cost
    (id, company_no, company_name, item_no, item_code, item_name, brand_no, store_no, location, cost_method, unit_cost, 
    	unit, year, month, create_user, create_time, update_user, update_time,sharding_flag
    )
	SELECT replace(uuid(), '-', ''),
		A.company_no, A.company_name, A.item_no, A.item_code, A.item_name, A.brand_no, A.store_no,
	 	A.location, A.cost_method, A.unit_cost, A.unit, 
	 	YEAR(date_add(CAST(CONCAT(A.year,'/',A.month,'/','01') AS DATE),interval 1 month)),    
 		MONTH(date_add(CAST(CONCAT(A.year,'/',A.month,'/','01') AS DATE),interval 1 month)),
	 	A.create_user, A.create_time, A.update_user, A.update_time, A.sharding_flag
     FROM item_cost A
     LEFT JOIN 
     (SELECT company_no, year, month, item_no FROM item_cost WHERE company_no=#{params.companyNo} 
     	AND year=#{params.currentYear} AND month=#{params.currentMonth} AND sharding_flag=#{params.shardingFlag}
     	<if test="null != params.brandNos and '' != params.brandNos">
			   AND brand_no in 
			   <foreach collection="params.brandNos" item="brandNo" separator="," open="(" close=")" index=""> 
					#{brandNo}  
			   </foreach>  
		 </if>
     	<if test="null != params.itemNos and '' != params.itemNos">
			   AND item_no in 
			   <foreach collection="params.itemNos" item="itemNo" separator="," open="(" close=")" index=""> 
					#{itemNo}  
			   </foreach>  
		 </if>
     ) B ON A.company_no=B.company_no AND A.item_no=B.item_no
     WHERE B.company_no IS NULL AND A.company_no=#{params.companyNo} AND A.year=#{params.lastYear} AND A.month=#{params.lastMonth}
      AND A.sharding_flag=#{params.shardingFlag}
     	<if test="null != params.brandNos and '' != params.brandNos">
			   AND A.brand_no in 
			   <foreach collection="params.brandNos" item="brandNo" separator="," open="(" close=")" index=""> 
					#{brandNo}  
			   </foreach>  
		 </if>
     	<if test="null != params.itemNos and '' != params.itemNos">
			   AND A.item_no in 
			   <foreach collection="params.itemNos" item="itemNo" separator="," open="(" close=")" index=""> 
					#{itemNo}  
			   </foreach>  
		 </if>
		   LIMIT 0,655535
  </insert>
  
  <update id="updateItemCostInfo" parameterType="map" >
  	UPDATE item_cost SET create_user=#{params.createUser,jdbcType=VARCHAR}, create_time=#{params.createTime,jdbcType=TIMESTAMP}, 
  		update_user=#{params.createUser}, update_time=#{params.createTime}
		WHERE company_no = #{params.companyNo} AND year = #{params.year} AND month = #{params.month}
		AND sharding_flag = #{params.shardingFlag}
			<if test="null != params.brandNos and '' != params.brandNos">
				   AND brand_no in 
				   <foreach collection="params.brandNos" item="brandNo" separator="," open="(" close=")" index=""> 
						#{brandNo}  
				   </foreach>  
			</if>
			<if test="null != params.itemNos and '' != params.itemNos">
				   AND item_no in 
				   <foreach collection="params.itemNos" item="itemNo" separator="," open="(" close=")" index=""> 
						#{itemNo}  
				   </foreach>  
			 </if>
  </update>
  
  <update id="updateBuyCostById" parameterType="cn.wonhigh.retail.fas.common.model.BillBuyBalance" >
  	UPDATE bill_buy_balance 
		SET 
		<choose>  
            <when test="null != headquarterCost">  
                 headquarter_cost = #{headquarterCost}  
            </when >  
            <when test="null != regionCost">  
                 region_cost = #{regionCost}  
            </when >  
            <otherwise>  
            	 unit_cost = #{unitCost}  
            </otherwise>  
        </choose>  
	WHERE 1 = 1 
	AND id = #{id}	
  </update>
  
  <update id="updateSaleCostById" parameterType="cn.wonhigh.retail.fas.common.model.BillSaleBalance" >
  	UPDATE bill_sale_balance 
  		SET
  		<choose>  
            <when test="null != headquarterCost">  
                 headquarter_cost = #{headquarterCost}  
            </when >  
            <when test="null != regionCost">  
                 region_cost = #{regionCost}  
            </when >  
            <otherwise>  
            	 unit_cost = #{unitCost}  
            </otherwise>  
        </choose>  
	WHERE 1 = 1 
	AND id = #{id}	
  </update>
  
  <select id="findItemCostForCompanyPeriodBalance" resultMap="BaseResultMap" parameterType="map">
  	SELECT * FROM item_cost WHERE 1=1 
    -- AND @brand_no
    and lot IS NULL
    <if test="null!=params" >
      <if test="null!=params.queryCondition and ''!=params.queryCondition" >
        ${params.queryCondition}
      </if>
      <if test="null != params.companyNo and '' != params.companyNo">
      	and company_no = #{params.companyNo}
      </if>
      <if test="null != params.year and '' != params.year">
      	and year = #{params.year}
      </if>
      <if test="null != params.month and '' != params.month">
      	and month = #{params.month}
      </if>
      <if test="null != params.brandNos and '' != params.brandNos">
		AND brand_no in 
	  <foreach collection="params.brandNos" item="brandNo" separator="," open="(" close=")" index=""> 
			#{brandNo}  
	  </foreach>   
	  </if>
 	  <if test="null != params.itemNos and '' != params.itemNos">
		AND item_no in 
	  <foreach collection="params.itemNos" item="itemNo" separator="," open="(" close=")" index=""> 
			#{itemNo}  
	  </foreach>  
	 </if>
    </if>
  </select>
  
  <select id="findBLKItemCostCount" resultType="java.lang.Integer" parameterType="map">
  SELECT COUNT(1) FROM (
  	SELECT
		ic.*,i.style_no,r.region_cost,bu.name brand_name
	FROM
		item_cost ic
	LEFT JOIN item i ON ic.item_no = i.item_no
	LEFT JOIN region_cost_maintain r ON ic.item_no = r.item_no AND LEFT(ic.company_no,1) = r.zone_no
	LEFT JOIN brand b on ic.brand_no = b.brand_no
	LEFT JOIN brand_unit bu ON b.sys_no = bu.brand_unit_no
	WHERE 1 = 1
	-- AND @ic.brand_no
	AND i.style_no IS NOT NULL
	AND trim(i.style_no) != ''
    <if test="null!=params" >
      <if test="null!=params.queryCondition and ''!=params.queryCondition" >
        ${params.queryCondition}
      </if>
      <if test="null != params.companyNo and '' != params.companyNo">
      	AND ic.company_no = #{params.companyNo}
      </if>
      <if test="null != params.styleNo and '' != params.styleNo">
      	AND i.style_no = #{params.styleNo}
      </if>
      <if test="null != params.year and '' != params.year">
      	AND ic.year = #{params.year}
      </if>
      <if test="null != params.month and '' != params.month">
      	AND ic.month = #{params.month}
      </if>
      <if test="null != params.brandNo and '' != params.brandNo">
      	and ic.brand_no = #{params.brandNo}
      </if>
      <if test="null != params.brandNos and '' != params.brandNos">
		   AND ic.brand_no in ${params.brandNos}
	  </if>
	  <if test="null!=params.createTimeStart and ''!=params.createTimeStart">
       	   AND ic.create_time &gt;= '${params.createTimeStart} 00:00:00'
      </if>
      <if test="null!=params.createTimeEnd and ''!=params.createTimeEnd">
       	   AND ic.create_time &lt;= '${params.createTimeEnd} 23:59:59'
      </if>
    </if>
	GROUP BY i.style_no
  ) A
  </select>
  
  <select id="findBLKItemCostList" resultMap="BaseResultMap" parameterType="map">
  	SELECT
		ic.*,i.style_no,r.region_cost,bu.name brand_name
	FROM
		item_cost ic
	LEFT JOIN item i ON ic.item_no = i.item_no
	LEFT JOIN region_cost_maintain r ON ic.item_no = r.item_no AND LEFT(ic.company_no,1) = r.zone_no
	LEFT JOIN brand b on ic.brand_no = b.brand_no
	LEFT JOIN brand_unit bu ON b.sys_no = bu.brand_unit_no
	WHERE 1 = 1
	-- AND @ic.brand_no
	AND i.style_no IS NOT NULL
	AND trim(i.style_no) != ''
    <if test="null!=params" >
      <if test="null!=params.queryCondition and ''!=params.queryCondition" >
        ${params.queryCondition}
      </if>
      <if test="null != params.companyNo and '' != params.companyNo">
      	AND ic.company_no = #{params.companyNo}
      </if>
      <if test="null != params.styleNo and '' != params.styleNo">
      	AND i.style_no = #{params.styleNo}
      </if>
      <if test="null != params.styleNos and '' != params.styleNos">
	    <foreach collection="params.styleNos" item="styleNo" separator="," open="AND i.style_no in (" close=")" index=""> 
			#{styleNo}  
		</foreach>  
	  </if>
      <if test="null != params.year and '' != params.year">
      	AND ic.year = #{params.year}
      </if>
      <if test="null != params.month and '' != params.month">
      	AND ic.month = #{params.month}
      </if>
      <if test="null != params.brandNo and '' != params.brandNo">
      	and ic.brand_no = #{params.brandNo}
      </if>
      <if test="null != params.brandNos and '' != params.brandNos">
		   AND ic.brand_no in ${params.brandNos}
	  </if>
	  <if test="null!=params.createTimeStart and ''!=params.createTimeStart">
       	   AND ic.create_time &gt;= '${params.createTimeStart} 00:00:00'
      </if>
      <if test="null!=params.createTimeEnd and ''!=params.createTimeEnd">
       	   AND ic.create_time &lt;= '${params.createTimeEnd} 23:59:59'
      </if>
    </if>
	GROUP BY i.style_no
	ORDER BY ic.create_time DESC
	LIMIT #{page.startRowNum} ,#{page.pageSize}
  </select>
  
  <delete id="runSqlForD" parameterType="map">
  	<if test="null!=params" >
      <if test="null!=params.queryCondition and ''!=params.queryCondition" >
        ${params.queryCondition}
      </if>
    </if>
  </delete>
  
  <update id="runSqlForU" parameterType="map">
  	<if test="null!=params" >
      <if test="null!=params.queryCondition and ''!=params.queryCondition" >
        ${params.queryCondition}
      </if>
    </if>
  </update>
  
  <insert id="runSqlForC" parameterType="map">
  	<if test="null!=params" >
      <if test="null!=params.queryCondition and ''!=params.queryCondition" >
        ${params.queryCondition}
      </if>
    </if>
  </insert>
</mapper>